{"version":3,"sources":["errorHandler.js"],"names":["imageStorage","deleteImageFromStorage","isNumber","Number","isNaN","parseFloat","n","isFloat","errorHandler","createHandlerError","error","res","fileName","status","send","notFoundHandlerError","fieldName","message","incompleteFieldHandlerError","fileHandleError","json","usernameHandlerError","emailHandlerError","phoneHandlerError","questionHandlerError","userNotPrestentHandlerError","noTokenHandlerError","auth","failedAuthHandlerError","parametersHandlerError","req","params","questionId","isInteger","parseInt"],"mappings":"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","file":"errorHandler.js","sourceRoot":"/home/somto/1Projects/mentorship project/StackOverflow-lite/server/server/controllers/utilities","sourcesContent":["import imageStorage from './filebaseStorage';\n\nconst [deleteImageFromStorage] = [imageStorage.deleteImageFromStorage];\n\n// number validation\nconst isNumber = n => !Number.isNaN(parseFloat(n));\n\nconst isFloat = n => Number(n) === n && n % 1 !== 0;\n\nconst errorHandler = {\n  createHandlerError(error, res, fileName) {\n    if (fileName) deleteImageFromStorage(fileName); // if file uploads delete it\n    return res.status(400).send(error);\n  },\n  notFoundHandlerError(fieldName, res) {\n    return res.status(404).send({ message: `${fieldName} not found` });\n  },\n  incompleteFieldHandlerError(res) {\n    return res.status(206).send({ message: 'Incomplete field' });\n  },\n  fileHandleError(res, message) { // file type handleError\n    return res.status(403).json({ message, error: true });\n  },\n  usernameHandlerError(res) {\n    return res.status(400).send({ message: 'username already exists' });\n  },\n  emailHandlerError(res) {\n    return res.status(400).send({ message: 'email already exists' });\n  },\n  phoneHandlerError(res) {\n    return res.status(400).send({ message: 'phone already exists' });\n  },\n  questionHandlerError(res) {\n    return res.status(400).send({ message: 'question already exists' });\n  },\n  userNotPrestentHandlerError(res, fileName) {\n    if (fileName) deleteImageFromStorage(fileName); // if file uploads delete it\n    return res.status(400).send({ message: 'user has been removed from the database' });\n  },\n  noTokenHandlerError(res) {\n    return res.status(401).send({ auth: false, message: 'No token provided.' });\n  },\n  failedAuthHandlerError(res) {\n    return res.status(500).send({ auth: false, message: 'Failed to authenticate token.' });\n  },\n  parametersHandlerError(req) {\n    if (!isNumber(req.params.questionId) || !Number.isInteger(parseInt(req.params.questionId, 10))\n        || req.params.questionId > 1000000000 || isFloat(parseFloat(req.params.questionId))) {\n      return true;\n    } return false;\n  }\n};\n\nexport default errorHandler;\n"]}