'use strict';var cov_rknj7jo7b=function(){var path="/home/somto/1Projects/mentorship project/StackOverflow-lite/server/test/answers-spec.js",hash="59db7bb909203dba9ad128d8427d6ae0f0a7b659",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/somto/1Projects/mentorship project/StackOverflow-lite/server/test/answers-spec.js",statementMap:{"0":{start:{line:3,column:12},end:{line:3,column:27}},"1":{start:{line:5,column:13},end:{line:5,column:42}},"2":{start:{line:7,column:17},end:{line:7,column:37}},"3":{start:{line:9,column:18},end:{line:9,column:52}},"4":{start:{line:11,column:12},end:{line:11,column:27}},"5":{start:{line:13,column:13},end:{line:13,column:42}},"6":{start:{line:15,column:16},end:{line:15,column:36}},"7":{start:{line:17,column:17},end:{line:17,column:50}},"8":{start:{line:19,column:11},end:{line:19,column:28}},"9":{start:{line:21,column:12},end:{line:21,column:40}},"10":{start:{line:23,column:14},end:{line:23,column:41}},"11":{start:{line:25,column:15},end:{line:25,column:46}},"12":{start:{line:27,column:18},end:{line:27,column:52}},"13":{start:{line:29,column:19},end:{line:29,column:54}},"14":{start:{line:31,column:23},end:{line:31,column:81}},"15":{start:{line:33,column:24},end:{line:33,column:64}},"16":{start:{line:35,column:39},end:{line:35,column:93}},"17":{start:{line:37,column:0},end:{line:37,column:30}},"18":{start:{line:39,column:0},end:{line:39,column:24}},"19":{start:{line:40,column:0},end:{line:40,column:39}},"20":{start:{line:41,column:14},end:{line:41,column:53}},"21":{start:{line:42,column:11},end:{line:42,column:34}},"22":{start:{line:43,column:11},end:{line:43,column:18}},"23":{start:{line:44,column:12},end:{line:44,column:39}},"24":{start:{line:45,column:15},end:{line:45,column:23}},"25":{start:{line:46,column:12},end:{line:46,column:37}},"26":{start:{line:47,column:13},end:{line:47,column:21}},"27":{start:{line:48,column:12},end:{line:48,column:62}},"28":{start:{line:49,column:29},end:{line:49,column:37}},"29":{start:{line:55,column:0},end:{line:875,column:3}},"30":{start:{line:56,column:2},end:{line:63,column:5}},"31":{start:{line:58,column:4},end:{line:58,column:45}},"32":{start:{line:59,column:4},end:{line:59,column:49}},"33":{start:{line:60,column:4},end:{line:62,column:7}},"34":{start:{line:61,column:6},end:{line:61,column:20}},"35":{start:{line:65,column:2},end:{line:356,column:5}},"36":{start:{line:66,column:4},end:{line:78,column:7}},"37":{start:{line:67,column:6},end:{line:77,column:9}},"38":{start:{line:68,column:8},end:{line:76,column:11}},"39":{start:{line:69,column:10},end:{line:75,column:13}},"40":{start:{line:70,column:12},end:{line:70,column:40}},"41":{start:{line:71,column:12},end:{line:71,column:43}},"42":{start:{line:72,column:12},end:{line:72,column:77}},"43":{start:{line:74,column:12},end:{line:74,column:19}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:35,column:9},end:{line:35,column:31}},loc:{start:{line:35,column:37},end:{line:35,column:95}},line:35},"1":{name:"(anonymous_1)",decl:{start:{line:55,column:20},end:{line:55,column:21}},loc:{start:{line:55,column:32},end:{line:875,column:1}},line:55},"2":{name:"(anonymous_2)",decl:{start:{line:56,column:13},end:{line:56,column:14}},loc:{start:{line:56,column:29},end:{line:63,column:3}},line:56},"3":{name:"(anonymous_3)",decl:{start:{line:60,column:52},end:{line:60,column:53}},loc:{start:{line:60,column:64},end:{line:62,column:5}},line:60},"4":{name:"(anonymous_4)",decl:{start:{line:65,column:27},end:{line:65,column:28}},loc:{start:{line:65,column:39},end:{line:356,column:3}},line:65},"5":{name:"(anonymous_5)",decl:{start:{line:66,column:58},end:{line:66,column:59}},loc:{start:{line:66,column:74},end:{line:78,column:5}},line:66},"6":{name:"(anonymous_6)",decl:{start:{line:67,column:313},end:{line:67,column:314}},loc:{start:{line:67,column:335},end:{line:77,column:7}},line:67},"7":{name:"(anonymous_7)",decl:{start:{line:68,column:216},end:{line:68,column:217}},loc:{start:{line:68,column:238},end:{line:76,column:9}},line:68},"8":{name:"(anonymous_8)",decl:{start:{line:69,column:160},end:{line:69,column:161}},loc:{start:{line:69,column:180},end:{line:75,column:11}},line:69}},branchMap:{"0":{loc:{start:{line:35,column:46},end:{line:35,column:92}},type:"cond-expr",locations:[{start:{line:35,column:70},end:{line:35,column:73}},{start:{line:35,column:76},end:{line:35,column:92}}],line:35},"1":{loc:{start:{line:35,column:46},end:{line:35,column:67}},type:"binary-expr",locations:[{start:{line:35,column:46},end:{line:35,column:49}},{start:{line:35,column:53},end:{line:35,column:67}}],line:35}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"d34fc3e6b8297bcde183f5492bcb8fcb36775295"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var _chai=(cov_rknj7jo7b.s[0]++,require('chai'));var _chai2=(cov_rknj7jo7b.s[1]++,_interopRequireDefault(_chai));var _supertest=(cov_rknj7jo7b.s[2]++,require('supertest'));var _supertest2=(cov_rknj7jo7b.s[3]++,_interopRequireDefault(_supertest));var _path=(cov_rknj7jo7b.s[4]++,require('path'));var _path2=(cov_rknj7jo7b.s[5]++,_interopRequireDefault(_path));var _chaiHttp=(cov_rknj7jo7b.s[6]++,require('chai-http'));var _chaiHttp2=(cov_rknj7jo7b.s[7]++,_interopRequireDefault(_chaiHttp));var _app=(cov_rknj7jo7b.s[8]++,require('../app'));var _app2=(cov_rknj7jo7b.s[9]++,_interopRequireDefault(_app));var _models=(cov_rknj7jo7b.s[10]++,require('../server/models'));var _models2=(cov_rknj7jo7b.s[11]++,_interopRequireDefault(_models));var _fileSystem=(cov_rknj7jo7b.s[12]++,require('../utilities/fileSystem'));var _fileSystem2=(cov_rknj7jo7b.s[13]++,_interopRequireDefault(_fileSystem));var _filebaseStorage=(cov_rknj7jo7b.s[14]++,require('../server/controllers/utilities/filebaseStorage'));var _filebaseStorage2=(cov_rknj7jo7b.s[15]++,_interopRequireDefault(_filebaseStorage));function _interopRequireDefault(obj){cov_rknj7jo7b.f[0]++;cov_rknj7jo7b.s[16]++;return(cov_rknj7jo7b.b[1][0]++,obj)&&(cov_rknj7jo7b.b[1][1]++,obj.__esModule)?(cov_rknj7jo7b.b[0][0]++,obj):(cov_rknj7jo7b.b[0][1]++,{default:obj});}cov_rknj7jo7b.s[17]++;process.env.NODE_ENV='test';cov_rknj7jo7b.s[18]++;_chai2.default.should();cov_rknj7jo7b.s[19]++;_chai2.default.use(_chaiHttp2.default);var request=(cov_rknj7jo7b.s[20]++,(0,_supertest2.default)(_app2.default));var _ref=(cov_rknj7jo7b.s[21]++,[_models2.default.User]),User=(cov_rknj7jo7b.s[22]++,_ref[0]);var _ref2=(cov_rknj7jo7b.s[23]++,[_models2.default.Question]),Question=(cov_rknj7jo7b.s[24]++,_ref2[0]);var _ref3=(cov_rknj7jo7b.s[25]++,[_models2.default.Answer]),Answer=(cov_rknj7jo7b.s[26]++,_ref3[0]);var _ref4=(cov_rknj7jo7b.s[27]++,[_filebaseStorage2.default.deleteImageFromStorage]),deleteImageFromStorage=(cov_rknj7jo7b.s[28]++,_ref4[0]);// // Delete file helper method
// const [deleteFile] = [fsHelper.deleteFile];
//
cov_rknj7jo7b.s[29]++;describe('Answers',function(){cov_rknj7jo7b.f[1]++;cov_rknj7jo7b.s[30]++;beforeEach(function(done){cov_rknj7jo7b.f[2]++;cov_rknj7jo7b.s[31]++;// Before each test we empty the database
User.destroy({where:{},force:true});cov_rknj7jo7b.s[32]++;Question.destroy({where:{},force:true});cov_rknj7jo7b.s[33]++;Answer.destroy({where:{},force:true}).then(function(){cov_rknj7jo7b.f[3]++;cov_rknj7jo7b.s[34]++;return done();});});cov_rknj7jo7b.s[35]++;describe('/POST answer',function(){cov_rknj7jo7b.f[4]++;cov_rknj7jo7b.s[36]++;it('it should not CREATE an answer without response',function(done){cov_rknj7jo7b.f[5]++;cov_rknj7jo7b.s[37]++;request.post('/auth/v1/signup').field('title','mr').field('firstname','Justin').field('lastname','Ikwuoma').field('username','justman').field('password','abc').field('email','justin@gmail.com').field('gender','male').field('country','Nigeria').field('phone','66979649').attach('userImage','').end(function(err1,res1){cov_rknj7jo7b.f[6]++;cov_rknj7jo7b.s[38]++;request.post('/v1/questions').set('x-access-token',res1.body.token).field('title','How far na').field('question','I just wan no how u dey').field('tags','java,javascript').attach('questionImage','').end(function(err2,res2){cov_rknj7jo7b.f[7]++;cov_rknj7jo7b.s[39]++;request.post('/v1/questions/'+res2.body.id+'/answers').set('x-access-token',res1.body.token).field('response','').attach('answerImage','').end(function(err,res){cov_rknj7jo7b.f[8]++;cov_rknj7jo7b.s[40]++;res.should.have.status(206);cov_rknj7jo7b.s[41]++;res.body.should.be.a('object');cov_rknj7jo7b.s[42]++;res.body.should.have.property('message').eql('Incomplete field');cov_rknj7jo7b.s[43]++;done();});});});});//     it('it should CREATE an answer', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', './testFile.png')
//                 .end((err, res) => {
//                   res.should.have.status(201);
//                   res.body.should.be.a('object');
//                   res.body.should.have.property('response').eql('very fine');
//                   res.body.should.have.property('userid').eql(res1.body.user.id);
//                   res.body.should.have.property('accepted').eql(false);
//                   res.body.should.have.property('vote').eql(0);
//                   res.body.should.have.property('answerimage').eql(res.body.answerimage);
//
//                   // delete test image file
//                   if (path.resolve('./testFile.png')) {
//                     deleteFile(`./${res.body.answerimage}`);
//                   }
//                   done();
//                 });
//             });
//         });
//     });
//     it('it should CREATE an answer without image', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', '')
//                 .end((err, res) => {
//                   res.should.have.status(201);
//                   res.body.should.be.a('object');
//                   res.body.should.have.property('response').eql('very fine');
//                   res.body.should.have.property('userid').eql(res1.body.user.id);
//                   res.body.should.have.property('accepted').eql(false);
//                   res.body.should.have.property('vote').eql(0);
//                   res.body.should.have.property('answerimage').eql('');
//
//                   done();
//                 });
//             });
//         });
//     });
//     it('it should not CREATE an answer when image file type not jpg/png', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', './testFileType.txt')
//                 .end((err, res) => {
//                   res.should.have.status(403);
//                   res.body.should.be.a('object');
//                   res.body.should.have.property('message').eql('Only .png and .jpg files are allowed!');
//                   res.body.should.have.property('error').eql(true);
//
//                   done();
//                 });
//             });
//         });
//     });
//     it('it should not CREATE an answer when image file size is larger than 2mb', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', './testFileSize.jpg')
//                 .end((err, res) => {
//                   res.should.have.status(403);
//                   res.body.should.be.a('object');
//                   res.body.should.have.property('message')
//                     .eql('file should not be more than 2mb!');
//                   res.body.should.have.property('error').eql(true);
//
//                   done();
//                 });
//             });
//         });
//     });
//     it('it should not CREATE an answer when a token is not provided', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .field('response', 'very fine')
//                 .attach('answerImage', './testFile.png')
//                 .end((err, res) => {
//                   res.should.have.status(401);
//                   res.body.should.be.a('object');
//                   res.body.should.have.property('auth').eql(false);
//                   res.body.should.have.property('message').eql('No token provided.');
//
//                   done();
//                 });
//             });
//         });
//     });
//     it('it should not CREATE an answer when it fails to authenticate token', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', 'jdkjdfskjs43354mxxnzsdz.drfsff.srfsf35324')
//                 .field('response', 'very fine')
//                 .attach('answerImage', './testFile.png')
//                 .end((err, res) => {
//                   res.should.have.status(500);
//                   res.body.should.be.a('object');
//                   res.body.should.have.property('auth').eql(false);
//                   res.body.should.have.property('message').eql('Failed to authenticate token.');
//
//                   done();
//                 });
//             });
//         });
//     });
//     it('it should not CREATE an answer when user is delete but token exist', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               User.destroy({ where: { id: res1.body.user.id } }).then(() => {
//                 request
//                   .post(`/v1/questions/${res2.body.id}/answers`)
//                   .set('x-access-token', res1.body.token)
//                   .field('response', 'very fine')
//                   .attach('answerImage', './testFile.png')
//                   .end((err, res) => {
//                     res.should.have.status(400);
//                     res.body.should.be.a('object');
//                     res.body.should.have.property('message')
//                       .eql('user has been removed from the database');
//                     done();
//                   });
//               });
//             });
//         });
//     });
});//   /*
//    * Test the /PUT/:id route
//    */
//   describe('/PUT/:id answer', () => {
//     it('it should UPDATE an answer given the answer id by the question author', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', '')
//                 .end((err, res) => {
//                   request
//                     .put(`/v1/questions/${res2.body.id}/answers/${res.body.id}`)
//                     .set('x-access-token', res1.body.token)
//                     .field('accepted', true)
//                     .end((err, res) => {
//                       res.should.have.status(200);
//                       res.body.should.be.a('object');
//                       res.body.should.have.property('response').eql('very fine');
//                       res.body.should.have.property('userid').eql(res1.body.user.id);
//                       res.body.should.have.property('accepted').eql(true);
//                       res.body.should.have.property('vote').eql(0);
//                       res.body.should.have.property('answerimage').eql('');
//                       done();
//                     });
//                 });
//             });
//         });
//     });
//
//     it('it should UPDATE an answer given the answer id by the answer author', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', '')
//                 .end((err, res) => {
//                   request
//                     .put(`/v1/questions/${res2.body.id}/answers/${res.body.id}`)
//                     .set('x-access-token', res1.body.token)
//                     .field('response', 'i am ok')
//                     .attach('answerImage', './testFile.png')
//                     .end((err, res) => {
//                       res.should.have.status(200);
//                       res.body.should.be.a('object');
//                       res.body.should.have.property('response').eql('i am ok');
//                       res.body.should.have.property('userid').eql(res1.body.user.id);
//                       res.body.should.have.property('accepted').eql(false);
//                       res.body.should.have.property('vote').eql(0);
//                       res.body.should.have.property('answerimage').eql(res.body.answerimage);
//
//                       // delete test image file
//                       if (path.resolve('./testFile.png')) {
//                         deleteFile(`./${res.body.answerimage}`);
//                       }
//                       done();
//                     });
//                 });
//             });
//         });
//     });
//     it('it should not UPDATE an answer given the wrong answer id', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', '')
//                 .end(() => {
//                   request
//                     .put(`/v1/questions/${res2.body.id}/answers/-1`)
//                     .set('x-access-token', res1.body.token)
//                     .field('response', 'i am ok')
//                     .attach('answerImage', './testFile.png')
//                     .end((err, res) => {
//                       res.should.have.status(404);
//                       res.body.should.be.a('object');
//                       res.body.should.have.property('message').eql('answer not found');
//
//                       done();
//                     });
//                 });
//             });
//         });
//     });
//     it('it should not UPDATE an answer given the wrong question id', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', '')
//                 .end((err, res) => {
//                   request
//                     .put(`/v1/questions/-1/answers/${res.body.id}`)
//                     .set('x-access-token', res1.body.token)
//                     .field('response', 'i am ok')
//                     .attach('answerImage', './testFile.png')
//                     .end((err, res) => {
//                       res.should.have.status(404);
//                       res.body.should.be.a('object');
//                       res.body.should.have.property('message').eql('question not found');
//
//                       done();
//                     });
//                 });
//             });
//         });
//     });
//     it(`it should UPDATE an answer given the id and
//     maintain already existing fields and file if none is entered`, (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', './testFile.png')
//                 .end((err, res) => {
//                   request
//                     .put(`/v1/questions/${res2.body.id}/answers/${res.body.id}`)
//                     .set('x-access-token', res1.body.token)
//                     .field('response', '')
//                     .attach('answerImage', '')
//                     .end((err, res) => {
//                       res.should.have.status(200);
//                       res.body.should.be.a('object');
//                       res.body.should.have.property('response').eql('very fine');
//                       res.body.should.have.property('userid').eql(res1.body.user.id);
//                       res.body.should.have.property('accepted').eql(false);
//                       res.body.should.have.property('vote').eql(0);
//                       res.body.should.have.property('answerimage').eql(res.body.answerimage);
//
//                       // delete test image file
//                       if (path.resolve('./testFile.png')) {
//                         deleteFile(`./${res.body.answerimage}`);
//                       }
//                       done();
//                     });
//                 });
//             });
//         });
//     });
//     it('it should UPDATE a answer given the id and replace already existing file', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', './testFile.png')
//                 .end((err, res) => {
//                   request
//                     .put(`/v1/questions/${res2.body.id}/answers/${res.body.id}`)
//                     .set('x-access-token', res1.body.token)
//                     .field('response', '')
//                     .attach('answerImage', './testFile.png')
//                     .end((err, res) => {
//                       res.should.have.status(200);
//                       res.body.should.be.a('object');
//                       res.body.should.have.property('response').eql('very fine');
//                       res.body.should.have.property('userid').eql(res1.body.user.id);
//                       res.body.should.have.property('accepted').eql(false);
//                       res.body.should.have.property('vote').eql(0);
//                       res.body.should.have.property('answerimage').eql(res.body.answerimage);
//
//                       // delete test image file
//                       if (path.resolve('./testFile.png')) {
//                         deleteFile(`./${res.body.answerimage}`);
//                       }
//                       done();
//                     });
//                 });
//             });
//         });
//     });
//     it('it should not UPDATE an answer when image file type not jpg/png', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', '')
//                 .end((err, res) => {
//                   request
//                     .put(`/v1/questions/${res2.body.id}/answers/${res.body.id}`)
//                     .set('x-access-token', res1.body.token)
//                     .field('response', '')
//                     .attach('answerImage', './testFileType.txt')
//                     .end((err, res) => {
//                       res.should.have.status(403);
//                       res.body.should.be.a('object');
//                       res.body.should.have.property('message').eql('Only .png and .jpg files are allowed!');
//                       res.body.should.have.property('error').eql(true);
//
//                       done();
//                     });
//                 });
//             });
//         });
//     });
//     it(`it should not UPDATE a answer
//     when image file size is larger than 2mb`, (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', '')
//                 .end((err, res) => {
//                   request
//                     .put(`/v1/questions/${res2.body.id}/answers/${res.body.id}`)
//                     .set('x-access-token', res1.body.token)
//                     .field('response', '')
//                     .attach('answerImage', './testFileSize.jpg')
//                     .end((err, res) => {
//                       res.should.have.status(403);
//                       res.body.should.be.a('object');
//                       res.body.should.have.property('message').eql('file should not be more than 2mb!');
//                       res.body.should.have.property('error').eql(true);
//
//                       done();
//                     });
//                 });
//             });
//         });
//     });
//     it('it should not UPDATE an answer when a token is not provided', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', '')
//                 .end((err, res) => {
//                   request
//                     .put(`/v1/questions/${res2.body.id}/answers/${res.body.id}`)
//                     .field('response', '')
//                     .attach('answerImage', '')
//                     .end((err, res) => {
//                       res.should.have.status(401);
//                       res.body.should.be.a('object');
//                       res.body.should.have.property('auth').eql(false);
//                       res.body.should.have.property('message').eql('No token provided.');
//
//                       done();
//                     });
//                 });
//             });
//         });
//     });
//     it('it should not UPDATE a answer when it fails to authenticate token.', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', '')
//                 .end((err, res) => {
//                   request
//                     .put(`/v1/questions/${res2.body.id}/answers/${res.body.id}`)
//                     .set('x-access-token', 'nmdhnjf.njfjfj.fkfkfk')
//                     .field('response', '')
//                     .attach('answerImage', '')
//                     .end((err, res) => {
//                       res.should.have.status(500);
//                       res.body.should.be.a('object');
//                       res.body.should.have.property('auth').eql(false);
//                       res.body.should.have.property('message').eql('Failed to authenticate token.');
//
//                       done();
//                     });
//                 });
//             });
//         });
//     });
//     it('it should not UPDATE a answer when user is unauthorize.', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               Answer.create({ response: 'very fine', answerImage: '' }).then((answer) => {
//                 request
//                   .put(`/v1/questions/${res2.body.id}/answers/${answer.rows[0].id}`)
//                   .set('x-access-token', res1.body.token)
//                   .field('response', '')
//                   .attach('answerImage', '')
//                   .end((err, res) => {
//                     res.should.have.status(403);
//                     res.body.should.be.a('object');
//                     res.body.should.have.property('auth').eql(false);
//                     res.body.should.have.property('message').eql('User not allowed');
//
//                     done();
//                   });
//               });
//             });
//         });
//     });
//   });
});//# sourceMappingURL=data:application/json;charset=utf-8;base64,