{"version":3,"sources":["app.js"],"names":["app","use","set","process","env","SUPER_SECRET","express","static","bodyParser","json","urlencoded","extended","get","req","res","status","send","message"],"mappings":";;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AANA;AAOA,IAAMA,MAAM,wBAAZ;;AAGA;AACAA,IAAIC,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEAD,IAAIE,GAAJ,CAAQ,aAAR,EAAuBC,QAAQC,GAAR,CAAYC,YAAnC,E,CAAkD;;AAElD;AACAL,IAAIC,GAAJ,CAAQ,eAAR,EAAyBK,kBAAQC,MAAR,CAAe,cAAf,CAAzB;AACAP,IAAIC,GAAJ,CAAQ,mBAAR,EAA6BK,kBAAQC,MAAR,CAAe,kBAAf,CAA7B;AACAP,IAAIC,GAAJ,CAAQ,iBAAR,EAA2BK,kBAAQC,MAAR,CAAe,gBAAf,CAA3B;;AAEAP,IAAIC,GAAJ,CAAQ,OAAR,EAAiBK,kBAAQC,MAAR,CAAe,aAAf,CAAjB,E,CAAiD;;AAEjDP,IAAIC,GAAJ,CAAQ,QAAR,EAAkBK,kBAAQC,MAAR,CAAe,OAAf,CAAlB,E,CAA4C;;AAE5C;AACAP,IAAIC,GAAJ,CAAQO,qBAAWC,IAAX,EAAR;AACAT,IAAIC,GAAJ,CAAQO,qBAAWE,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;;AAEA;AACA,sBAAOX,GAAP;;AAEA;AACAA,IAAIY,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC9CC,aAAS;AADqC,GAArB,CAAd;AAAA,CAAb;;kBAIejB,G","file":"app.js","sourceRoot":"/home/somto/1Projects/mentorship project/StackOverflow-lite/server","sourcesContent":["/*  eslint import/no-cycle: [2, { maxDepth: 1 }]  */\nimport express from 'express';\nimport logger from 'morgan';\nimport bodyParser from 'body-parser';\nimport routes from './server/routes';\n\n// Set up the express app\nconst app = express();\n\n\n// Log requests to the console.\napp.use(logger('dev'));\n\napp.set('superSecret', process.env.SUPER_SECRET); // secret variable\n\n// To display images stored\napp.use('/usersUploads', express.static('usersUploads'));\napp.use('/questionsUploads', express.static('questionsUploads'));\napp.use('/answersUploads', express.static('answersUploads'));\n\napp.use('/docs', express.static('apiary.apib')); // access to documents\n\napp.use('/index', express.static('./UI/')); // html pages\n\n// Parse incoming requests data (https://github.com/expressjs/body-parser)\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\n\n// Require our routes into the application.\nroutes(app);\n\n// Setup a default catch-all route that sends back a welcome message in JSON format.\napp.get('*', (req, res) => res.status(200).send({\n  message: 'Welcome to the beginning of nothingness.',\n}));\n\nexport default app;\n"]}