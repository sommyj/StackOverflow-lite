{"version":3,"sources":["questions-spec.js"],"names":["process","env","NODE_ENV","chai","should","use","chaiHttp","request","app","model","User","Question","fsHelper","deleteFile","describe","beforeEach","done","destroy","where","force","then","it","get","end","err","res","have","status","body","be","a","questions","property","eql","length","create","title","firstname","lastname","username","password","email","gender","country","phone","userImage","user","question","userId","rows","id","tags","questionImage","deep","post","field","attach","set","token","res1","res2","answers","questionimage","path","resolve","delete","err1","err2"],"mappings":"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","file":"questions-spec.js","sourceRoot":"/home/somto/1Projects/mentorship project/StackOverflow-lite/server/test","sourcesContent":["import chai from 'chai';\nimport supertest from 'supertest';\nimport path from 'path';\nimport chaiHttp from 'chai-http';\n\nimport app from '../app';\nimport model from '../server/models';\nimport fsHelper from '../utilities/fileSystem';\n\nprocess.env.NODE_ENV = 'test';\n\nchai.should();\nchai.use(chaiHttp);\nconst request = supertest(app);\nconst [User] = [model.User];\nconst [Question] = [model.Question];\n\n// Delete file helper method\nconst [deleteFile] = [fsHelper.deleteFile];\n\ndescribe('Questions', () => {\n  beforeEach((done) => { // Before each test we empty the database\n    User.destroy({ where: {}, force: true });\n    Question.destroy({ where: {}, force: true }).then(() => done());\n  });\n\n  describe('/GET question', () => {\n    it('it should GET all the questions without data', (done) => {\n      request\n        .get('/v1/questions')\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.be.a('object');\n          res.body.questions.should.be.a('array');\n          res.body.should.have.property('auth').eql(false);\n          res.body.questions.length.should.be.eql(0);\n          done();\n        });\n    });\n    it('it should GET all the questions with data', (done) => {\n      User.create({\n        title: 'mr',\n        firstname: 'justin',\n        lastname: 'Ikwuoma',\n        username: 'justman5',\n        password: 'abc',\n        email: 'justin5@gmail.com',\n        gender: 'male',\n        country: 'Nigeria',\n        phone: '566976498',\n        userImage: ''\n      }).then((user) => {\n        Question.create({\n          title: 'I wannna know',\n          question: 'I wannna know your name',\n          userId: user.rows[0].id,\n          tags: 'java',\n          questionImage: '/something'\n        }).then(() => {\n          request\n            .get('/v1/questions')\n            .end((err, res) => {\n              res.should.have.status(200);\n              res.body.questions.should.be.a('array');\n              res.body.should.have.property('auth').eql(false);\n              res.body.questions.should.have.property(0);\n              res.body.questions.should.have.deep.property('0').property('title').eql('I wannna know');\n              res.body.questions.should.have.deep.property('0').property('question').eql('I wannna know your name');\n              res.body.questions.should.have.deep.property('0').property('tags').eql('java');\n              res.body.questions.should.have.deep.property('0').property('questionimage').eql('/something');\n              done();\n            });\n        });\n      });\n    });\n\n\n\n    it('it should GET all the questions with data and authenticate the user', (done) => {\n\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman')\n        .field('password', 'abc')\n        .field('email', 'justin@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('phone', '66979649')\n        .attach('userImage', '')\n        .end((err, res) => {\n          request\n            .post('/v1/questions')\n            .set('x-access-token', res.body.token)\n            .field('title', 'How far na')\n            .field('question', 'I just wan no how u dey')\n            .field('tags', 'java,javascript')\n            .attach('questionImage', './testFileType.txt')\n            .end((err, res1) => {\n              request\n                .get('/v1/questions')\n                .set('x-access-token', res.body.token)\n                .end((err, res2) => {\n                  res2.should.have.status(200);\n                  res2.body.questions.should.be.a('array');\n                  res2.body.should.have.property('auth').eql(true);\n                  res2.body.should.have.property('questions');\n                  // res2.body.questions.should.have.property(0);\n                  res2.body.questions.should.have.deep.property('0').property('title').eql('How far na');\n                  // res2.body.questions.should.have.deep.property('0').property('question').eql('I just wan no how u dey');\n                  // res2.body.questions.should.have.deep.property('0').property('tags').eql('java,javascript');\n                  // res2.body.questions.should.have.deep.property('0').property('questionimage').eql('./testFileType.txt');\n                  done();\n                });\n            });\n        });\n\n\n    });\n\n\n\n\n\n    it('it should not GET a question by the given wrong id', (done) => {\n      User.create({\n        title: 'mr',\n        firstname: 'justin',\n        lastname: 'Ikwuoma',\n        username: 'justman5',\n        password: 'abc',\n        email: 'justin5@gmail.com',\n        gender: 'male',\n        country: 'Nigeria',\n        phone: '566976498',\n        userImage: ''\n      }).then((user) => {\n        Question.create({\n          title: 'I wannna know',\n          question: 'I wannna know your name',\n          userId: user.rows[0].id,\n          tags: 'java,javascript',\n          questionImage: '/something'\n        }).then(() => {\n          request\n            .get('/v1/questions/-1')\n            .end((err, res) => {\n              res.should.have.status(404);\n              res.body.should.be.a('object');\n              res.body.should.have.property('message').eql('question not found');\n              done();\n            });\n        });\n      });\n    });\n    it('it should GET a question by the given id', (done) => {\n      User.create({\n        title: 'mr',\n        firstname: 'justin',\n        lastname: 'Ikwuoma',\n        username: 'justman5',\n        password: 'abc',\n        email: 'justin5@gmail.com',\n        gender: 'male',\n        country: 'Nigeria',\n        phone: '566976498',\n        userImage: ''\n      }).then((user) => {\n        Question.create({\n          title: 'I wannna know',\n          question: 'I wannna know your name',\n          userId: user.rows[0].id,\n          tags: 'java,javascript',\n          questionImage: '/something'\n        }).then((question) => {\n          request\n            .get(`/v1/questions/${question.rows[0].id}`)\n            .end((err, res) => {\n              res.should.have.status(200);\n              res.body.should.be.a('object');\n              res.body.should.have.property('id').eql(res.body.id);\n              res.body.should.have.property('title').eql('I wannna know');\n              res.body.should.have.property('question').eql('I wannna know your name');\n              res.body.should.have.property('tags').eql('java,javascript');\n              res.body.should.have.property('questionimage').eql('/something');\n              res.body.should.have.property('answers').eql(res.body.answers);\n              done();\n            });\n        });\n      });\n    });\n  });\n\n  describe('/POST question', () => {\n    it('it should not CREATE a question without title, question, tags', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman1')\n        .field('password', 'abc')\n        .field('email', 'justin1@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('phone', '669796498')\n        .attach('userImage', '')\n        .end((err, res) => {\n          request\n            .post('/v1/questions')\n            .set('x-access-token', res.body.token)\n            .field('title', '')\n            .field('question', '')\n            .field('tags', '')\n            .attach('questionImage', './testFile.png')\n            .end((err, res) => {\n              res.should.have.status(206);\n              res.body.should.be.a('object');\n              res.body.should.have.property('message').eql('Incomplete field');\n              done();\n            });\n        });\n    });\n    it('it should CREATE a question', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman')\n        .field('password', 'abc')\n        .field('email', 'justin@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('phone', '66979649')\n        .attach('userImage', '')\n        .end((err, res) => {\n          request\n            .post('/v1/questions')\n            .set('x-access-token', res.body.token)\n            .field('title', 'How far na')\n            .field('question', 'I just wan no how u dey')\n            .field('tags', 'java,javascript')\n            .attach('questionImage', './testFile.png')\n            .end((err, res) => {\n              res.should.have.status(201);\n              res.body.should.be.a('object');\n              res.body.should.have.property('id').eql(res.body.id);\n              res.body.should.have.property('title').eql('How far na');\n              res.body.should.have.property('question').eql('I just wan no how u dey');\n              res.body.should.have.property('tags').eql('java,javascript');\n              res.body.should.have.property('questionimage').eql(res.body.questionimage);\n\n              // delete test image file\n              if (path.resolve('./testFile.png')) {\n                deleteFile(`./${res.body.questionimage}`);\n              }\n              done();\n            });\n        });\n    });\n    it('it should CREATE a question without image', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman')\n        .field('password', 'abc')\n        .field('email', 'justin@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('phone', '66979649')\n        .attach('userImage', '')\n        .end((err, res) => {\n          request\n            .post('/v1/questions')\n            .set('x-access-token', res.body.token)\n            .field('title', 'How far na')\n            .field('question', 'I just wan no how u dey')\n            .field('tags', 'java,javascript')\n            .attach('questionImage', '')\n            .end((err, res) => {\n              res.should.have.status(201);\n              res.body.should.be.a('object');\n              res.body.should.have.property('id').eql(res.body.id);\n              res.body.should.have.property('title').eql('How far na');\n              res.body.should.have.property('question').eql('I just wan no how u dey');\n              res.body.should.have.property('tags').eql('java,javascript');\n              res.body.should.have.property('questionimage').eql('');\n\n              done();\n            });\n        });\n    });\n    it('it should not CREATE a question when image file type not jpg/png', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman')\n        .field('password', 'abc')\n        .field('email', 'justin@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('phone', '66979649')\n        .attach('userImage', '')\n        .end((err, res) => {\n          request\n            .post('/v1/questions')\n            .set('x-access-token', res.body.token)\n            .field('title', 'How far na')\n            .field('question', 'I just wan no how u dey')\n            .field('tags', 'java,javascript')\n            .attach('questionImage', './testFileType.txt')\n            .end((err, res) => {\n              res.should.have.status(403);\n              res.body.should.be.a('object');\n              res.body.should.have.property('message').eql('Only .png and .jpg files are allowed!');\n              res.body.should.have.property('error').eql(true);\n              done();\n            });\n        });\n    });\n    it('it should not CREATE a question when image file size is larger than 2mb', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman')\n        .field('password', 'abc')\n        .field('email', 'justin@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('phone', '66979649')\n        .attach('userImage', '')\n        .end((err, res) => {\n          request\n            .post('/v1/questions')\n            .set('x-access-token', res.body.token)\n            .field('title', 'How far na')\n            .field('question', 'I just wan no how u dey')\n            .field('tags', 'java,javascript')\n            .attach('questionImage', './testFileSize.jpg')\n            .end((err, res) => {\n              res.should.have.status(403);\n              res.body.should.be.a('object');\n              res.body.should.have.property('message')\n                .eql('file should not be more than 2mb!');\n              res.body.should.have.property('error').eql(true);\n              done();\n            });\n        });\n    });\n    it('it should not CREATE a question when a token is not provided', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman')\n        .field('password', 'abc')\n        .field('email', 'justin@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('phone', '66979649')\n        .attach('userImage', '')\n        .end(() => {\n          request\n            .post('/v1/questions')\n            .field('title', 'How far na')\n            .field('question', 'I just wan no how u dey')\n            .field('tags', 'java,javascript')\n            .attach('questionImage', './testFileSize.jpg')\n            .end((err, res) => {\n              res.should.have.status(401);\n              res.body.should.be.a('object');\n              res.body.should.have.property('auth').eql(false);\n              res.body.should.have.property('message').eql('No token provided.');\n              done();\n            });\n        });\n    });\n    it('it should not CREATE a question when it fails to authenticate token', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman')\n        .field('password', 'abc')\n        .field('email', 'justin@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('phone', '66979649')\n        .attach('userImage', '')\n        .end(() => {\n          request\n            .post('/v1/questions')\n            .set('x-access-token', 'jdkjdfskjs43354mxxnzsdz.drfsff.srfsf35324')\n            .field('title', 'How far na')\n            .field('question', 'I just wan no how u dey')\n            .field('tags', 'java,javascript')\n            .attach('questionImage', './testFileSize.jpg')\n            .end((err, res) => {\n              res.should.have.status(500);\n              res.body.should.be.a('object');\n              res.body.should.have.property('auth').eql(false);\n              res.body.should.have.property('message').eql('Failed to authenticate token.');\n              done();\n            });\n        });\n    });\n    it('it should not CREATE a question when user is delete but token exist', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman')\n        .field('password', 'abc')\n        .field('email', 'justin@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('phone', '66979649')\n        .attach('userImage', '')\n        .end((err, res) => {\n          User.destroy({ where: { id: res.body.user.id } }).then(() => {\n            request\n              .post('/v1/questions')\n              .set('x-access-token', res.body.token)\n              .field('title', 'How far na')\n              .field('question', 'I just wan no how u dey')\n              .field('tags', 'java,javascript')\n              .attach('questionImage', './testFile.png')\n              .end((err, res) => {\n                res.should.have.status(400);\n                res.body.should.be.a('object');\n                res.body.should.have.property('message')\n                  .eql('user has been removed from the database');\n                done();\n              });\n          });\n        });\n    });\n  });\n\n  /*\n  * Test the /DELETE/:id route\n  */\n  describe('/DELETE/:id question', () => {\n    it('it should not DELETE a queston given the wrong id', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman')\n        .field('password', 'abc')\n        .field('email', 'justin@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('phone', '66979649')\n        .attach('userImage', '')\n        .end((err, res) => {\n          request\n            .post('/v1/questions')\n            .field('title', 'How far na')\n            .field('question', 'I just wan no how u dey')\n            .field('tags', 'java,javascript')\n            .attach('questionImage', '')\n            .end(() => {\n              request\n                .delete('/v1/questions/-1')\n                .set('x-access-token', res.body.token)\n                .end((err, res) => {\n                  res.should.have.status(404);\n                  res.body.should.be.a('object');\n                  res.body.should.have.property('message').eql('question not found');\n                  done();\n                });\n            });\n        });\n    });\n    it('it should not DELETE a queston when a token is not provided', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman')\n        .field('password', 'abc')\n        .field('email', 'justin@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('phone', '66979649')\n        .attach('userImage', '')\n        .end((err1, res1) => {\n          request\n            .post('/v1/questions')\n            .set('x-access-token', res1.body.token)\n            .field('title', 'How far na')\n            .field('question', 'I just wan no how u dey')\n            .field('tags', 'java,javascript')\n            .attach('questionImage', '')\n            .end((err2, res2) => {\n              request\n                .delete(`/v1/questions/${res2.body.id}`)\n                .end((err, res) => {\n                  res.should.have.status(401);\n                  res.body.should.be.a('object');\n                  res.body.should.have.property('auth').eql(false);\n                  res.body.should.have.property('message').eql('No token provided.');\n                  done();\n                });\n            });\n        });\n    });\n    it('it should not DELETE a queston when it fails to authenticate token', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman')\n        .field('password', 'abc')\n        .field('email', 'justin@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('phone', '66979649')\n        .attach('userImage', '')\n        .end((err1, res1) => {\n          request\n            .post('/v1/questions')\n            .set('x-access-token', res1.body.token)\n            .field('title', 'How far na')\n            .field('question', 'I just wan no how u dey')\n            .field('tags', 'java,javascript')\n            .attach('questionImage', '')\n            .end((err2, res2) => {\n              request\n                .delete(`/v1/questions/${res2.body.id}`)\n                .set('x-access-token', 'jdkjdfskjs43354mxxnzsdz.drfsff.srfsf35324')\n                .end((err, res) => {\n                  res.should.have.status(500);\n                  res.body.should.be.a('object');\n                  res.body.should.have.property('auth').eql(false);\n                  res.body.should.have.property('message').eql('Failed to authenticate token.');\n                  done();\n                });\n            });\n        });\n    });\n    it('it should DELETE a queston given the id', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman')\n        .field('password', 'abc')\n        .field('email', 'justin@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('phone', '66979649')\n        .attach('userImage', '')\n        .end((err1, res1) => {\n          User.create({\n            title: 'mr',\n            firstname: 'Justin1',\n            lastname: 'Ikwuoma',\n            username: 'justman4',\n            password: 'abc',\n            email: 'justin4@gmail.com',\n            gender: 'male',\n            country: 'Nigeria',\n            phone: '4466976498',\n            userImage: ''\n          }).then((user) => {\n            Question.create({\n              title: 'I wannna know',\n              question: 'I wannna know your name',\n              userId: user.rows[0].id,\n              tags: 'java,javascript',\n              questionImage: 'hhhhjjh'\n            }).then((question) => {\n              request\n                .delete(`/v1/questions/${question.rows[0].id}`)\n                .set('x-access-token', res1.body.token)\n                .end((err, res) => {\n                  res.should.have.status(403);\n                  res.body.should.be.a('object');\n                  res.body.should.have.property('auth').eql(false);\n                  res.body.should.have.property('message').eql('User not allowed');\n                  done();\n                });\n            });\n          });\n        });\n    });\n    it('it should DELETE a queston given the id', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman')\n        .field('password', 'abc')\n        .field('email', 'justin@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('phone', '66979649')\n        .attach('userImage', '')\n        .end((err1, res1) => {\n          request\n            .post('/v1/questions')\n            .set('x-access-token', res1.body.token)\n            .field('title', 'How far na')\n            .field('question', 'I just wan no how u dey')\n            .field('tags', 'java,javascript')\n            .attach('questionImage', './testFile.png')\n            .end((err2, res2) => {\n              request\n                .delete(`/v1/questions/${res2.body.id}`)\n                .set('x-access-token', res1.body.token)\n                .end((err, res) => {\n                  res.should.have.status(204);\n                  res.body.should.be.a('object');\n                  done();\n                });\n            });\n        });\n    });\n  });\n});\n"]}