{"version":3,"sources":["errorHandler.js"],"names":["deleteFile","fsHelper","errorHandler","createHandlerError","error","res","filePath","status","send","e","incompleteFieldHandlerError","message","fileTypeHandleError","json","fileSizeHandleError","usernameHandlerError","emailHandlerError","phoneHandlerError","questionHandlerError","userNotPrestentHandlerError"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,aAAaC,qBAASD,UAA5B,C,CAAuC;;AAEvC,IAAME,eAAe;AACjBC,oBADiB,8BACEC,KADF,EACSC,GADT,EACcC,QADd,EACwB;AACvC,QAAIA,QAAJ,EAAcN,kBAAgBM,QAAhB,EADyB,CACI;AAC3C,WAAOD,IAAIE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,CAArB,CAAP;AACD,GAJgB;AAKjBC,6BALiB,uCAKWL,GALX,EAKgBC,QALhB,EAK0B;AACzC,QAAIA,QAAJ,EAAcN,kBAAgBM,QAAhB,EAD2B,CACE;AAC3C,WAAOD,IAAIE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEG,SAAS,kBAAX,EAArB,CAAP;AACD,GARgB;AASjBC,qBATiB,+BASGP,GATH,EASQ;AAAE;AACzBA,QAAIE,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqB,EAAEF,SAAS,uCAAX,EAAoDP,OAAO,IAA3D,EAArB;AACD,GAXgB;AAYjBU,qBAZiB,+BAYGT,GAZH,EAYQ;AAAE;AACzBA,QAAIE,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqB,EAAEF,SAAS,mCAAX,EAAgDP,OAAO,IAAvD,EAArB;AACD,GAdgB;AAejBW,sBAfiB,gCAeIV,GAfJ,EAeSC,QAfT,EAemB;AAClC,QAAIA,QAAJ,EAAcN,kBAAgBM,QAAhB,EADoB,CACS;AAC3C,WAAOD,IAAIE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEG,SAAS,yBAAX,EAArB,CAAP;AACD,GAlBgB;AAmBjBK,mBAnBiB,6BAmBCX,GAnBD,EAmBMC,QAnBN,EAmBgB;AAC/B,QAAIA,QAAJ,EAAcN,kBAAgBM,QAAhB,EADiB,CACY;AAC3C,WAAOD,IAAIE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEG,SAAS,sBAAX,EAArB,CAAP;AACD,GAtBgB;AAuBjBM,mBAvBiB,6BAuBCZ,GAvBD,EAuBMC,QAvBN,EAuBgB;AAC/B,QAAIA,QAAJ,EAAcN,kBAAgBM,QAAhB,EADiB,CACY;AAC3C,WAAOD,IAAIE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEG,SAAS,sBAAX,EAArB,CAAP;AACD,GA1BgB;AA2BjBO,sBA3BiB,gCA2BIb,GA3BJ,EA2BSC,QA3BT,EA2BmB;AAClC,QAAIA,QAAJ,EAAcN,kBAAgBM,QAAhB,EADoB,CACS;AAC3C,WAAOD,IAAIE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEG,SAAS,yBAAX,EAArB,CAAP;AACD,GA9BgB;AA+BjBQ,6BA/BiB,uCA+BWd,GA/BX,EA+BgBC,QA/BhB,EA+B0B;AACzC,QAAIA,QAAJ,EAAcN,kBAAgBM,QAAhB,EAD2B,CACE;AAC3C,WAAOD,IAAIE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEG,SAAS,yCAAX,EAArB,CAAP;AACD;AAlCgB,CAArB;;kBAqCeT,Y","file":"errorHandler.js","sourceRoot":"/home/somto/1Projects/mentorship project/StackOverflow-lite/server/server/controllers/utilities","sourcesContent":["import fsHelper from '../../../utilities/fileSystem';\n\nconst deleteFile = fsHelper.deleteFile;//Delete file helper method\n\nconst errorHandler = {\n    createHandlerError(error, res, filePath) {\n      if (filePath) deleteFile(`./${filePath}`); // if file uploads delete it\n      return res.status(400).send(e);\n    },\n    incompleteFieldHandlerError(res, filePath) {\n      if (filePath) deleteFile(`./${filePath}`); // if file uploads delete it\n      return res.status(206).send({ message: 'Incomplete field' });\n    },\n    fileTypeHandleError(res) { // file type handleError\n      res.status(403).json({ message: 'Only .png and .jpg files are allowed!', error: true });\n    },\n    fileSizeHandleError(res) { // file size handleError\n      res.status(403).json({ message: 'file should not be more than 2mb!', error: true });\n    },\n    usernameHandlerError(res, filePath) {\n      if (filePath) deleteFile(`./${filePath}`); // if file uploads delete it\n      return res.status(400).send({ message: 'username already exists' });\n    },\n    emailHandlerError(res, filePath) {\n      if (filePath) deleteFile(`./${filePath}`); // if file uploads delete it\n      return res.status(400).send({ message: 'email already exists' });\n    },\n    phoneHandlerError(res, filePath) {\n      if (filePath) deleteFile(`./${filePath}`); // if file uploads delete it\n      return res.status(400).send({ message: 'phone already exists' });\n    },\n    questionHandlerError(res, filePath) {\n      if (filePath) deleteFile(`./${filePath}`); // if file uploads delete it\n      return res.status(400).send({ message: 'question already exists' });\n    },\n    userNotPrestentHandlerError(res, filePath) {\n      if (filePath) deleteFile(`./${filePath}`); // if file uploads delete it\n      return res.status(400).send({ message: 'user has been removed from the database' });\n    },\n}\n\nexport default errorHandler;\n"]}