{"version":3,"sources":["errorHandler.js"],"names":["fsHelper","deleteFile","errorHandler","createHandlerError","error","res","filePath","status","send","notFoundHandlerError","fieldName","message","incompleteFieldHandlerError","fileTypeHandleError","json","fileSizeHandleError","usernameHandlerError","emailHandlerError","phoneHandlerError","questionHandlerError","userNotPrestentHandlerError","noTokenHandlerError","auth","failedAuthHandlerError"],"mappings":"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","file":"errorHandler.js","sourceRoot":"/home/somto/1Projects/mentorship project/StackOverflow-lite/server/server/controllers/utilities","sourcesContent":["import fsHelper from '../../../utilities/fileSystem';\n\nconst [deleteFile] = [fsHelper.deleteFile];// Delete file helper method\n\nconst errorHandler = {\n  createHandlerError(error, res, filePath) {\n    if (filePath) deleteFile(`./${filePath}`); // if file uploads delete it\n    return res.status(400).send(error);\n  },\n  notFoundHandlerError(fieldName,res, filePath) {\n    if (filePath) deleteFile(`./${filePath}`); // if file uploads delete it\n    return res.status(404).send({ message: `${fieldName} not found` });\n  },\n  incompleteFieldHandlerError(res, filePath) {\n    if (filePath) deleteFile(`./${filePath}`); // if file uploads delete it\n    return res.status(206).send({ message: 'Incomplete field' });\n  },\n  fileTypeHandleError(res) { // file type handleError\n    res.status(403).json({ message: 'Only .png and .jpg files are allowed!', error: true });\n  },\n  fileSizeHandleError(res) { // file size handleError\n    res.status(403).json({ message: 'file should not be more than 2mb!', error: true });\n  },\n  usernameHandlerError(res, filePath) {\n    if (filePath) deleteFile(`./${filePath}`); // if file uploads delete it\n    return res.status(400).send({ message: 'username already exists' });\n  },\n  emailHandlerError(res, filePath) {\n    if (filePath) deleteFile(`./${filePath}`); // if file uploads delete it\n    return res.status(400).send({ message: 'email already exists' });\n  },\n  phoneHandlerError(res, filePath) {\n    if (filePath) deleteFile(`./${filePath}`); // if file uploads delete it\n    return res.status(400).send({ message: 'phone already exists' });\n  },\n  questionHandlerError(res, filePath) {\n    if (filePath) deleteFile(`./${filePath}`); // if file uploads delete it\n    return res.status(400).send({ message: 'question already exists' });\n  },\n  userNotPrestentHandlerError(res, filePath) {\n    if (filePath) deleteFile(`./${filePath}`); // if file uploads delete it\n    return res.status(400).send({ message: 'user has been removed from the database' });\n  },\n  noTokenHandlerError(res) {\n    return res.status(401).send({ auth: false, message: 'No token provided.' });\n  },\n  failedAuthHandlerError(res) {\n    return res.status(500).send({ auth: false, message: 'Failed to authenticate token.' });\n  }\n};\n\nexport default errorHandler;\n"]}