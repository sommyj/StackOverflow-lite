{"version":3,"sources":["answer.js"],"names":["Answer","create","data","queryStatement","text","values","response","userId","questionId","answerImage","update","id","accepted","vote","findOne","key","Object","keys","where","name"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,SAAS;AACbC,QADa,kBACNC,IADM,EACA;AACX;AACA,QAAMC,iBAAiB;AACrBC,sHADqB;AAGrBC,cAAQ,CAACH,KAAKI,QAAN,EAAgBJ,KAAKK,MAArB,EAA6BL,KAAKM,UAAlC,EAA8CN,KAAKO,WAAnD;AAHa,KAAvB;;AAMA;AACA,WAAO,qBAAMN,cAAN,CAAP;AACD,GAXY;AAYbO,QAZa,kBAYNR,IAZM,EAYA;AACX;AACA,QAAMC,iBAAiB;AACrBC,8GADqB;AAGrBC,cAAQ,CAACH,KAAKS,EAAN,EAAUT,KAAKI,QAAf,EAAyBJ,KAAKU,QAA9B,EAAwCV,KAAKW,IAA7C,EAAmDX,KAAKO,WAAxD;AAHa,KAAvB;;AAMA;AACA,WAAO,qBAAMN,cAAN,CAAP;AACD,GAtBY;AAuBbW,SAvBa,mBAuBLZ,IAvBK,EAuBC;AACZ,QAAMa,MAAMC,OAAOC,IAAP,CAAYf,KAAKgB,KAAjB,EAAwB,CAAxB,CAAZ;AACA,QAAMf,iBAAiB;AACrB;AACAgB,YAAM,cAFe;AAGrBf,6CAAqCW,GAArC,UAHqB;AAIrBV,cAAQ,CAACH,KAAKgB,KAAL,CAAWH,GAAX,CAAD;AAJa,KAAvB;;AAOA;AACA,WAAO,qBAAMZ,cAAN,CAAP;AACD;AAlCY,CAAf;;kBAqCeH,M","file":"answer.js","sourceRoot":"/home/somto/1Projects/mentorship project/StackOverflow-lite/server/server/models","sourcesContent":["import query from './database/query';\n\nconst Answer = {\n  create(data) {\n    // SQL Query > Insert Data\n    const queryStatement = {\n      text: `INSERT INTO answers(response, userId, questionId, answerImage)\n      values($1, $2, $3, $4) RETURNING *`,\n      values: [data.response, data.userId, data.questionId, data.answerImage],\n    };\n\n    // require our query executor into our model\n    return query(queryStatement);\n  },\n  update(data) {\n    // SQL Query > Update Data\n    const queryStatement = {\n      text: `UPDATE answers SET response = $2, accepted = $3, vote = $4,\n      answerImage = $5 WHERE id= $1`,\n      values: [data.id, data.response, data.accepted, data.vote, data.answerImage],\n    };\n\n    // require our query executor into our model\n    return query(queryStatement);\n  },\n  findOne(data) {\n    const key = Object.keys(data.where)[0];\n    const queryStatement = {\n      // give the query a unique username and password\n      name: 'fetch-answer',\n      text: `SELECT * FROM answers WHERE ${key} = $1`,\n      values: [data.where[key]]\n    };\n\n    // require our query executor into our model\n    return query(queryStatement);\n  },\n};\n\nexport default Answer;\n"]}