{"version":3,"sources":["questions-spec.js"],"names":["process","env","NODE_ENV","chai","should","use","chaiHttp","request","app","model","User","Question","fsHelper","deleteFile","describe","beforeEach","done","destroy","where","force","then","it","get","end","err","res","have","status","body","be","a","length","eql","create","title","firstname","lastname","username","password","email","gender","country","phone","userImage","user","question","userId","rows","id","tags","questionImage","property","deep","post","field","attach","set","token","questionimage","path","resolve","delete","err1","res1","err2","res2"],"mappings":"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","file":"questions-spec.js","sourceRoot":"/home/somto/1Projects/mentorship project/StackOverflow-lite/server/test","sourcesContent":["import chai from 'chai';\nimport supertest from 'supertest';\nimport path from 'path';\nimport chaiHttp from 'chai-http';\n\nimport app from '../app';\nimport model from '../server/models';\nimport fsHelper from '../utilities/fileSystem';\n\nprocess.env.NODE_ENV = 'test';\n\nchai.should();\nchai.use(chaiHttp);\nconst request = supertest(app);\nconst [User] = [model.User];\nconst [Question] = [model.Question];\n\n// Delete file helper method\nconst [deleteFile] = [fsHelper.deleteFile];\n\ndescribe('Questions', () => {\n  beforeEach((done) => { // Before each test we empty the database\n    User.destroy({ where: {}, force: true });\n    Question.destroy({ where: {}, force: true }).then(() => done());\n  });\n\n  describe('/GET question', () => {\n    it('it should GET all the questions without data', (done) => {\n      request\n        .get('/v1/questions')\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.be.a('array');\n          res.body.length.should.be.eql(0);\n          done();\n        });\n    });\n    it('it should GET all the questions with data', (done) => {\n      User.create({\n        title: 'mr',\n        firstname: 'justin',\n        lastname: 'Ikwuoma',\n        username: 'justman5',\n        password: 'abc',\n        email: 'justin5@gmail.com',\n        gender: 'male',\n        country: 'Nigeria',\n        phone: '566976498',\n        userImage: ''\n      }).then((user) => {\n        Question.create({\n          title: 'I wannna know',\n          question: 'I wannna know your name',\n          userId: user.rows[0].id,\n          tags: 'java',\n          questionImage: '/something'\n        }).then(() => {\n          request\n            .get('/v1/questions')\n            .end((err, res) => {\n              res.should.have.status(200);\n              res.body.should.be.a('array');\n              res.body.should.have.property(0);\n              res.body.should.have.deep.property('0').property('title').eql('I wannna know');\n              res.body.should.have.deep.property('0').property('question').eql('I wannna know your name');\n              res.body.should.have.deep.property('0').property('tags').eql('java');\n              res.body.should.have.deep.property('0').property('questionimage').eql('/something');\n              done();\n            });\n        });\n      });\n    });\n    it('it should GET a question by the given id', (done) => {\n      User.create({\n        title: 'mr',\n        firstname: 'justin',\n        lastname: 'Ikwuoma',\n        username: 'justman5',\n        password: 'abc',\n        email: 'justin5@gmail.com',\n        gender: 'male',\n        country: 'Nigeria',\n        phone: '566976498',\n        userImage: ''\n      }).then((user) => {\n        Question.create({\n          title: 'I wannna know',\n          question: 'I wannna know your name',\n          userId: user.rows[0].id,\n          tags: 'java,javascript',\n          questionImage: '/something'\n        }).then((question) => {\n          request\n            .get(`/v1/questions/-1`)\n            .end((err, res) => {\n              res.should.have.status(404);\n              res.body.should.be.a('object');\n              res.body.should.have.property('message').eql('question not found');\n              done();\n            });\n        });\n      });\n    });\n    it('it should GET a question by the given id', (done) => {\n      User.create({\n        title: 'mr',\n        firstname: 'justin',\n        lastname: 'Ikwuoma',\n        username: 'justman5',\n        password: 'abc',\n        email: 'justin5@gmail.com',\n        gender: 'male',\n        country: 'Nigeria',\n        phone: '566976498',\n        userImage: ''\n      }).then((user) => {\n        Question.create({\n          title: 'I wannna know',\n          question: 'I wannna know your name',\n          userId: user.rows[0].id,\n          tags: 'java,javascript',\n          questionImage: '/something'\n        }).then((question) => {\n          request\n            .get(`/v1/questions/${question.rows[0].id}`)\n            .end((err, res) => {\n              res.should.have.status(200);\n              res.body.should.be.a('object');\n              res.body.should.have.property('id').eql(res.body.id);\n              res.body.should.have.property('title').eql('I wannna know');\n              res.body.should.have.property('question').eql('I wannna know your name');\n              res.body.should.have.property('tags').eql('java,javascript');\n              res.body.should.have.property('questionimage').eql('/something');\n              done();\n            });\n        });\n      });\n    });\n  });\n\n  describe('/POST question', () => {\n    it('it should not CREATE a question without title, question, tags', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman1')\n        .field('password', 'abc')\n        .field('email', 'justin1@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('phone', '669796498')\n        .attach('userImage', '')\n        .end((err, res) => {\n          request\n            .post('/v1/questions')\n            .set('x-access-token', res.body.token)\n            .field('title', '')\n            .field('question', '')\n            .field('tags', '')\n            .attach('questionImage', './testFile.png')\n            .end((err, res) => {\n              res.should.have.status(206);\n              res.body.should.be.a('object');\n              res.body.should.have.property('message').eql('Incomplete field');\n              done();\n            });\n        });\n    });\n    it('it should CREATE a question', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman')\n        .field('password', 'abc')\n        .field('email', 'justin@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('phone', '66979649')\n        .attach('userImage', '')\n        .end((err, res) => {\n          request\n            .post('/v1/questions')\n            .set('x-access-token', res.body.token)\n            .field('title', 'How far na')\n            .field('question', 'I just wan no how u dey')\n            .field('tags', 'java,javascript')\n            .attach('questionImage', './testFile.png')\n            .end((err, res) => {\n              res.should.have.status(201);\n              res.body.should.be.a('object');\n              res.body.should.have.property('id').eql(res.body.id);\n              res.body.should.have.property('title').eql('How far na');\n              res.body.should.have.property('question').eql('I just wan no how u dey');\n              res.body.should.have.property('tags').eql('java,javascript');\n              res.body.should.have.property('questionimage').eql(res.body.questionimage);\n\n              // delete test image file\n              if (path.resolve('./testFile.png')) {\n                deleteFile(`./${res.body.questionimage}`);\n              }\n              done();\n            });\n        });\n    });\n    it('it should CREATE a question without image', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman')\n        .field('password', 'abc')\n        .field('email', 'justin@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('phone', '66979649')\n        .attach('userImage', '')\n        .end((err, res) => {\n          request\n            .post('/v1/questions')\n            .set('x-access-token', res.body.token)\n            .field('title', 'How far na')\n            .field('question', 'I just wan no how u dey')\n            .field('tags', 'java,javascript')\n            .attach('questionImage', '')\n            .end((err, res) => {\n              res.should.have.status(201);\n              res.body.should.be.a('object');\n              res.body.should.have.property('id').eql(res.body.id);\n              res.body.should.have.property('title').eql('How far na');\n              res.body.should.have.property('question').eql('I just wan no how u dey');\n              res.body.should.have.property('tags').eql('java,javascript');\n              res.body.should.have.property('questionimage').eql('');\n\n              done();\n            });\n        });\n    });\n    it('it should not CREATE a question when image file type not jpg/png', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman')\n        .field('password', 'abc')\n        .field('email', 'justin@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('phone', '66979649')\n        .attach('userImage', '')\n        .end((err, res) => {\n          request\n            .post('/v1/questions')\n            .set('x-access-token', res.body.token)\n            .field('title', 'How far na')\n            .field('question', 'I just wan no how u dey')\n            .field('tags', 'java,javascript')\n            .attach('questionImage', './testFileType.txt')\n            .end((err, res) => {\n              res.should.have.status(403);\n              res.body.should.be.a('object');\n              res.body.should.have.property('message').eql('Only .png and .jpg files are allowed!');\n              res.body.should.have.property('error').eql(true);\n              done();\n            });\n        });\n    });\n    it('it should not CREATE a question when image file size is larger than 2mb', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman')\n        .field('password', 'abc')\n        .field('email', 'justin@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('phone', '66979649')\n        .attach('userImage', '')\n        .end((err, res) => {\n          request\n            .post('/v1/questions')\n            .set('x-access-token', res.body.token)\n            .field('title', 'How far na')\n            .field('question', 'I just wan no how u dey')\n            .field('tags', 'java,javascript')\n            .attach('questionImage', './testFileSize.jpg')\n            .end((err, res) => {\n              res.should.have.status(403);\n              res.body.should.be.a('object');\n              res.body.should.have.property('message')\n                .eql('file should not be more than 2mb!');\n              res.body.should.have.property('error').eql(true);\n              done();\n            });\n        });\n    });\n    it('it should not CREATE a question when a token is not provided', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman')\n        .field('password', 'abc')\n        .field('email', 'justin@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('phone', '66979649')\n        .attach('userImage', '')\n        .end(() => {\n          request\n            .post('/v1/questions')\n            .field('title', 'How far na')\n            .field('question', 'I just wan no how u dey')\n            .field('tags', 'java,javascript')\n            .attach('questionImage', './testFileSize.jpg')\n            .end((err, res) => {\n              res.should.have.status(401);\n              res.body.should.be.a('object');\n              res.body.should.have.property('auth').eql(false);\n              res.body.should.have.property('message').eql('No token provided.');\n              done();\n            });\n        });\n    });\n    it('it should not CREATE a question when it fails to authenticate token.', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman')\n        .field('password', 'abc')\n        .field('email', 'justin@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('phone', '66979649')\n        .attach('userImage', '')\n        .end(() => {\n          request\n            .post('/v1/questions')\n            .set('x-access-token', 'jdkjdfskjs43354mxxnzsdz.drfsff.srfsf35324')\n            .field('title', 'How far na')\n            .field('question', 'I just wan no how u dey')\n            .field('tags', 'java,javascript')\n            .attach('questionImage', './testFileSize.jpg')\n            .end((err, res) => {\n              res.should.have.status(500);\n              res.body.should.be.a('object');\n              res.body.should.have.property('auth').eql(false);\n              res.body.should.have.property('message').eql('Failed to authenticate token.');\n              done();\n            });\n        });\n    });\n    it('it should not CREATE a question when user is delete but token exist', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman')\n        .field('password', 'abc')\n        .field('email', 'justin@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('phone', '66979649')\n        .attach('userImage', '')\n        .end((err, res) => {\n          User.destroy({ where: { id: res.body.user.id } }).then(() => {\n            request\n              .post('/v1/questions')\n              .set('x-access-token', res.body.token)\n              .field('title', 'How far na')\n              .field('question', 'I just wan no how u dey')\n              .field('tags', 'java,javascript')\n              .attach('questionImage', './testFile.png')\n              .end((err, res) => {\n                res.should.have.status(400);\n                res.body.should.be.a('object');\n                res.body.should.have.property('message')\n                  .eql('user has been removed from the database');\n                done();\n              });\n          });\n        });\n    });\n  });\n\n  /*\n  * Test the /DELETE/:id route\n  */\n  describe('/DELETE/:id question', () => {\n    it('it should not DELETE a queston given the wrong id', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman')\n        .field('password', 'abc')\n        .field('email', 'justin@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('phone', '66979649')\n        .attach('userImage', '')\n        .end((err, res) => {\n          request\n            .post('/v1/questions')\n            .field('title', 'How far na')\n            .field('question', 'I just wan no how u dey')\n            .field('tags', 'java,javascript')\n            .attach('questionImage', '')\n            .end(() => {\n              request\n                .delete('/v1/questions/-1')\n                .set('x-access-token', res.body.token)\n                .end((err, res) => {\n                  res.should.have.status(404);\n                  res.body.should.be.a('object');\n                  res.body.should.have.property('message').eql('question not found');\n                  done();\n                });\n            });\n          });\n        });\n        it('it should DELETE a queston given the id', (done) => {\n          request\n            .post('/auth/v1/signup')\n            .field('title', 'mr')\n            .field('firstname', 'Justin')\n            .field('lastname', 'Ikwuoma')\n            .field('username', 'justman')\n            .field('password', 'abc')\n            .field('email', 'justin@gmail.com')\n            .field('gender', 'male')\n            .field('country', 'Nigeria')\n            .field('phone', '66979649')\n            .attach('userImage', '')\n            .end((err1, res1) => {\n              request\n                .post('/v1/questions')\n                .set('x-access-token', res1.body.token)\n                .field('title', 'How far na')\n                .field('question', 'I just wan no how u dey')\n                .field('tags', 'java,javascript')\n                .attach('questionImage', './testFile.png')\n                .end((err2, res2) => {\n                  request\n                    .delete(`/v1/questions/${res2.body.id}`)\n                    .set('x-access-token', res1.body.token)\n                    .end((err, res) => {\n                      res.should.have.status(204);\n                      res.body.should.be.a('object');\n                      done();\n                   });\n               });\n            });\n          });\n        });\n\n});\n"]}