{"version":3,"sources":["answers-spec.js"],"names":["process","env","NODE_ENV","chai","should","use","chaiHttp","request","app","model","User","Question","Answer","fsHelper","deleteFile","describe","beforeEach","done","destroy","where","force","then","it","post","field","attach","end","err1","res1","set","body","token","err2","res2","id","err","res","have","status","be","a","property","eql"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEAA,QAAQC,GAAR,CAAYC,QAAZ,GAAuB,MAAvB;;AAEAC,eAAKC,MAAL;AACAD,eAAKE,GAAL,CAASC,kBAAT;AACA,IAAMC,UAAU,yBAAUC,aAAV,CAAhB;WACe,CAACC,iBAAMC,IAAP,C;IAARA,I;YACY,CAACD,iBAAME,QAAP,C;IAAZA,Q;YACU,CAACF,iBAAMG,MAAP,C;IAAVA,M;;AAEP;;YACqB,CAACC,qBAASC,UAAV,C;IAAdA,U;;;AAEPC,SAAS,SAAT,EAAoB,YAAM;AACxBC,aAAW,UAACC,IAAD,EAAU;AAAE;AACrBP,SAAKQ,OAAL,CAAa,EAAEC,OAAO,EAAT,EAAaC,OAAO,IAApB,EAAb;AACAT,aAASO,OAAT,CAAiB,EAAEC,OAAO,EAAT,EAAaC,OAAO,IAApB,EAAjB;AACAR,WAAOM,OAAP,CAAe,EAAEC,OAAO,EAAT,EAAaC,OAAO,IAApB,EAAf,EAA2CC,IAA3C,CAAgD;AAAA,aAAMJ,MAAN;AAAA,KAAhD;AACD,GAJD;;AAMAF,WAAS,cAAT,EAAyB,YAAM;AAC7BO,OAAG,iDAAH,EAAsD,UAACL,IAAD,EAAU;AAC5DV,cACGgB,IADH,CACQ,iBADR,EAEGC,KAFH,CAES,OAFT,EAEkB,IAFlB,EAGGA,KAHH,CAGS,WAHT,EAGsB,QAHtB,EAIGA,KAJH,CAIS,UAJT,EAIqB,SAJrB,EAKGA,KALH,CAKS,UALT,EAKqB,SALrB,EAMGA,KANH,CAMS,UANT,EAMqB,KANrB,EAOGA,KAPH,CAOS,OAPT,EAOkB,kBAPlB,EAQGA,KARH,CAQS,QART,EAQmB,MARnB,EASGA,KATH,CASS,SATT,EASoB,SATpB,EAUGA,KAVH,CAUS,OAVT,EAUkB,UAVlB,EAWGC,MAXH,CAWU,WAXV,EAWuB,EAXvB,EAYGC,GAZH,CAYO,UAACC,IAAD,EAAOC,IAAP,EAAgB;AACnBrB,gBACGgB,IADH,CACQ,eADR,EAEGM,GAFH,CAEO,gBAFP,EAEyBD,KAAKE,IAAL,CAAUC,KAFnC,EAGGP,KAHH,CAGS,OAHT,EAGkB,YAHlB,EAIGA,KAJH,CAIS,UAJT,EAIqB,yBAJrB,EAKGA,KALH,CAKS,MALT,EAKiB,iBALjB,EAMGC,MANH,CAMU,eANV,EAM2B,EAN3B,EAOGC,GAPH,CAOO,UAACM,IAAD,EAAOC,IAAP,EAAgB;AACnB1B,kBACGgB,IADH,oBACyBU,KAAKH,IAAL,CAAUI,EADnC,eAEGL,GAFH,CAEO,gBAFP,EAEyBD,KAAKE,IAAL,CAAUC,KAFnC,EAGGP,KAHH,CAGS,OAHT,EAGkB,YAHlB,EAIGA,KAJH,CAIS,UAJT,EAIqB,yBAJrB,EAKGA,KALH,CAKS,MALT,EAKiB,iBALjB,EAMGC,MANH,CAMU,eANV,EAM2B,EAN3B,EAOGC,GAPH,CAOO,UAACS,GAAD,EAAMC,GAAN,EAAc;AACjBA,gBAAIhC,MAAJ,CAAWiC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAF,gBAAIN,IAAJ,CAAS1B,MAAT,CAAgBmC,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAJ,gBAAIN,IAAJ,CAAS1B,MAAT,CAAgBiC,IAAhB,CAAqBI,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,kBAA7C;;AAEAzB;AACD,WAbH;AAcD,SAtBH;AAuBD,OApCH;AAqCD,KAtCH;AAuCC,GAxCH;AA0CD,CAjDD","file":"answers-spec.js","sourceRoot":"/home/somto/1Projects/mentorship project/StackOverflow-lite/server/test","sourcesContent":["import chai from 'chai';\nimport supertest from 'supertest';\nimport path from 'path';\nimport chaiHttp from 'chai-http';\n\nimport app from '../app';\nimport model from '../server/models';\nimport fsHelper from '../utilities/fileSystem';\n\nprocess.env.NODE_ENV = 'test';\n\nchai.should();\nchai.use(chaiHttp);\nconst request = supertest(app);\nconst [User] = [model.User];\nconst [Question] = [model.Question];\nconst [Answer] = [model.Answer];\n\n// Delete file helper method\nconst [deleteFile] = [fsHelper.deleteFile];\n\ndescribe('Answers', () => {\n  beforeEach((done) => { // Before each test we empty the database\n    User.destroy({ where: {}, force: true });\n    Question.destroy({ where: {}, force: true });\n    Answer.destroy({ where: {}, force: true }).then(() => done());\n  });\n\n  describe('/POST answer', () => {\n    it('it should not CREATE an answer without response', (done) => {\n        request\n          .post('/auth/v1/signup')\n          .field('title', 'mr')\n          .field('firstname', 'Justin')\n          .field('lastname', 'Ikwuoma')\n          .field('username', 'justman')\n          .field('password', 'abc')\n          .field('email', 'justin@gmail.com')\n          .field('gender', 'male')\n          .field('country', 'Nigeria')\n          .field('phone', '66979649')\n          .attach('userImage', '')\n          .end((err1, res1) => {\n            request\n              .post('/v1/questions')\n              .set('x-access-token', res1.body.token)\n              .field('title', 'How far na')\n              .field('question', 'I just wan no how u dey')\n              .field('tags', 'java,javascript')\n              .attach('questionImage', '')\n              .end((err2, res2) => {\n                request\n                  .post(`/v1/questions/${res2.body.id}/answers`)\n                  .set('x-access-token', res1.body.token)\n                  .field('title', 'How far na')\n                  .field('question', 'I just wan no how u dey')\n                  .field('tags', 'java,javascript')\n                  .attach('questionImage', '')\n                  .end((err, res) => {\n                    res.should.have.status(206);\n                    res.body.should.be.a('object');\n                    res.body.should.have.property('message').eql('Incomplete field');\n\n                    done();\n                  });\n              });\n          });\n      });\n    });\n\n});\n"]}