{"version":3,"sources":["user.js"],"names":["User","create","data","queryStatement","text","values","title","firstname","lastname","username","password","email","gender","country","phone","userImage","findAll","name","findOne","where","destroy","id","force"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,OAAO;AACXC,QADW,kBACJC,IADI,EACE;AACX;AACA,QAAMC,iBAAiB;AACrBC,8LADqB;AAGrBC,cAAQ,CAACH,KAAKI,KAAN,EAAaJ,KAAKK,SAAlB,EAA6BL,KAAKM,QAAlC,EAA4CN,KAAKO,QAAjD,EAA2DP,KAAKQ,QAAhE,EACNR,KAAKS,KADC,EACMT,KAAKU,MADX,EACmBV,KAAKW,OADxB,EACiCX,KAAKY,KADtC,EAC6CZ,KAAKa,SADlD;AAHa,KAAvB;;AAOA;AACA,WAAO,qBAAMZ,cAAN,CAAP;AACD,GAZU;AAaXa,SAbW,qBAaD;AACR;AACA,QAAMb,iBAAiB;AACrBc,YAAM,aADe;AAErBb,YAAM;AAFe,KAAvB;;AAKA;AACA,WAAO,qBAAMD,cAAN,CAAP;AACD,GAtBU;AAuBXe,SAvBW,mBAuBHhB,IAvBG,EAuBG;AACZ,QAAMC,iBAAiB;AACrB;AACAc,YAAM,YAFe;AAGrBb,YAAM,yCAHe;AAIrBC,cAAQ,CAACH,KAAKiB,KAAL,CAAWV,QAAZ;AAJa,KAAvB;;AAOA;AACA,WAAO,qBAAMN,cAAN,CAAP;AACD,GAjCU;AAkCXiB,SAlCW,mBAkCHlB,IAlCG,EAkCG;AACZ,QAAIC,uBAAJ;AACA,QAAI,CAACD,KAAKiB,KAAL,CAAWE,EAAZ,IAAkBnB,KAAKoB,KAA3B,EAAkC;AAChCnB,uBAAiB;AACfC,cAAM;AADS,OAAjB;AAGD,KAJD,MAIO;AACLD,uBAAiB;AACfC,cAAM,iCADS;AAEfC,gBAAQ,CAACH,KAAKiB,KAAL,CAAWE,EAAZ;AAFO,OAAjB;AAID;;AAED;AACA,WAAO,qBAAMlB,cAAN,CAAP;AACD;AAjDU,CAAb;;kBAoDeH,I","file":"user.js","sourceRoot":"/home/somto/1Projects/mentorship project/StackOverflow-lite/server/server/models","sourcesContent":["import query from './database/query';\n\nconst User = {\n  create(data) {\n    // SQL Query > Insert Data\n    const queryStatement = {\n      text: `INSERT INTO users(title, firstname, lastname, username, password, email, gender,\n        country, phone, userImage) values($1, $2, $3, $4, $5, $6, $7, $8, $9, $10) RETURNING *`,\n      values: [data.title, data.firstname, data.lastname, data.username, data.password,\n        data.email, data.gender, data.country, data.phone, data.userImage],\n    };\n\n    // require our query executor into our model\n    return query(queryStatement);\n  },\n  findAll() {\n    // select all users\n    const queryStatement = {\n      name: 'fetch-users',\n      text: 'SELECT * FROM users'\n    };\n\n    // require our query executor into our model\n    return query(queryStatement);\n  },\n  findOne(data) {\n    const queryStatement = {\n      // give the query a unique username and password\n      name: 'fetch-user',\n      text: 'SELECT * FROM users WHERE username = $1',\n      values: [data.where.username]\n    };\n\n    // require our query executor into our model\n    return query(queryStatement);\n  },\n  destroy(data) {\n    let queryStatement;\n    if (!data.where.id && data.force) {\n      queryStatement = {\n        text: 'DELETE FROM users',\n      };\n    } else {\n      queryStatement = {\n        text: 'DELETE FROM users WHERE id = $1',\n        values: [data.where.id],\n      };\n    }\n\n    // require our query executor into our model\n    return query(queryStatement);\n  }\n};\n\nexport default User;\n"]}