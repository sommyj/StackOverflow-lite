// import chai from 'chai';
// import supertest from 'supertest';
// import path from 'path';
// import chaiHttp from 'chai-http';
//
// import app from '../app';
// import model from '../server/models';
// import fsHelper from '../utilities/fileSystem';
//
// process.env.NODE_ENV = 'test';
//
// chai.should();
// chai.use(chaiHttp);
// const request = supertest(app);
// const [User] = [model.User];
// const [Question] = [model.Question];
// const [Answer] = [model.Answer];
//
// // Delete file helper method
// const [deleteFile] = [fsHelper.deleteFile];
//
// describe('Answers', () => {
//   beforeEach((done) => { // Before each test we empty the database
//     User.destroy({ where: {}, force: true });
//     Question.destroy({ where: {}, force: true });
//     Answer.destroy({ where: {}, force: true }).then(() => done());
//   });
//
//   describe('/POST answer', () => {
//     it('it should not CREATE an answer without response', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', '')
//                 .attach('answerImage', '')
//                 .end((err, res) => {
//                   res.should.have.status(206);
//                   res.body.should.be.a('object');
//                   res.body.should.have.property('message').eql('Incomplete field');
//
//                   done();
//                 });
//             });
//         });
//     });
//     it('it should CREATE an answer', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', './testFile.png')
//                 .end((err, res) => {
//                   res.should.have.status(201);
//                   res.body.should.be.a('object');
//                   res.body.should.have.property('response').eql('very fine');
//                   res.body.should.have.property('userid').eql(res1.body.user.id);
//                   res.body.should.have.property('accepted').eql(false);
//                   res.body.should.have.property('vote').eql(0);
//                   res.body.should.have.property('answerimage').eql(res.body.answerimage);
//
//                   // delete test image file
//                   if (path.resolve('./testFile.png')) {
//                     deleteFile(`./${res.body.answerimage}`);
//                   }
//                   done();
//                 });
//             });
//         });
//     });
//     it('it should CREATE an answer without image', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', '')
//                 .end((err, res) => {
//                   res.should.have.status(201);
//                   res.body.should.be.a('object');
//                   res.body.should.have.property('response').eql('very fine');
//                   res.body.should.have.property('userid').eql(res1.body.user.id);
//                   res.body.should.have.property('accepted').eql(false);
//                   res.body.should.have.property('vote').eql(0);
//                   res.body.should.have.property('answerimage').eql('');
//
//                   done();
//                 });
//             });
//         });
//     });
//     it('it should not CREATE an answer when image file type not jpg/png', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', './testFileType.txt')
//                 .end((err, res) => {
//                   res.should.have.status(403);
//                   res.body.should.be.a('object');
//                   res.body.should.have.property('message').eql('Only .png and .jpg files are allowed!');
//                   res.body.should.have.property('error').eql(true);
//
//                   done();
//                 });
//             });
//         });
//     });
//     it('it should not CREATE an answer when image file size is larger than 2mb', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', './testFileSize.jpg')
//                 .end((err, res) => {
//                   res.should.have.status(403);
//                   res.body.should.be.a('object');
//                   res.body.should.have.property('message')
//                     .eql('file should not be more than 2mb!');
//                   res.body.should.have.property('error').eql(true);
//
//                   done();
//                 });
//             });
//         });
//     });
//     it('it should not CREATE an answer when a token is not provided', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .field('response', 'very fine')
//                 .attach('answerImage', './testFile.png')
//                 .end((err, res) => {
//                   res.should.have.status(401);
//                   res.body.should.be.a('object');
//                   res.body.should.have.property('auth').eql(false);
//                   res.body.should.have.property('message').eql('No token provided.');
//
//                   done();
//                 });
//             });
//         });
//     });
//     it('it should not CREATE an answer when it fails to authenticate token', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', 'jdkjdfskjs43354mxxnzsdz.drfsff.srfsf35324')
//                 .field('response', 'very fine')
//                 .attach('answerImage', './testFile.png')
//                 .end((err, res) => {
//                   res.should.have.status(500);
//                   res.body.should.be.a('object');
//                   res.body.should.have.property('auth').eql(false);
//                   res.body.should.have.property('message').eql('Failed to authenticate token.');
//
//                   done();
//                 });
//             });
//         });
//     });
//     it('it should not CREATE an answer when user is delete but token exist', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               User.destroy({ where: { id: res1.body.user.id } }).then(() => {
//                 request
//                   .post(`/v1/questions/${res2.body.id}/answers`)
//                   .set('x-access-token', res1.body.token)
//                   .field('response', 'very fine')
//                   .attach('answerImage', './testFile.png')
//                   .end((err, res) => {
//                     res.should.have.status(400);
//                     res.body.should.be.a('object');
//                     res.body.should.have.property('message')
//                       .eql('user has been removed from the database');
//                     done();
//                   });
//               });
//             });
//         });
//     });
//   });
//
//   /*
//    * Test the /PUT/:id route
//    */
//   describe('/PUT/:id answer', () => {
//     it('it should UPDATE an answer given the answer id by the question author', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', '')
//                 .end((err, res) => {
//                   request
//                     .put(`/v1/questions/${res2.body.id}/answers/${res.body.id}`)
//                     .set('x-access-token', res1.body.token)
//                     .field('accepted', true)
//                     .end((err, res) => {
//                       res.should.have.status(200);
//                       res.body.should.be.a('object');
//                       res.body.should.have.property('response').eql('very fine');
//                       res.body.should.have.property('userid').eql(res1.body.user.id);
//                       res.body.should.have.property('accepted').eql(true);
//                       res.body.should.have.property('vote').eql(0);
//                       res.body.should.have.property('answerimage').eql('');
//                       done();
//                     });
//                 });
//             });
//         });
//     });
//
//     it('it should UPDATE an answer given the answer id by the answer author', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', '')
//                 .end((err, res) => {
//                   request
//                     .put(`/v1/questions/${res2.body.id}/answers/${res.body.id}`)
//                     .set('x-access-token', res1.body.token)
//                     .field('response', 'i am ok')
//                     .attach('answerImage', './testFile.png')
//                     .end((err, res) => {
//                       res.should.have.status(200);
//                       res.body.should.be.a('object');
//                       res.body.should.have.property('response').eql('i am ok');
//                       res.body.should.have.property('userid').eql(res1.body.user.id);
//                       res.body.should.have.property('accepted').eql(false);
//                       res.body.should.have.property('vote').eql(0);
//                       res.body.should.have.property('answerimage').eql(res.body.answerimage);
//
//                       // delete test image file
//                       if (path.resolve('./testFile.png')) {
//                         deleteFile(`./${res.body.answerimage}`);
//                       }
//                       done();
//                     });
//                 });
//             });
//         });
//     });
//     it('it should not UPDATE an answer given the wrong answer id', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', '')
//                 .end(() => {
//                   request
//                     .put(`/v1/questions/${res2.body.id}/answers/-1`)
//                     .set('x-access-token', res1.body.token)
//                     .field('response', 'i am ok')
//                     .attach('answerImage', './testFile.png')
//                     .end((err, res) => {
//                       res.should.have.status(404);
//                       res.body.should.be.a('object');
//                       res.body.should.have.property('message').eql('answer not found');
//
//                       done();
//                     });
//                 });
//             });
//         });
//     });
//     it('it should not UPDATE an answer given the wrong question id', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', '')
//                 .end((err, res) => {
//                   request
//                     .put(`/v1/questions/-1/answers/${res.body.id}`)
//                     .set('x-access-token', res1.body.token)
//                     .field('response', 'i am ok')
//                     .attach('answerImage', './testFile.png')
//                     .end((err, res) => {
//                       res.should.have.status(404);
//                       res.body.should.be.a('object');
//                       res.body.should.have.property('message').eql('question not found');
//
//                       done();
//                     });
//                 });
//             });
//         });
//     });
//     it(`it should UPDATE an answer given the id and
//     maintain already existing fields and file if none is entered`, (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', './testFile.png')
//                 .end((err, res) => {
//                   request
//                     .put(`/v1/questions/${res2.body.id}/answers/${res.body.id}`)
//                     .set('x-access-token', res1.body.token)
//                     .field('response', '')
//                     .attach('answerImage', '')
//                     .end((err, res) => {
//                       res.should.have.status(200);
//                       res.body.should.be.a('object');
//                       res.body.should.have.property('response').eql('very fine');
//                       res.body.should.have.property('userid').eql(res1.body.user.id);
//                       res.body.should.have.property('accepted').eql(false);
//                       res.body.should.have.property('vote').eql(0);
//                       res.body.should.have.property('answerimage').eql(res.body.answerimage);
//
//                       // delete test image file
//                       if (path.resolve('./testFile.png')) {
//                         deleteFile(`./${res.body.answerimage}`);
//                       }
//                       done();
//                     });
//                 });
//             });
//         });
//     });
//     it('it should UPDATE a answer given the id and replace already existing file', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', './testFile.png')
//                 .end((err, res) => {
//                   request
//                     .put(`/v1/questions/${res2.body.id}/answers/${res.body.id}`)
//                     .set('x-access-token', res1.body.token)
//                     .field('response', '')
//                     .attach('answerImage', './testFile.png')
//                     .end((err, res) => {
//                       res.should.have.status(200);
//                       res.body.should.be.a('object');
//                       res.body.should.have.property('response').eql('very fine');
//                       res.body.should.have.property('userid').eql(res1.body.user.id);
//                       res.body.should.have.property('accepted').eql(false);
//                       res.body.should.have.property('vote').eql(0);
//                       res.body.should.have.property('answerimage').eql(res.body.answerimage);
//
//                       // delete test image file
//                       if (path.resolve('./testFile.png')) {
//                         deleteFile(`./${res.body.answerimage}`);
//                       }
//                       done();
//                     });
//                 });
//             });
//         });
//     });
//     it('it should not UPDATE an answer when image file type not jpg/png', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', '')
//                 .end((err, res) => {
//                   request
//                     .put(`/v1/questions/${res2.body.id}/answers/${res.body.id}`)
//                     .set('x-access-token', res1.body.token)
//                     .field('response', '')
//                     .attach('answerImage', './testFileType.txt')
//                     .end((err, res) => {
//                       res.should.have.status(403);
//                       res.body.should.be.a('object');
//                       res.body.should.have.property('message').eql('Only .png and .jpg files are allowed!');
//                       res.body.should.have.property('error').eql(true);
//
//                       done();
//                     });
//                 });
//             });
//         });
//     });
//     it(`it should not UPDATE a answer
//     when image file size is larger than 2mb`, (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', '')
//                 .end((err, res) => {
//                   request
//                     .put(`/v1/questions/${res2.body.id}/answers/${res.body.id}`)
//                     .set('x-access-token', res1.body.token)
//                     .field('response', '')
//                     .attach('answerImage', './testFileSize.jpg')
//                     .end((err, res) => {
//                       res.should.have.status(403);
//                       res.body.should.be.a('object');
//                       res.body.should.have.property('message').eql('file should not be more than 2mb!');
//                       res.body.should.have.property('error').eql(true);
//
//                       done();
//                     });
//                 });
//             });
//         });
//     });
//     it('it should not UPDATE an answer when a token is not provided', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', '')
//                 .end((err, res) => {
//                   request
//                     .put(`/v1/questions/${res2.body.id}/answers/${res.body.id}`)
//                     .field('response', '')
//                     .attach('answerImage', '')
//                     .end((err, res) => {
//                       res.should.have.status(401);
//                       res.body.should.be.a('object');
//                       res.body.should.have.property('auth').eql(false);
//                       res.body.should.have.property('message').eql('No token provided.');
//
//                       done();
//                     });
//                 });
//             });
//         });
//     });
//     it('it should not UPDATE a answer when it fails to authenticate token.', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               request
//                 .post(`/v1/questions/${res2.body.id}/answers`)
//                 .set('x-access-token', res1.body.token)
//                 .field('response', 'very fine')
//                 .attach('answerImage', '')
//                 .end((err, res) => {
//                   request
//                     .put(`/v1/questions/${res2.body.id}/answers/${res.body.id}`)
//                     .set('x-access-token', 'nmdhnjf.njfjfj.fkfkfk')
//                     .field('response', '')
//                     .attach('answerImage', '')
//                     .end((err, res) => {
//                       res.should.have.status(500);
//                       res.body.should.be.a('object');
//                       res.body.should.have.property('auth').eql(false);
//                       res.body.should.have.property('message').eql('Failed to authenticate token.');
//
//                       done();
//                     });
//                 });
//             });
//         });
//     });
//     it('it should not UPDATE a answer when user is unauthorize.', (done) => {
//       request
//         .post('/auth/v1/signup')
//         .field('title', 'mr')
//         .field('firstname', 'Justin')
//         .field('lastname', 'Ikwuoma')
//         .field('username', 'justman')
//         .field('password', 'abc')
//         .field('email', 'justin@gmail.com')
//         .field('gender', 'male')
//         .field('country', 'Nigeria')
//         .field('phone', '66979649')
//         .attach('userImage', '')
//         .end((err1, res1) => {
//           request
//             .post('/v1/questions')
//             .set('x-access-token', res1.body.token)
//             .field('title', 'How far na')
//             .field('question', 'I just wan no how u dey')
//             .field('tags', 'java,javascript')
//             .attach('questionImage', '')
//             .end((err2, res2) => {
//               Answer.create({ response: 'very fine', answerImage: '' }).then((answer) => {
//                 request
//                   .put(`/v1/questions/${res2.body.id}/answers/${answer.rows[0].id}`)
//                   .set('x-access-token', res1.body.token)
//                   .field('response', '')
//                   .attach('answerImage', '')
//                   .end((err, res) => {
//                     res.should.have.status(403);
//                     res.body.should.be.a('object');
//                     res.body.should.have.property('auth').eql(false);
//                     res.body.should.have.property('message').eql('User not allowed');
//
//                     done();
//                   });
//               });
//             });
//         });
//     });
//   });
// });
"use strict";//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFuc3dlcnMtc3BlYy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImFuc3dlcnMtc3BlYy5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9zb210by8xUHJvamVjdHMvbWVudG9yc2hpcCBwcm9qZWN0L1N0YWNrT3ZlcmZsb3ctbGl0ZS9zZXJ2ZXIvdGVzdCIsInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCBjaGFpIGZyb20gJ2NoYWknO1xuLy8gaW1wb3J0IHN1cGVydGVzdCBmcm9tICdzdXBlcnRlc3QnO1xuLy8gaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG4vLyBpbXBvcnQgY2hhaUh0dHAgZnJvbSAnY2hhaS1odHRwJztcbi8vXG4vLyBpbXBvcnQgYXBwIGZyb20gJy4uL2FwcCc7XG4vLyBpbXBvcnQgbW9kZWwgZnJvbSAnLi4vc2VydmVyL21vZGVscyc7XG4vLyBpbXBvcnQgZnNIZWxwZXIgZnJvbSAnLi4vdXRpbGl0aWVzL2ZpbGVTeXN0ZW0nO1xuLy9cbi8vIHByb2Nlc3MuZW52Lk5PREVfRU5WID0gJ3Rlc3QnO1xuLy9cbi8vIGNoYWkuc2hvdWxkKCk7XG4vLyBjaGFpLnVzZShjaGFpSHR0cCk7XG4vLyBjb25zdCByZXF1ZXN0ID0gc3VwZXJ0ZXN0KGFwcCk7XG4vLyBjb25zdCBbVXNlcl0gPSBbbW9kZWwuVXNlcl07XG4vLyBjb25zdCBbUXVlc3Rpb25dID0gW21vZGVsLlF1ZXN0aW9uXTtcbi8vIGNvbnN0IFtBbnN3ZXJdID0gW21vZGVsLkFuc3dlcl07XG4vL1xuLy8gLy8gRGVsZXRlIGZpbGUgaGVscGVyIG1ldGhvZFxuLy8gY29uc3QgW2RlbGV0ZUZpbGVdID0gW2ZzSGVscGVyLmRlbGV0ZUZpbGVdO1xuLy9cbi8vIGRlc2NyaWJlKCdBbnN3ZXJzJywgKCkgPT4ge1xuLy8gICBiZWZvcmVFYWNoKChkb25lKSA9PiB7IC8vIEJlZm9yZSBlYWNoIHRlc3Qgd2UgZW1wdHkgdGhlIGRhdGFiYXNlXG4vLyAgICAgVXNlci5kZXN0cm95KHsgd2hlcmU6IHt9LCBmb3JjZTogdHJ1ZSB9KTtcbi8vICAgICBRdWVzdGlvbi5kZXN0cm95KHsgd2hlcmU6IHt9LCBmb3JjZTogdHJ1ZSB9KTtcbi8vICAgICBBbnN3ZXIuZGVzdHJveSh7IHdoZXJlOiB7fSwgZm9yY2U6IHRydWUgfSkudGhlbigoKSA9PiBkb25lKCkpO1xuLy8gICB9KTtcbi8vXG4vLyAgIGRlc2NyaWJlKCcvUE9TVCBhbnN3ZXInLCAoKSA9PiB7XG4vLyAgICAgaXQoJ2l0IHNob3VsZCBub3QgQ1JFQVRFIGFuIGFuc3dlciB3aXRob3V0IHJlc3BvbnNlJywgKGRvbmUpID0+IHtcbi8vICAgICAgIHJlcXVlc3Rcbi8vICAgICAgICAgLnBvc3QoJy9hdXRoL3YxL3NpZ251cCcpXG4vLyAgICAgICAgIC5maWVsZCgndGl0bGUnLCAnbXInKVxuLy8gICAgICAgICAuZmllbGQoJ2ZpcnN0bmFtZScsICdKdXN0aW4nKVxuLy8gICAgICAgICAuZmllbGQoJ2xhc3RuYW1lJywgJ0lrd3VvbWEnKVxuLy8gICAgICAgICAuZmllbGQoJ3VzZXJuYW1lJywgJ2p1c3RtYW4nKVxuLy8gICAgICAgICAuZmllbGQoJ3Bhc3N3b3JkJywgJ2FiYycpXG4vLyAgICAgICAgIC5maWVsZCgnZW1haWwnLCAnanVzdGluQGdtYWlsLmNvbScpXG4vLyAgICAgICAgIC5maWVsZCgnZ2VuZGVyJywgJ21hbGUnKVxuLy8gICAgICAgICAuZmllbGQoJ2NvdW50cnknLCAnTmlnZXJpYScpXG4vLyAgICAgICAgIC5maWVsZCgncGhvbmUnLCAnNjY5Nzk2NDknKVxuLy8gICAgICAgICAuYXR0YWNoKCd1c2VySW1hZ2UnLCAnJylcbi8vICAgICAgICAgLmVuZCgoZXJyMSwgcmVzMSkgPT4ge1xuLy8gICAgICAgICAgIHJlcXVlc3Rcbi8vICAgICAgICAgICAgIC5wb3N0KCcvdjEvcXVlc3Rpb25zJylcbi8vICAgICAgICAgICAgIC5zZXQoJ3gtYWNjZXNzLXRva2VuJywgcmVzMS5ib2R5LnRva2VuKVxuLy8gICAgICAgICAgICAgLmZpZWxkKCd0aXRsZScsICdIb3cgZmFyIG5hJylcbi8vICAgICAgICAgICAgIC5maWVsZCgncXVlc3Rpb24nLCAnSSBqdXN0IHdhbiBubyBob3cgdSBkZXknKVxuLy8gICAgICAgICAgICAgLmZpZWxkKCd0YWdzJywgJ2phdmEsamF2YXNjcmlwdCcpXG4vLyAgICAgICAgICAgICAuYXR0YWNoKCdxdWVzdGlvbkltYWdlJywgJycpXG4vLyAgICAgICAgICAgICAuZW5kKChlcnIyLCByZXMyKSA9PiB7XG4vLyAgICAgICAgICAgICAgIHJlcXVlc3Rcbi8vICAgICAgICAgICAgICAgICAucG9zdChgL3YxL3F1ZXN0aW9ucy8ke3JlczIuYm9keS5pZH0vYW5zd2Vyc2ApXG4vLyAgICAgICAgICAgICAgICAgLnNldCgneC1hY2Nlc3MtdG9rZW4nLCByZXMxLmJvZHkudG9rZW4pXG4vLyAgICAgICAgICAgICAgICAgLmZpZWxkKCdyZXNwb25zZScsICcnKVxuLy8gICAgICAgICAgICAgICAgIC5hdHRhY2goJ2Fuc3dlckltYWdlJywgJycpXG4vLyAgICAgICAgICAgICAgICAgLmVuZCgoZXJyLCByZXMpID0+IHtcbi8vICAgICAgICAgICAgICAgICAgIHJlcy5zaG91bGQuaGF2ZS5zdGF0dXMoMjA2KTtcbi8vICAgICAgICAgICAgICAgICAgIHJlcy5ib2R5LnNob3VsZC5iZS5hKCdvYmplY3QnKTtcbi8vICAgICAgICAgICAgICAgICAgIHJlcy5ib2R5LnNob3VsZC5oYXZlLnByb3BlcnR5KCdtZXNzYWdlJykuZXFsKCdJbmNvbXBsZXRlIGZpZWxkJyk7XG4vL1xuLy8gICAgICAgICAgICAgICAgICAgZG9uZSgpO1xuLy8gICAgICAgICAgICAgICAgIH0pO1xuLy8gICAgICAgICAgICAgfSk7XG4vLyAgICAgICAgIH0pO1xuLy8gICAgIH0pO1xuLy8gICAgIGl0KCdpdCBzaG91bGQgQ1JFQVRFIGFuIGFuc3dlcicsIChkb25lKSA9PiB7XG4vLyAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgIC5wb3N0KCcvYXV0aC92MS9zaWdudXAnKVxuLy8gICAgICAgICAuZmllbGQoJ3RpdGxlJywgJ21yJylcbi8vICAgICAgICAgLmZpZWxkKCdmaXJzdG5hbWUnLCAnSnVzdGluJylcbi8vICAgICAgICAgLmZpZWxkKCdsYXN0bmFtZScsICdJa3d1b21hJylcbi8vICAgICAgICAgLmZpZWxkKCd1c2VybmFtZScsICdqdXN0bWFuJylcbi8vICAgICAgICAgLmZpZWxkKCdwYXNzd29yZCcsICdhYmMnKVxuLy8gICAgICAgICAuZmllbGQoJ2VtYWlsJywgJ2p1c3RpbkBnbWFpbC5jb20nKVxuLy8gICAgICAgICAuZmllbGQoJ2dlbmRlcicsICdtYWxlJylcbi8vICAgICAgICAgLmZpZWxkKCdjb3VudHJ5JywgJ05pZ2VyaWEnKVxuLy8gICAgICAgICAuZmllbGQoJ3Bob25lJywgJzY2OTc5NjQ5Jylcbi8vICAgICAgICAgLmF0dGFjaCgndXNlckltYWdlJywgJycpXG4vLyAgICAgICAgIC5lbmQoKGVycjEsIHJlczEpID0+IHtcbi8vICAgICAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgICAgICAucG9zdCgnL3YxL3F1ZXN0aW9ucycpXG4vLyAgICAgICAgICAgICAuc2V0KCd4LWFjY2Vzcy10b2tlbicsIHJlczEuYm9keS50b2tlbilcbi8vICAgICAgICAgICAgIC5maWVsZCgndGl0bGUnLCAnSG93IGZhciBuYScpXG4vLyAgICAgICAgICAgICAuZmllbGQoJ3F1ZXN0aW9uJywgJ0kganVzdCB3YW4gbm8gaG93IHUgZGV5Jylcbi8vICAgICAgICAgICAgIC5maWVsZCgndGFncycsICdqYXZhLGphdmFzY3JpcHQnKVxuLy8gICAgICAgICAgICAgLmF0dGFjaCgncXVlc3Rpb25JbWFnZScsICcnKVxuLy8gICAgICAgICAgICAgLmVuZCgoZXJyMiwgcmVzMikgPT4ge1xuLy8gICAgICAgICAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgICAgICAgICAgLnBvc3QoYC92MS9xdWVzdGlvbnMvJHtyZXMyLmJvZHkuaWR9L2Fuc3dlcnNgKVxuLy8gICAgICAgICAgICAgICAgIC5zZXQoJ3gtYWNjZXNzLXRva2VuJywgcmVzMS5ib2R5LnRva2VuKVxuLy8gICAgICAgICAgICAgICAgIC5maWVsZCgncmVzcG9uc2UnLCAndmVyeSBmaW5lJylcbi8vICAgICAgICAgICAgICAgICAuYXR0YWNoKCdhbnN3ZXJJbWFnZScsICcuL3Rlc3RGaWxlLnBuZycpXG4vLyAgICAgICAgICAgICAgICAgLmVuZCgoZXJyLCByZXMpID0+IHtcbi8vICAgICAgICAgICAgICAgICAgIHJlcy5zaG91bGQuaGF2ZS5zdGF0dXMoMjAxKTtcbi8vICAgICAgICAgICAgICAgICAgIHJlcy5ib2R5LnNob3VsZC5iZS5hKCdvYmplY3QnKTtcbi8vICAgICAgICAgICAgICAgICAgIHJlcy5ib2R5LnNob3VsZC5oYXZlLnByb3BlcnR5KCdyZXNwb25zZScpLmVxbCgndmVyeSBmaW5lJyk7XG4vLyAgICAgICAgICAgICAgICAgICByZXMuYm9keS5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgndXNlcmlkJykuZXFsKHJlczEuYm9keS51c2VyLmlkKTtcbi8vICAgICAgICAgICAgICAgICAgIHJlcy5ib2R5LnNob3VsZC5oYXZlLnByb3BlcnR5KCdhY2NlcHRlZCcpLmVxbChmYWxzZSk7XG4vLyAgICAgICAgICAgICAgICAgICByZXMuYm9keS5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgndm90ZScpLmVxbCgwKTtcbi8vICAgICAgICAgICAgICAgICAgIHJlcy5ib2R5LnNob3VsZC5oYXZlLnByb3BlcnR5KCdhbnN3ZXJpbWFnZScpLmVxbChyZXMuYm9keS5hbnN3ZXJpbWFnZSk7XG4vL1xuLy8gICAgICAgICAgICAgICAgICAgLy8gZGVsZXRlIHRlc3QgaW1hZ2UgZmlsZVxuLy8gICAgICAgICAgICAgICAgICAgaWYgKHBhdGgucmVzb2x2ZSgnLi90ZXN0RmlsZS5wbmcnKSkge1xuLy8gICAgICAgICAgICAgICAgICAgICBkZWxldGVGaWxlKGAuLyR7cmVzLmJvZHkuYW5zd2VyaW1hZ2V9YCk7XG4vLyAgICAgICAgICAgICAgICAgICB9XG4vLyAgICAgICAgICAgICAgICAgICBkb25lKCk7XG4vLyAgICAgICAgICAgICAgICAgfSk7XG4vLyAgICAgICAgICAgICB9KTtcbi8vICAgICAgICAgfSk7XG4vLyAgICAgfSk7XG4vLyAgICAgaXQoJ2l0IHNob3VsZCBDUkVBVEUgYW4gYW5zd2VyIHdpdGhvdXQgaW1hZ2UnLCAoZG9uZSkgPT4ge1xuLy8gICAgICAgcmVxdWVzdFxuLy8gICAgICAgICAucG9zdCgnL2F1dGgvdjEvc2lnbnVwJylcbi8vICAgICAgICAgLmZpZWxkKCd0aXRsZScsICdtcicpXG4vLyAgICAgICAgIC5maWVsZCgnZmlyc3RuYW1lJywgJ0p1c3RpbicpXG4vLyAgICAgICAgIC5maWVsZCgnbGFzdG5hbWUnLCAnSWt3dW9tYScpXG4vLyAgICAgICAgIC5maWVsZCgndXNlcm5hbWUnLCAnanVzdG1hbicpXG4vLyAgICAgICAgIC5maWVsZCgncGFzc3dvcmQnLCAnYWJjJylcbi8vICAgICAgICAgLmZpZWxkKCdlbWFpbCcsICdqdXN0aW5AZ21haWwuY29tJylcbi8vICAgICAgICAgLmZpZWxkKCdnZW5kZXInLCAnbWFsZScpXG4vLyAgICAgICAgIC5maWVsZCgnY291bnRyeScsICdOaWdlcmlhJylcbi8vICAgICAgICAgLmZpZWxkKCdwaG9uZScsICc2Njk3OTY0OScpXG4vLyAgICAgICAgIC5hdHRhY2goJ3VzZXJJbWFnZScsICcnKVxuLy8gICAgICAgICAuZW5kKChlcnIxLCByZXMxKSA9PiB7XG4vLyAgICAgICAgICAgcmVxdWVzdFxuLy8gICAgICAgICAgICAgLnBvc3QoJy92MS9xdWVzdGlvbnMnKVxuLy8gICAgICAgICAgICAgLnNldCgneC1hY2Nlc3MtdG9rZW4nLCByZXMxLmJvZHkudG9rZW4pXG4vLyAgICAgICAgICAgICAuZmllbGQoJ3RpdGxlJywgJ0hvdyBmYXIgbmEnKVxuLy8gICAgICAgICAgICAgLmZpZWxkKCdxdWVzdGlvbicsICdJIGp1c3Qgd2FuIG5vIGhvdyB1IGRleScpXG4vLyAgICAgICAgICAgICAuZmllbGQoJ3RhZ3MnLCAnamF2YSxqYXZhc2NyaXB0Jylcbi8vICAgICAgICAgICAgIC5hdHRhY2goJ3F1ZXN0aW9uSW1hZ2UnLCAnJylcbi8vICAgICAgICAgICAgIC5lbmQoKGVycjIsIHJlczIpID0+IHtcbi8vICAgICAgICAgICAgICAgcmVxdWVzdFxuLy8gICAgICAgICAgICAgICAgIC5wb3N0KGAvdjEvcXVlc3Rpb25zLyR7cmVzMi5ib2R5LmlkfS9hbnN3ZXJzYClcbi8vICAgICAgICAgICAgICAgICAuc2V0KCd4LWFjY2Vzcy10b2tlbicsIHJlczEuYm9keS50b2tlbilcbi8vICAgICAgICAgICAgICAgICAuZmllbGQoJ3Jlc3BvbnNlJywgJ3ZlcnkgZmluZScpXG4vLyAgICAgICAgICAgICAgICAgLmF0dGFjaCgnYW5zd2VySW1hZ2UnLCAnJylcbi8vICAgICAgICAgICAgICAgICAuZW5kKChlcnIsIHJlcykgPT4ge1xuLy8gICAgICAgICAgICAgICAgICAgcmVzLnNob3VsZC5oYXZlLnN0YXR1cygyMDEpO1xuLy8gICAgICAgICAgICAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmJlLmEoJ29iamVjdCcpO1xuLy8gICAgICAgICAgICAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmhhdmUucHJvcGVydHkoJ3Jlc3BvbnNlJykuZXFsKCd2ZXJ5IGZpbmUnKTtcbi8vICAgICAgICAgICAgICAgICAgIHJlcy5ib2R5LnNob3VsZC5oYXZlLnByb3BlcnR5KCd1c2VyaWQnKS5lcWwocmVzMS5ib2R5LnVzZXIuaWQpO1xuLy8gICAgICAgICAgICAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmhhdmUucHJvcGVydHkoJ2FjY2VwdGVkJykuZXFsKGZhbHNlKTtcbi8vICAgICAgICAgICAgICAgICAgIHJlcy5ib2R5LnNob3VsZC5oYXZlLnByb3BlcnR5KCd2b3RlJykuZXFsKDApO1xuLy8gICAgICAgICAgICAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmhhdmUucHJvcGVydHkoJ2Fuc3dlcmltYWdlJykuZXFsKCcnKTtcbi8vXG4vLyAgICAgICAgICAgICAgICAgICBkb25lKCk7XG4vLyAgICAgICAgICAgICAgICAgfSk7XG4vLyAgICAgICAgICAgICB9KTtcbi8vICAgICAgICAgfSk7XG4vLyAgICAgfSk7XG4vLyAgICAgaXQoJ2l0IHNob3VsZCBub3QgQ1JFQVRFIGFuIGFuc3dlciB3aGVuIGltYWdlIGZpbGUgdHlwZSBub3QganBnL3BuZycsIChkb25lKSA9PiB7XG4vLyAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgIC5wb3N0KCcvYXV0aC92MS9zaWdudXAnKVxuLy8gICAgICAgICAuZmllbGQoJ3RpdGxlJywgJ21yJylcbi8vICAgICAgICAgLmZpZWxkKCdmaXJzdG5hbWUnLCAnSnVzdGluJylcbi8vICAgICAgICAgLmZpZWxkKCdsYXN0bmFtZScsICdJa3d1b21hJylcbi8vICAgICAgICAgLmZpZWxkKCd1c2VybmFtZScsICdqdXN0bWFuJylcbi8vICAgICAgICAgLmZpZWxkKCdwYXNzd29yZCcsICdhYmMnKVxuLy8gICAgICAgICAuZmllbGQoJ2VtYWlsJywgJ2p1c3RpbkBnbWFpbC5jb20nKVxuLy8gICAgICAgICAuZmllbGQoJ2dlbmRlcicsICdtYWxlJylcbi8vICAgICAgICAgLmZpZWxkKCdjb3VudHJ5JywgJ05pZ2VyaWEnKVxuLy8gICAgICAgICAuZmllbGQoJ3Bob25lJywgJzY2OTc5NjQ5Jylcbi8vICAgICAgICAgLmF0dGFjaCgndXNlckltYWdlJywgJycpXG4vLyAgICAgICAgIC5lbmQoKGVycjEsIHJlczEpID0+IHtcbi8vICAgICAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgICAgICAucG9zdCgnL3YxL3F1ZXN0aW9ucycpXG4vLyAgICAgICAgICAgICAuc2V0KCd4LWFjY2Vzcy10b2tlbicsIHJlczEuYm9keS50b2tlbilcbi8vICAgICAgICAgICAgIC5maWVsZCgndGl0bGUnLCAnSG93IGZhciBuYScpXG4vLyAgICAgICAgICAgICAuZmllbGQoJ3F1ZXN0aW9uJywgJ0kganVzdCB3YW4gbm8gaG93IHUgZGV5Jylcbi8vICAgICAgICAgICAgIC5maWVsZCgndGFncycsICdqYXZhLGphdmFzY3JpcHQnKVxuLy8gICAgICAgICAgICAgLmF0dGFjaCgncXVlc3Rpb25JbWFnZScsICcnKVxuLy8gICAgICAgICAgICAgLmVuZCgoZXJyMiwgcmVzMikgPT4ge1xuLy8gICAgICAgICAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgICAgICAgICAgLnBvc3QoYC92MS9xdWVzdGlvbnMvJHtyZXMyLmJvZHkuaWR9L2Fuc3dlcnNgKVxuLy8gICAgICAgICAgICAgICAgIC5zZXQoJ3gtYWNjZXNzLXRva2VuJywgcmVzMS5ib2R5LnRva2VuKVxuLy8gICAgICAgICAgICAgICAgIC5maWVsZCgncmVzcG9uc2UnLCAndmVyeSBmaW5lJylcbi8vICAgICAgICAgICAgICAgICAuYXR0YWNoKCdhbnN3ZXJJbWFnZScsICcuL3Rlc3RGaWxlVHlwZS50eHQnKVxuLy8gICAgICAgICAgICAgICAgIC5lbmQoKGVyciwgcmVzKSA9PiB7XG4vLyAgICAgICAgICAgICAgICAgICByZXMuc2hvdWxkLmhhdmUuc3RhdHVzKDQwMyk7XG4vLyAgICAgICAgICAgICAgICAgICByZXMuYm9keS5zaG91bGQuYmUuYSgnb2JqZWN0Jyk7XG4vLyAgICAgICAgICAgICAgICAgICByZXMuYm9keS5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgnbWVzc2FnZScpLmVxbCgnT25seSAucG5nIGFuZCAuanBnIGZpbGVzIGFyZSBhbGxvd2VkIScpO1xuLy8gICAgICAgICAgICAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmhhdmUucHJvcGVydHkoJ2Vycm9yJykuZXFsKHRydWUpO1xuLy9cbi8vICAgICAgICAgICAgICAgICAgIGRvbmUoKTtcbi8vICAgICAgICAgICAgICAgICB9KTtcbi8vICAgICAgICAgICAgIH0pO1xuLy8gICAgICAgICB9KTtcbi8vICAgICB9KTtcbi8vICAgICBpdCgnaXQgc2hvdWxkIG5vdCBDUkVBVEUgYW4gYW5zd2VyIHdoZW4gaW1hZ2UgZmlsZSBzaXplIGlzIGxhcmdlciB0aGFuIDJtYicsIChkb25lKSA9PiB7XG4vLyAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgIC5wb3N0KCcvYXV0aC92MS9zaWdudXAnKVxuLy8gICAgICAgICAuZmllbGQoJ3RpdGxlJywgJ21yJylcbi8vICAgICAgICAgLmZpZWxkKCdmaXJzdG5hbWUnLCAnSnVzdGluJylcbi8vICAgICAgICAgLmZpZWxkKCdsYXN0bmFtZScsICdJa3d1b21hJylcbi8vICAgICAgICAgLmZpZWxkKCd1c2VybmFtZScsICdqdXN0bWFuJylcbi8vICAgICAgICAgLmZpZWxkKCdwYXNzd29yZCcsICdhYmMnKVxuLy8gICAgICAgICAuZmllbGQoJ2VtYWlsJywgJ2p1c3RpbkBnbWFpbC5jb20nKVxuLy8gICAgICAgICAuZmllbGQoJ2dlbmRlcicsICdtYWxlJylcbi8vICAgICAgICAgLmZpZWxkKCdjb3VudHJ5JywgJ05pZ2VyaWEnKVxuLy8gICAgICAgICAuZmllbGQoJ3Bob25lJywgJzY2OTc5NjQ5Jylcbi8vICAgICAgICAgLmF0dGFjaCgndXNlckltYWdlJywgJycpXG4vLyAgICAgICAgIC5lbmQoKGVycjEsIHJlczEpID0+IHtcbi8vICAgICAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgICAgICAucG9zdCgnL3YxL3F1ZXN0aW9ucycpXG4vLyAgICAgICAgICAgICAuc2V0KCd4LWFjY2Vzcy10b2tlbicsIHJlczEuYm9keS50b2tlbilcbi8vICAgICAgICAgICAgIC5maWVsZCgndGl0bGUnLCAnSG93IGZhciBuYScpXG4vLyAgICAgICAgICAgICAuZmllbGQoJ3F1ZXN0aW9uJywgJ0kganVzdCB3YW4gbm8gaG93IHUgZGV5Jylcbi8vICAgICAgICAgICAgIC5maWVsZCgndGFncycsICdqYXZhLGphdmFzY3JpcHQnKVxuLy8gICAgICAgICAgICAgLmF0dGFjaCgncXVlc3Rpb25JbWFnZScsICcnKVxuLy8gICAgICAgICAgICAgLmVuZCgoZXJyMiwgcmVzMikgPT4ge1xuLy8gICAgICAgICAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgICAgICAgICAgLnBvc3QoYC92MS9xdWVzdGlvbnMvJHtyZXMyLmJvZHkuaWR9L2Fuc3dlcnNgKVxuLy8gICAgICAgICAgICAgICAgIC5zZXQoJ3gtYWNjZXNzLXRva2VuJywgcmVzMS5ib2R5LnRva2VuKVxuLy8gICAgICAgICAgICAgICAgIC5maWVsZCgncmVzcG9uc2UnLCAndmVyeSBmaW5lJylcbi8vICAgICAgICAgICAgICAgICAuYXR0YWNoKCdhbnN3ZXJJbWFnZScsICcuL3Rlc3RGaWxlU2l6ZS5qcGcnKVxuLy8gICAgICAgICAgICAgICAgIC5lbmQoKGVyciwgcmVzKSA9PiB7XG4vLyAgICAgICAgICAgICAgICAgICByZXMuc2hvdWxkLmhhdmUuc3RhdHVzKDQwMyk7XG4vLyAgICAgICAgICAgICAgICAgICByZXMuYm9keS5zaG91bGQuYmUuYSgnb2JqZWN0Jyk7XG4vLyAgICAgICAgICAgICAgICAgICByZXMuYm9keS5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgnbWVzc2FnZScpXG4vLyAgICAgICAgICAgICAgICAgICAgIC5lcWwoJ2ZpbGUgc2hvdWxkIG5vdCBiZSBtb3JlIHRoYW4gMm1iIScpO1xuLy8gICAgICAgICAgICAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmhhdmUucHJvcGVydHkoJ2Vycm9yJykuZXFsKHRydWUpO1xuLy9cbi8vICAgICAgICAgICAgICAgICAgIGRvbmUoKTtcbi8vICAgICAgICAgICAgICAgICB9KTtcbi8vICAgICAgICAgICAgIH0pO1xuLy8gICAgICAgICB9KTtcbi8vICAgICB9KTtcbi8vICAgICBpdCgnaXQgc2hvdWxkIG5vdCBDUkVBVEUgYW4gYW5zd2VyIHdoZW4gYSB0b2tlbiBpcyBub3QgcHJvdmlkZWQnLCAoZG9uZSkgPT4ge1xuLy8gICAgICAgcmVxdWVzdFxuLy8gICAgICAgICAucG9zdCgnL2F1dGgvdjEvc2lnbnVwJylcbi8vICAgICAgICAgLmZpZWxkKCd0aXRsZScsICdtcicpXG4vLyAgICAgICAgIC5maWVsZCgnZmlyc3RuYW1lJywgJ0p1c3RpbicpXG4vLyAgICAgICAgIC5maWVsZCgnbGFzdG5hbWUnLCAnSWt3dW9tYScpXG4vLyAgICAgICAgIC5maWVsZCgndXNlcm5hbWUnLCAnanVzdG1hbicpXG4vLyAgICAgICAgIC5maWVsZCgncGFzc3dvcmQnLCAnYWJjJylcbi8vICAgICAgICAgLmZpZWxkKCdlbWFpbCcsICdqdXN0aW5AZ21haWwuY29tJylcbi8vICAgICAgICAgLmZpZWxkKCdnZW5kZXInLCAnbWFsZScpXG4vLyAgICAgICAgIC5maWVsZCgnY291bnRyeScsICdOaWdlcmlhJylcbi8vICAgICAgICAgLmZpZWxkKCdwaG9uZScsICc2Njk3OTY0OScpXG4vLyAgICAgICAgIC5hdHRhY2goJ3VzZXJJbWFnZScsICcnKVxuLy8gICAgICAgICAuZW5kKChlcnIxLCByZXMxKSA9PiB7XG4vLyAgICAgICAgICAgcmVxdWVzdFxuLy8gICAgICAgICAgICAgLnBvc3QoJy92MS9xdWVzdGlvbnMnKVxuLy8gICAgICAgICAgICAgLnNldCgneC1hY2Nlc3MtdG9rZW4nLCByZXMxLmJvZHkudG9rZW4pXG4vLyAgICAgICAgICAgICAuZmllbGQoJ3RpdGxlJywgJ0hvdyBmYXIgbmEnKVxuLy8gICAgICAgICAgICAgLmZpZWxkKCdxdWVzdGlvbicsICdJIGp1c3Qgd2FuIG5vIGhvdyB1IGRleScpXG4vLyAgICAgICAgICAgICAuZmllbGQoJ3RhZ3MnLCAnamF2YSxqYXZhc2NyaXB0Jylcbi8vICAgICAgICAgICAgIC5hdHRhY2goJ3F1ZXN0aW9uSW1hZ2UnLCAnJylcbi8vICAgICAgICAgICAgIC5lbmQoKGVycjIsIHJlczIpID0+IHtcbi8vICAgICAgICAgICAgICAgcmVxdWVzdFxuLy8gICAgICAgICAgICAgICAgIC5wb3N0KGAvdjEvcXVlc3Rpb25zLyR7cmVzMi5ib2R5LmlkfS9hbnN3ZXJzYClcbi8vICAgICAgICAgICAgICAgICAuZmllbGQoJ3Jlc3BvbnNlJywgJ3ZlcnkgZmluZScpXG4vLyAgICAgICAgICAgICAgICAgLmF0dGFjaCgnYW5zd2VySW1hZ2UnLCAnLi90ZXN0RmlsZS5wbmcnKVxuLy8gICAgICAgICAgICAgICAgIC5lbmQoKGVyciwgcmVzKSA9PiB7XG4vLyAgICAgICAgICAgICAgICAgICByZXMuc2hvdWxkLmhhdmUuc3RhdHVzKDQwMSk7XG4vLyAgICAgICAgICAgICAgICAgICByZXMuYm9keS5zaG91bGQuYmUuYSgnb2JqZWN0Jyk7XG4vLyAgICAgICAgICAgICAgICAgICByZXMuYm9keS5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgnYXV0aCcpLmVxbChmYWxzZSk7XG4vLyAgICAgICAgICAgICAgICAgICByZXMuYm9keS5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgnbWVzc2FnZScpLmVxbCgnTm8gdG9rZW4gcHJvdmlkZWQuJyk7XG4vL1xuLy8gICAgICAgICAgICAgICAgICAgZG9uZSgpO1xuLy8gICAgICAgICAgICAgICAgIH0pO1xuLy8gICAgICAgICAgICAgfSk7XG4vLyAgICAgICAgIH0pO1xuLy8gICAgIH0pO1xuLy8gICAgIGl0KCdpdCBzaG91bGQgbm90IENSRUFURSBhbiBhbnN3ZXIgd2hlbiBpdCBmYWlscyB0byBhdXRoZW50aWNhdGUgdG9rZW4nLCAoZG9uZSkgPT4ge1xuLy8gICAgICAgcmVxdWVzdFxuLy8gICAgICAgICAucG9zdCgnL2F1dGgvdjEvc2lnbnVwJylcbi8vICAgICAgICAgLmZpZWxkKCd0aXRsZScsICdtcicpXG4vLyAgICAgICAgIC5maWVsZCgnZmlyc3RuYW1lJywgJ0p1c3RpbicpXG4vLyAgICAgICAgIC5maWVsZCgnbGFzdG5hbWUnLCAnSWt3dW9tYScpXG4vLyAgICAgICAgIC5maWVsZCgndXNlcm5hbWUnLCAnanVzdG1hbicpXG4vLyAgICAgICAgIC5maWVsZCgncGFzc3dvcmQnLCAnYWJjJylcbi8vICAgICAgICAgLmZpZWxkKCdlbWFpbCcsICdqdXN0aW5AZ21haWwuY29tJylcbi8vICAgICAgICAgLmZpZWxkKCdnZW5kZXInLCAnbWFsZScpXG4vLyAgICAgICAgIC5maWVsZCgnY291bnRyeScsICdOaWdlcmlhJylcbi8vICAgICAgICAgLmZpZWxkKCdwaG9uZScsICc2Njk3OTY0OScpXG4vLyAgICAgICAgIC5hdHRhY2goJ3VzZXJJbWFnZScsICcnKVxuLy8gICAgICAgICAuZW5kKChlcnIxLCByZXMxKSA9PiB7XG4vLyAgICAgICAgICAgcmVxdWVzdFxuLy8gICAgICAgICAgICAgLnBvc3QoJy92MS9xdWVzdGlvbnMnKVxuLy8gICAgICAgICAgICAgLnNldCgneC1hY2Nlc3MtdG9rZW4nLCByZXMxLmJvZHkudG9rZW4pXG4vLyAgICAgICAgICAgICAuZmllbGQoJ3RpdGxlJywgJ0hvdyBmYXIgbmEnKVxuLy8gICAgICAgICAgICAgLmZpZWxkKCdxdWVzdGlvbicsICdJIGp1c3Qgd2FuIG5vIGhvdyB1IGRleScpXG4vLyAgICAgICAgICAgICAuZmllbGQoJ3RhZ3MnLCAnamF2YSxqYXZhc2NyaXB0Jylcbi8vICAgICAgICAgICAgIC5hdHRhY2goJ3F1ZXN0aW9uSW1hZ2UnLCAnJylcbi8vICAgICAgICAgICAgIC5lbmQoKGVycjIsIHJlczIpID0+IHtcbi8vICAgICAgICAgICAgICAgcmVxdWVzdFxuLy8gICAgICAgICAgICAgICAgIC5wb3N0KGAvdjEvcXVlc3Rpb25zLyR7cmVzMi5ib2R5LmlkfS9hbnN3ZXJzYClcbi8vICAgICAgICAgICAgICAgICAuc2V0KCd4LWFjY2Vzcy10b2tlbicsICdqZGtqZGZza2pzNDMzNTRteHhuenNkei5kcmZzZmYuc3Jmc2YzNTMyNCcpXG4vLyAgICAgICAgICAgICAgICAgLmZpZWxkKCdyZXNwb25zZScsICd2ZXJ5IGZpbmUnKVxuLy8gICAgICAgICAgICAgICAgIC5hdHRhY2goJ2Fuc3dlckltYWdlJywgJy4vdGVzdEZpbGUucG5nJylcbi8vICAgICAgICAgICAgICAgICAuZW5kKChlcnIsIHJlcykgPT4ge1xuLy8gICAgICAgICAgICAgICAgICAgcmVzLnNob3VsZC5oYXZlLnN0YXR1cyg1MDApO1xuLy8gICAgICAgICAgICAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmJlLmEoJ29iamVjdCcpO1xuLy8gICAgICAgICAgICAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmhhdmUucHJvcGVydHkoJ2F1dGgnKS5lcWwoZmFsc2UpO1xuLy8gICAgICAgICAgICAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmhhdmUucHJvcGVydHkoJ21lc3NhZ2UnKS5lcWwoJ0ZhaWxlZCB0byBhdXRoZW50aWNhdGUgdG9rZW4uJyk7XG4vL1xuLy8gICAgICAgICAgICAgICAgICAgZG9uZSgpO1xuLy8gICAgICAgICAgICAgICAgIH0pO1xuLy8gICAgICAgICAgICAgfSk7XG4vLyAgICAgICAgIH0pO1xuLy8gICAgIH0pO1xuLy8gICAgIGl0KCdpdCBzaG91bGQgbm90IENSRUFURSBhbiBhbnN3ZXIgd2hlbiB1c2VyIGlzIGRlbGV0ZSBidXQgdG9rZW4gZXhpc3QnLCAoZG9uZSkgPT4ge1xuLy8gICAgICAgcmVxdWVzdFxuLy8gICAgICAgICAucG9zdCgnL2F1dGgvdjEvc2lnbnVwJylcbi8vICAgICAgICAgLmZpZWxkKCd0aXRsZScsICdtcicpXG4vLyAgICAgICAgIC5maWVsZCgnZmlyc3RuYW1lJywgJ0p1c3RpbicpXG4vLyAgICAgICAgIC5maWVsZCgnbGFzdG5hbWUnLCAnSWt3dW9tYScpXG4vLyAgICAgICAgIC5maWVsZCgndXNlcm5hbWUnLCAnanVzdG1hbicpXG4vLyAgICAgICAgIC5maWVsZCgncGFzc3dvcmQnLCAnYWJjJylcbi8vICAgICAgICAgLmZpZWxkKCdlbWFpbCcsICdqdXN0aW5AZ21haWwuY29tJylcbi8vICAgICAgICAgLmZpZWxkKCdnZW5kZXInLCAnbWFsZScpXG4vLyAgICAgICAgIC5maWVsZCgnY291bnRyeScsICdOaWdlcmlhJylcbi8vICAgICAgICAgLmZpZWxkKCdwaG9uZScsICc2Njk3OTY0OScpXG4vLyAgICAgICAgIC5hdHRhY2goJ3VzZXJJbWFnZScsICcnKVxuLy8gICAgICAgICAuZW5kKChlcnIxLCByZXMxKSA9PiB7XG4vLyAgICAgICAgICAgcmVxdWVzdFxuLy8gICAgICAgICAgICAgLnBvc3QoJy92MS9xdWVzdGlvbnMnKVxuLy8gICAgICAgICAgICAgLnNldCgneC1hY2Nlc3MtdG9rZW4nLCByZXMxLmJvZHkudG9rZW4pXG4vLyAgICAgICAgICAgICAuZmllbGQoJ3RpdGxlJywgJ0hvdyBmYXIgbmEnKVxuLy8gICAgICAgICAgICAgLmZpZWxkKCdxdWVzdGlvbicsICdJIGp1c3Qgd2FuIG5vIGhvdyB1IGRleScpXG4vLyAgICAgICAgICAgICAuZmllbGQoJ3RhZ3MnLCAnamF2YSxqYXZhc2NyaXB0Jylcbi8vICAgICAgICAgICAgIC5hdHRhY2goJ3F1ZXN0aW9uSW1hZ2UnLCAnJylcbi8vICAgICAgICAgICAgIC5lbmQoKGVycjIsIHJlczIpID0+IHtcbi8vICAgICAgICAgICAgICAgVXNlci5kZXN0cm95KHsgd2hlcmU6IHsgaWQ6IHJlczEuYm9keS51c2VyLmlkIH0gfSkudGhlbigoKSA9PiB7XG4vLyAgICAgICAgICAgICAgICAgcmVxdWVzdFxuLy8gICAgICAgICAgICAgICAgICAgLnBvc3QoYC92MS9xdWVzdGlvbnMvJHtyZXMyLmJvZHkuaWR9L2Fuc3dlcnNgKVxuLy8gICAgICAgICAgICAgICAgICAgLnNldCgneC1hY2Nlc3MtdG9rZW4nLCByZXMxLmJvZHkudG9rZW4pXG4vLyAgICAgICAgICAgICAgICAgICAuZmllbGQoJ3Jlc3BvbnNlJywgJ3ZlcnkgZmluZScpXG4vLyAgICAgICAgICAgICAgICAgICAuYXR0YWNoKCdhbnN3ZXJJbWFnZScsICcuL3Rlc3RGaWxlLnBuZycpXG4vLyAgICAgICAgICAgICAgICAgICAuZW5kKChlcnIsIHJlcykgPT4ge1xuLy8gICAgICAgICAgICAgICAgICAgICByZXMuc2hvdWxkLmhhdmUuc3RhdHVzKDQwMCk7XG4vLyAgICAgICAgICAgICAgICAgICAgIHJlcy5ib2R5LnNob3VsZC5iZS5hKCdvYmplY3QnKTtcbi8vICAgICAgICAgICAgICAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmhhdmUucHJvcGVydHkoJ21lc3NhZ2UnKVxuLy8gICAgICAgICAgICAgICAgICAgICAgIC5lcWwoJ3VzZXIgaGFzIGJlZW4gcmVtb3ZlZCBmcm9tIHRoZSBkYXRhYmFzZScpO1xuLy8gICAgICAgICAgICAgICAgICAgICBkb25lKCk7XG4vLyAgICAgICAgICAgICAgICAgICB9KTtcbi8vICAgICAgICAgICAgICAgfSk7XG4vLyAgICAgICAgICAgICB9KTtcbi8vICAgICAgICAgfSk7XG4vLyAgICAgfSk7XG4vLyAgIH0pO1xuLy9cbi8vICAgLypcbi8vICAgICogVGVzdCB0aGUgL1BVVC86aWQgcm91dGVcbi8vICAgICovXG4vLyAgIGRlc2NyaWJlKCcvUFVULzppZCBhbnN3ZXInLCAoKSA9PiB7XG4vLyAgICAgaXQoJ2l0IHNob3VsZCBVUERBVEUgYW4gYW5zd2VyIGdpdmVuIHRoZSBhbnN3ZXIgaWQgYnkgdGhlIHF1ZXN0aW9uIGF1dGhvcicsIChkb25lKSA9PiB7XG4vLyAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgIC5wb3N0KCcvYXV0aC92MS9zaWdudXAnKVxuLy8gICAgICAgICAuZmllbGQoJ3RpdGxlJywgJ21yJylcbi8vICAgICAgICAgLmZpZWxkKCdmaXJzdG5hbWUnLCAnSnVzdGluJylcbi8vICAgICAgICAgLmZpZWxkKCdsYXN0bmFtZScsICdJa3d1b21hJylcbi8vICAgICAgICAgLmZpZWxkKCd1c2VybmFtZScsICdqdXN0bWFuJylcbi8vICAgICAgICAgLmZpZWxkKCdwYXNzd29yZCcsICdhYmMnKVxuLy8gICAgICAgICAuZmllbGQoJ2VtYWlsJywgJ2p1c3RpbkBnbWFpbC5jb20nKVxuLy8gICAgICAgICAuZmllbGQoJ2dlbmRlcicsICdtYWxlJylcbi8vICAgICAgICAgLmZpZWxkKCdjb3VudHJ5JywgJ05pZ2VyaWEnKVxuLy8gICAgICAgICAuZmllbGQoJ3Bob25lJywgJzY2OTc5NjQ5Jylcbi8vICAgICAgICAgLmF0dGFjaCgndXNlckltYWdlJywgJycpXG4vLyAgICAgICAgIC5lbmQoKGVycjEsIHJlczEpID0+IHtcbi8vICAgICAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgICAgICAucG9zdCgnL3YxL3F1ZXN0aW9ucycpXG4vLyAgICAgICAgICAgICAuc2V0KCd4LWFjY2Vzcy10b2tlbicsIHJlczEuYm9keS50b2tlbilcbi8vICAgICAgICAgICAgIC5maWVsZCgndGl0bGUnLCAnSG93IGZhciBuYScpXG4vLyAgICAgICAgICAgICAuZmllbGQoJ3F1ZXN0aW9uJywgJ0kganVzdCB3YW4gbm8gaG93IHUgZGV5Jylcbi8vICAgICAgICAgICAgIC5maWVsZCgndGFncycsICdqYXZhLGphdmFzY3JpcHQnKVxuLy8gICAgICAgICAgICAgLmF0dGFjaCgncXVlc3Rpb25JbWFnZScsICcnKVxuLy8gICAgICAgICAgICAgLmVuZCgoZXJyMiwgcmVzMikgPT4ge1xuLy8gICAgICAgICAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgICAgICAgICAgLnBvc3QoYC92MS9xdWVzdGlvbnMvJHtyZXMyLmJvZHkuaWR9L2Fuc3dlcnNgKVxuLy8gICAgICAgICAgICAgICAgIC5zZXQoJ3gtYWNjZXNzLXRva2VuJywgcmVzMS5ib2R5LnRva2VuKVxuLy8gICAgICAgICAgICAgICAgIC5maWVsZCgncmVzcG9uc2UnLCAndmVyeSBmaW5lJylcbi8vICAgICAgICAgICAgICAgICAuYXR0YWNoKCdhbnN3ZXJJbWFnZScsICcnKVxuLy8gICAgICAgICAgICAgICAgIC5lbmQoKGVyciwgcmVzKSA9PiB7XG4vLyAgICAgICAgICAgICAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgICAgICAgICAgICAgIC5wdXQoYC92MS9xdWVzdGlvbnMvJHtyZXMyLmJvZHkuaWR9L2Fuc3dlcnMvJHtyZXMuYm9keS5pZH1gKVxuLy8gICAgICAgICAgICAgICAgICAgICAuc2V0KCd4LWFjY2Vzcy10b2tlbicsIHJlczEuYm9keS50b2tlbilcbi8vICAgICAgICAgICAgICAgICAgICAgLmZpZWxkKCdhY2NlcHRlZCcsIHRydWUpXG4vLyAgICAgICAgICAgICAgICAgICAgIC5lbmQoKGVyciwgcmVzKSA9PiB7XG4vLyAgICAgICAgICAgICAgICAgICAgICAgcmVzLnNob3VsZC5oYXZlLnN0YXR1cygyMDApO1xuLy8gICAgICAgICAgICAgICAgICAgICAgIHJlcy5ib2R5LnNob3VsZC5iZS5hKCdvYmplY3QnKTtcbi8vICAgICAgICAgICAgICAgICAgICAgICByZXMuYm9keS5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgncmVzcG9uc2UnKS5lcWwoJ3ZlcnkgZmluZScpO1xuLy8gICAgICAgICAgICAgICAgICAgICAgIHJlcy5ib2R5LnNob3VsZC5oYXZlLnByb3BlcnR5KCd1c2VyaWQnKS5lcWwocmVzMS5ib2R5LnVzZXIuaWQpO1xuLy8gICAgICAgICAgICAgICAgICAgICAgIHJlcy5ib2R5LnNob3VsZC5oYXZlLnByb3BlcnR5KCdhY2NlcHRlZCcpLmVxbCh0cnVlKTtcbi8vICAgICAgICAgICAgICAgICAgICAgICByZXMuYm9keS5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgndm90ZScpLmVxbCgwKTtcbi8vICAgICAgICAgICAgICAgICAgICAgICByZXMuYm9keS5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgnYW5zd2VyaW1hZ2UnKS5lcWwoJycpO1xuLy8gICAgICAgICAgICAgICAgICAgICAgIGRvbmUoKTtcbi8vICAgICAgICAgICAgICAgICAgICAgfSk7XG4vLyAgICAgICAgICAgICAgICAgfSk7XG4vLyAgICAgICAgICAgICB9KTtcbi8vICAgICAgICAgfSk7XG4vLyAgICAgfSk7XG4vL1xuLy8gICAgIGl0KCdpdCBzaG91bGQgVVBEQVRFIGFuIGFuc3dlciBnaXZlbiB0aGUgYW5zd2VyIGlkIGJ5IHRoZSBhbnN3ZXIgYXV0aG9yJywgKGRvbmUpID0+IHtcbi8vICAgICAgIHJlcXVlc3Rcbi8vICAgICAgICAgLnBvc3QoJy9hdXRoL3YxL3NpZ251cCcpXG4vLyAgICAgICAgIC5maWVsZCgndGl0bGUnLCAnbXInKVxuLy8gICAgICAgICAuZmllbGQoJ2ZpcnN0bmFtZScsICdKdXN0aW4nKVxuLy8gICAgICAgICAuZmllbGQoJ2xhc3RuYW1lJywgJ0lrd3VvbWEnKVxuLy8gICAgICAgICAuZmllbGQoJ3VzZXJuYW1lJywgJ2p1c3RtYW4nKVxuLy8gICAgICAgICAuZmllbGQoJ3Bhc3N3b3JkJywgJ2FiYycpXG4vLyAgICAgICAgIC5maWVsZCgnZW1haWwnLCAnanVzdGluQGdtYWlsLmNvbScpXG4vLyAgICAgICAgIC5maWVsZCgnZ2VuZGVyJywgJ21hbGUnKVxuLy8gICAgICAgICAuZmllbGQoJ2NvdW50cnknLCAnTmlnZXJpYScpXG4vLyAgICAgICAgIC5maWVsZCgncGhvbmUnLCAnNjY5Nzk2NDknKVxuLy8gICAgICAgICAuYXR0YWNoKCd1c2VySW1hZ2UnLCAnJylcbi8vICAgICAgICAgLmVuZCgoZXJyMSwgcmVzMSkgPT4ge1xuLy8gICAgICAgICAgIHJlcXVlc3Rcbi8vICAgICAgICAgICAgIC5wb3N0KCcvdjEvcXVlc3Rpb25zJylcbi8vICAgICAgICAgICAgIC5zZXQoJ3gtYWNjZXNzLXRva2VuJywgcmVzMS5ib2R5LnRva2VuKVxuLy8gICAgICAgICAgICAgLmZpZWxkKCd0aXRsZScsICdIb3cgZmFyIG5hJylcbi8vICAgICAgICAgICAgIC5maWVsZCgncXVlc3Rpb24nLCAnSSBqdXN0IHdhbiBubyBob3cgdSBkZXknKVxuLy8gICAgICAgICAgICAgLmZpZWxkKCd0YWdzJywgJ2phdmEsamF2YXNjcmlwdCcpXG4vLyAgICAgICAgICAgICAuYXR0YWNoKCdxdWVzdGlvbkltYWdlJywgJycpXG4vLyAgICAgICAgICAgICAuZW5kKChlcnIyLCByZXMyKSA9PiB7XG4vLyAgICAgICAgICAgICAgIHJlcXVlc3Rcbi8vICAgICAgICAgICAgICAgICAucG9zdChgL3YxL3F1ZXN0aW9ucy8ke3JlczIuYm9keS5pZH0vYW5zd2Vyc2ApXG4vLyAgICAgICAgICAgICAgICAgLnNldCgneC1hY2Nlc3MtdG9rZW4nLCByZXMxLmJvZHkudG9rZW4pXG4vLyAgICAgICAgICAgICAgICAgLmZpZWxkKCdyZXNwb25zZScsICd2ZXJ5IGZpbmUnKVxuLy8gICAgICAgICAgICAgICAgIC5hdHRhY2goJ2Fuc3dlckltYWdlJywgJycpXG4vLyAgICAgICAgICAgICAgICAgLmVuZCgoZXJyLCByZXMpID0+IHtcbi8vICAgICAgICAgICAgICAgICAgIHJlcXVlc3Rcbi8vICAgICAgICAgICAgICAgICAgICAgLnB1dChgL3YxL3F1ZXN0aW9ucy8ke3JlczIuYm9keS5pZH0vYW5zd2Vycy8ke3Jlcy5ib2R5LmlkfWApXG4vLyAgICAgICAgICAgICAgICAgICAgIC5zZXQoJ3gtYWNjZXNzLXRva2VuJywgcmVzMS5ib2R5LnRva2VuKVxuLy8gICAgICAgICAgICAgICAgICAgICAuZmllbGQoJ3Jlc3BvbnNlJywgJ2kgYW0gb2snKVxuLy8gICAgICAgICAgICAgICAgICAgICAuYXR0YWNoKCdhbnN3ZXJJbWFnZScsICcuL3Rlc3RGaWxlLnBuZycpXG4vLyAgICAgICAgICAgICAgICAgICAgIC5lbmQoKGVyciwgcmVzKSA9PiB7XG4vLyAgICAgICAgICAgICAgICAgICAgICAgcmVzLnNob3VsZC5oYXZlLnN0YXR1cygyMDApO1xuLy8gICAgICAgICAgICAgICAgICAgICAgIHJlcy5ib2R5LnNob3VsZC5iZS5hKCdvYmplY3QnKTtcbi8vICAgICAgICAgICAgICAgICAgICAgICByZXMuYm9keS5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgncmVzcG9uc2UnKS5lcWwoJ2kgYW0gb2snKTtcbi8vICAgICAgICAgICAgICAgICAgICAgICByZXMuYm9keS5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgndXNlcmlkJykuZXFsKHJlczEuYm9keS51c2VyLmlkKTtcbi8vICAgICAgICAgICAgICAgICAgICAgICByZXMuYm9keS5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgnYWNjZXB0ZWQnKS5lcWwoZmFsc2UpO1xuLy8gICAgICAgICAgICAgICAgICAgICAgIHJlcy5ib2R5LnNob3VsZC5oYXZlLnByb3BlcnR5KCd2b3RlJykuZXFsKDApO1xuLy8gICAgICAgICAgICAgICAgICAgICAgIHJlcy5ib2R5LnNob3VsZC5oYXZlLnByb3BlcnR5KCdhbnN3ZXJpbWFnZScpLmVxbChyZXMuYm9keS5hbnN3ZXJpbWFnZSk7XG4vL1xuLy8gICAgICAgICAgICAgICAgICAgICAgIC8vIGRlbGV0ZSB0ZXN0IGltYWdlIGZpbGVcbi8vICAgICAgICAgICAgICAgICAgICAgICBpZiAocGF0aC5yZXNvbHZlKCcuL3Rlc3RGaWxlLnBuZycpKSB7XG4vLyAgICAgICAgICAgICAgICAgICAgICAgICBkZWxldGVGaWxlKGAuLyR7cmVzLmJvZHkuYW5zd2VyaW1hZ2V9YCk7XG4vLyAgICAgICAgICAgICAgICAgICAgICAgfVxuLy8gICAgICAgICAgICAgICAgICAgICAgIGRvbmUoKTtcbi8vICAgICAgICAgICAgICAgICAgICAgfSk7XG4vLyAgICAgICAgICAgICAgICAgfSk7XG4vLyAgICAgICAgICAgICB9KTtcbi8vICAgICAgICAgfSk7XG4vLyAgICAgfSk7XG4vLyAgICAgaXQoJ2l0IHNob3VsZCBub3QgVVBEQVRFIGFuIGFuc3dlciBnaXZlbiB0aGUgd3JvbmcgYW5zd2VyIGlkJywgKGRvbmUpID0+IHtcbi8vICAgICAgIHJlcXVlc3Rcbi8vICAgICAgICAgLnBvc3QoJy9hdXRoL3YxL3NpZ251cCcpXG4vLyAgICAgICAgIC5maWVsZCgndGl0bGUnLCAnbXInKVxuLy8gICAgICAgICAuZmllbGQoJ2ZpcnN0bmFtZScsICdKdXN0aW4nKVxuLy8gICAgICAgICAuZmllbGQoJ2xhc3RuYW1lJywgJ0lrd3VvbWEnKVxuLy8gICAgICAgICAuZmllbGQoJ3VzZXJuYW1lJywgJ2p1c3RtYW4nKVxuLy8gICAgICAgICAuZmllbGQoJ3Bhc3N3b3JkJywgJ2FiYycpXG4vLyAgICAgICAgIC5maWVsZCgnZW1haWwnLCAnanVzdGluQGdtYWlsLmNvbScpXG4vLyAgICAgICAgIC5maWVsZCgnZ2VuZGVyJywgJ21hbGUnKVxuLy8gICAgICAgICAuZmllbGQoJ2NvdW50cnknLCAnTmlnZXJpYScpXG4vLyAgICAgICAgIC5maWVsZCgncGhvbmUnLCAnNjY5Nzk2NDknKVxuLy8gICAgICAgICAuYXR0YWNoKCd1c2VySW1hZ2UnLCAnJylcbi8vICAgICAgICAgLmVuZCgoZXJyMSwgcmVzMSkgPT4ge1xuLy8gICAgICAgICAgIHJlcXVlc3Rcbi8vICAgICAgICAgICAgIC5wb3N0KCcvdjEvcXVlc3Rpb25zJylcbi8vICAgICAgICAgICAgIC5zZXQoJ3gtYWNjZXNzLXRva2VuJywgcmVzMS5ib2R5LnRva2VuKVxuLy8gICAgICAgICAgICAgLmZpZWxkKCd0aXRsZScsICdIb3cgZmFyIG5hJylcbi8vICAgICAgICAgICAgIC5maWVsZCgncXVlc3Rpb24nLCAnSSBqdXN0IHdhbiBubyBob3cgdSBkZXknKVxuLy8gICAgICAgICAgICAgLmZpZWxkKCd0YWdzJywgJ2phdmEsamF2YXNjcmlwdCcpXG4vLyAgICAgICAgICAgICAuYXR0YWNoKCdxdWVzdGlvbkltYWdlJywgJycpXG4vLyAgICAgICAgICAgICAuZW5kKChlcnIyLCByZXMyKSA9PiB7XG4vLyAgICAgICAgICAgICAgIHJlcXVlc3Rcbi8vICAgICAgICAgICAgICAgICAucG9zdChgL3YxL3F1ZXN0aW9ucy8ke3JlczIuYm9keS5pZH0vYW5zd2Vyc2ApXG4vLyAgICAgICAgICAgICAgICAgLnNldCgneC1hY2Nlc3MtdG9rZW4nLCByZXMxLmJvZHkudG9rZW4pXG4vLyAgICAgICAgICAgICAgICAgLmZpZWxkKCdyZXNwb25zZScsICd2ZXJ5IGZpbmUnKVxuLy8gICAgICAgICAgICAgICAgIC5hdHRhY2goJ2Fuc3dlckltYWdlJywgJycpXG4vLyAgICAgICAgICAgICAgICAgLmVuZCgoKSA9PiB7XG4vLyAgICAgICAgICAgICAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgICAgICAgICAgICAgIC5wdXQoYC92MS9xdWVzdGlvbnMvJHtyZXMyLmJvZHkuaWR9L2Fuc3dlcnMvLTFgKVxuLy8gICAgICAgICAgICAgICAgICAgICAuc2V0KCd4LWFjY2Vzcy10b2tlbicsIHJlczEuYm9keS50b2tlbilcbi8vICAgICAgICAgICAgICAgICAgICAgLmZpZWxkKCdyZXNwb25zZScsICdpIGFtIG9rJylcbi8vICAgICAgICAgICAgICAgICAgICAgLmF0dGFjaCgnYW5zd2VySW1hZ2UnLCAnLi90ZXN0RmlsZS5wbmcnKVxuLy8gICAgICAgICAgICAgICAgICAgICAuZW5kKChlcnIsIHJlcykgPT4ge1xuLy8gICAgICAgICAgICAgICAgICAgICAgIHJlcy5zaG91bGQuaGF2ZS5zdGF0dXMoNDA0KTtcbi8vICAgICAgICAgICAgICAgICAgICAgICByZXMuYm9keS5zaG91bGQuYmUuYSgnb2JqZWN0Jyk7XG4vLyAgICAgICAgICAgICAgICAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmhhdmUucHJvcGVydHkoJ21lc3NhZ2UnKS5lcWwoJ2Fuc3dlciBub3QgZm91bmQnKTtcbi8vXG4vLyAgICAgICAgICAgICAgICAgICAgICAgZG9uZSgpO1xuLy8gICAgICAgICAgICAgICAgICAgICB9KTtcbi8vICAgICAgICAgICAgICAgICB9KTtcbi8vICAgICAgICAgICAgIH0pO1xuLy8gICAgICAgICB9KTtcbi8vICAgICB9KTtcbi8vICAgICBpdCgnaXQgc2hvdWxkIG5vdCBVUERBVEUgYW4gYW5zd2VyIGdpdmVuIHRoZSB3cm9uZyBxdWVzdGlvbiBpZCcsIChkb25lKSA9PiB7XG4vLyAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgIC5wb3N0KCcvYXV0aC92MS9zaWdudXAnKVxuLy8gICAgICAgICAuZmllbGQoJ3RpdGxlJywgJ21yJylcbi8vICAgICAgICAgLmZpZWxkKCdmaXJzdG5hbWUnLCAnSnVzdGluJylcbi8vICAgICAgICAgLmZpZWxkKCdsYXN0bmFtZScsICdJa3d1b21hJylcbi8vICAgICAgICAgLmZpZWxkKCd1c2VybmFtZScsICdqdXN0bWFuJylcbi8vICAgICAgICAgLmZpZWxkKCdwYXNzd29yZCcsICdhYmMnKVxuLy8gICAgICAgICAuZmllbGQoJ2VtYWlsJywgJ2p1c3RpbkBnbWFpbC5jb20nKVxuLy8gICAgICAgICAuZmllbGQoJ2dlbmRlcicsICdtYWxlJylcbi8vICAgICAgICAgLmZpZWxkKCdjb3VudHJ5JywgJ05pZ2VyaWEnKVxuLy8gICAgICAgICAuZmllbGQoJ3Bob25lJywgJzY2OTc5NjQ5Jylcbi8vICAgICAgICAgLmF0dGFjaCgndXNlckltYWdlJywgJycpXG4vLyAgICAgICAgIC5lbmQoKGVycjEsIHJlczEpID0+IHtcbi8vICAgICAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgICAgICAucG9zdCgnL3YxL3F1ZXN0aW9ucycpXG4vLyAgICAgICAgICAgICAuc2V0KCd4LWFjY2Vzcy10b2tlbicsIHJlczEuYm9keS50b2tlbilcbi8vICAgICAgICAgICAgIC5maWVsZCgndGl0bGUnLCAnSG93IGZhciBuYScpXG4vLyAgICAgICAgICAgICAuZmllbGQoJ3F1ZXN0aW9uJywgJ0kganVzdCB3YW4gbm8gaG93IHUgZGV5Jylcbi8vICAgICAgICAgICAgIC5maWVsZCgndGFncycsICdqYXZhLGphdmFzY3JpcHQnKVxuLy8gICAgICAgICAgICAgLmF0dGFjaCgncXVlc3Rpb25JbWFnZScsICcnKVxuLy8gICAgICAgICAgICAgLmVuZCgoZXJyMiwgcmVzMikgPT4ge1xuLy8gICAgICAgICAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgICAgICAgICAgLnBvc3QoYC92MS9xdWVzdGlvbnMvJHtyZXMyLmJvZHkuaWR9L2Fuc3dlcnNgKVxuLy8gICAgICAgICAgICAgICAgIC5zZXQoJ3gtYWNjZXNzLXRva2VuJywgcmVzMS5ib2R5LnRva2VuKVxuLy8gICAgICAgICAgICAgICAgIC5maWVsZCgncmVzcG9uc2UnLCAndmVyeSBmaW5lJylcbi8vICAgICAgICAgICAgICAgICAuYXR0YWNoKCdhbnN3ZXJJbWFnZScsICcnKVxuLy8gICAgICAgICAgICAgICAgIC5lbmQoKGVyciwgcmVzKSA9PiB7XG4vLyAgICAgICAgICAgICAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgICAgICAgICAgICAgIC5wdXQoYC92MS9xdWVzdGlvbnMvLTEvYW5zd2Vycy8ke3Jlcy5ib2R5LmlkfWApXG4vLyAgICAgICAgICAgICAgICAgICAgIC5zZXQoJ3gtYWNjZXNzLXRva2VuJywgcmVzMS5ib2R5LnRva2VuKVxuLy8gICAgICAgICAgICAgICAgICAgICAuZmllbGQoJ3Jlc3BvbnNlJywgJ2kgYW0gb2snKVxuLy8gICAgICAgICAgICAgICAgICAgICAuYXR0YWNoKCdhbnN3ZXJJbWFnZScsICcuL3Rlc3RGaWxlLnBuZycpXG4vLyAgICAgICAgICAgICAgICAgICAgIC5lbmQoKGVyciwgcmVzKSA9PiB7XG4vLyAgICAgICAgICAgICAgICAgICAgICAgcmVzLnNob3VsZC5oYXZlLnN0YXR1cyg0MDQpO1xuLy8gICAgICAgICAgICAgICAgICAgICAgIHJlcy5ib2R5LnNob3VsZC5iZS5hKCdvYmplY3QnKTtcbi8vICAgICAgICAgICAgICAgICAgICAgICByZXMuYm9keS5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgnbWVzc2FnZScpLmVxbCgncXVlc3Rpb24gbm90IGZvdW5kJyk7XG4vL1xuLy8gICAgICAgICAgICAgICAgICAgICAgIGRvbmUoKTtcbi8vICAgICAgICAgICAgICAgICAgICAgfSk7XG4vLyAgICAgICAgICAgICAgICAgfSk7XG4vLyAgICAgICAgICAgICB9KTtcbi8vICAgICAgICAgfSk7XG4vLyAgICAgfSk7XG4vLyAgICAgaXQoYGl0IHNob3VsZCBVUERBVEUgYW4gYW5zd2VyIGdpdmVuIHRoZSBpZCBhbmRcbi8vICAgICBtYWludGFpbiBhbHJlYWR5IGV4aXN0aW5nIGZpZWxkcyBhbmQgZmlsZSBpZiBub25lIGlzIGVudGVyZWRgLCAoZG9uZSkgPT4ge1xuLy8gICAgICAgcmVxdWVzdFxuLy8gICAgICAgICAucG9zdCgnL2F1dGgvdjEvc2lnbnVwJylcbi8vICAgICAgICAgLmZpZWxkKCd0aXRsZScsICdtcicpXG4vLyAgICAgICAgIC5maWVsZCgnZmlyc3RuYW1lJywgJ0p1c3RpbicpXG4vLyAgICAgICAgIC5maWVsZCgnbGFzdG5hbWUnLCAnSWt3dW9tYScpXG4vLyAgICAgICAgIC5maWVsZCgndXNlcm5hbWUnLCAnanVzdG1hbicpXG4vLyAgICAgICAgIC5maWVsZCgncGFzc3dvcmQnLCAnYWJjJylcbi8vICAgICAgICAgLmZpZWxkKCdlbWFpbCcsICdqdXN0aW5AZ21haWwuY29tJylcbi8vICAgICAgICAgLmZpZWxkKCdnZW5kZXInLCAnbWFsZScpXG4vLyAgICAgICAgIC5maWVsZCgnY291bnRyeScsICdOaWdlcmlhJylcbi8vICAgICAgICAgLmZpZWxkKCdwaG9uZScsICc2Njk3OTY0OScpXG4vLyAgICAgICAgIC5hdHRhY2goJ3VzZXJJbWFnZScsICcnKVxuLy8gICAgICAgICAuZW5kKChlcnIxLCByZXMxKSA9PiB7XG4vLyAgICAgICAgICAgcmVxdWVzdFxuLy8gICAgICAgICAgICAgLnBvc3QoJy92MS9xdWVzdGlvbnMnKVxuLy8gICAgICAgICAgICAgLnNldCgneC1hY2Nlc3MtdG9rZW4nLCByZXMxLmJvZHkudG9rZW4pXG4vLyAgICAgICAgICAgICAuZmllbGQoJ3RpdGxlJywgJ0hvdyBmYXIgbmEnKVxuLy8gICAgICAgICAgICAgLmZpZWxkKCdxdWVzdGlvbicsICdJIGp1c3Qgd2FuIG5vIGhvdyB1IGRleScpXG4vLyAgICAgICAgICAgICAuZmllbGQoJ3RhZ3MnLCAnamF2YSxqYXZhc2NyaXB0Jylcbi8vICAgICAgICAgICAgIC5hdHRhY2goJ3F1ZXN0aW9uSW1hZ2UnLCAnJylcbi8vICAgICAgICAgICAgIC5lbmQoKGVycjIsIHJlczIpID0+IHtcbi8vICAgICAgICAgICAgICAgcmVxdWVzdFxuLy8gICAgICAgICAgICAgICAgIC5wb3N0KGAvdjEvcXVlc3Rpb25zLyR7cmVzMi5ib2R5LmlkfS9hbnN3ZXJzYClcbi8vICAgICAgICAgICAgICAgICAuc2V0KCd4LWFjY2Vzcy10b2tlbicsIHJlczEuYm9keS50b2tlbilcbi8vICAgICAgICAgICAgICAgICAuZmllbGQoJ3Jlc3BvbnNlJywgJ3ZlcnkgZmluZScpXG4vLyAgICAgICAgICAgICAgICAgLmF0dGFjaCgnYW5zd2VySW1hZ2UnLCAnLi90ZXN0RmlsZS5wbmcnKVxuLy8gICAgICAgICAgICAgICAgIC5lbmQoKGVyciwgcmVzKSA9PiB7XG4vLyAgICAgICAgICAgICAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgICAgICAgICAgICAgIC5wdXQoYC92MS9xdWVzdGlvbnMvJHtyZXMyLmJvZHkuaWR9L2Fuc3dlcnMvJHtyZXMuYm9keS5pZH1gKVxuLy8gICAgICAgICAgICAgICAgICAgICAuc2V0KCd4LWFjY2Vzcy10b2tlbicsIHJlczEuYm9keS50b2tlbilcbi8vICAgICAgICAgICAgICAgICAgICAgLmZpZWxkKCdyZXNwb25zZScsICcnKVxuLy8gICAgICAgICAgICAgICAgICAgICAuYXR0YWNoKCdhbnN3ZXJJbWFnZScsICcnKVxuLy8gICAgICAgICAgICAgICAgICAgICAuZW5kKChlcnIsIHJlcykgPT4ge1xuLy8gICAgICAgICAgICAgICAgICAgICAgIHJlcy5zaG91bGQuaGF2ZS5zdGF0dXMoMjAwKTtcbi8vICAgICAgICAgICAgICAgICAgICAgICByZXMuYm9keS5zaG91bGQuYmUuYSgnb2JqZWN0Jyk7XG4vLyAgICAgICAgICAgICAgICAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmhhdmUucHJvcGVydHkoJ3Jlc3BvbnNlJykuZXFsKCd2ZXJ5IGZpbmUnKTtcbi8vICAgICAgICAgICAgICAgICAgICAgICByZXMuYm9keS5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgndXNlcmlkJykuZXFsKHJlczEuYm9keS51c2VyLmlkKTtcbi8vICAgICAgICAgICAgICAgICAgICAgICByZXMuYm9keS5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgnYWNjZXB0ZWQnKS5lcWwoZmFsc2UpO1xuLy8gICAgICAgICAgICAgICAgICAgICAgIHJlcy5ib2R5LnNob3VsZC5oYXZlLnByb3BlcnR5KCd2b3RlJykuZXFsKDApO1xuLy8gICAgICAgICAgICAgICAgICAgICAgIHJlcy5ib2R5LnNob3VsZC5oYXZlLnByb3BlcnR5KCdhbnN3ZXJpbWFnZScpLmVxbChyZXMuYm9keS5hbnN3ZXJpbWFnZSk7XG4vL1xuLy8gICAgICAgICAgICAgICAgICAgICAgIC8vIGRlbGV0ZSB0ZXN0IGltYWdlIGZpbGVcbi8vICAgICAgICAgICAgICAgICAgICAgICBpZiAocGF0aC5yZXNvbHZlKCcuL3Rlc3RGaWxlLnBuZycpKSB7XG4vLyAgICAgICAgICAgICAgICAgICAgICAgICBkZWxldGVGaWxlKGAuLyR7cmVzLmJvZHkuYW5zd2VyaW1hZ2V9YCk7XG4vLyAgICAgICAgICAgICAgICAgICAgICAgfVxuLy8gICAgICAgICAgICAgICAgICAgICAgIGRvbmUoKTtcbi8vICAgICAgICAgICAgICAgICAgICAgfSk7XG4vLyAgICAgICAgICAgICAgICAgfSk7XG4vLyAgICAgICAgICAgICB9KTtcbi8vICAgICAgICAgfSk7XG4vLyAgICAgfSk7XG4vLyAgICAgaXQoJ2l0IHNob3VsZCBVUERBVEUgYSBhbnN3ZXIgZ2l2ZW4gdGhlIGlkIGFuZCByZXBsYWNlIGFscmVhZHkgZXhpc3RpbmcgZmlsZScsIChkb25lKSA9PiB7XG4vLyAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgIC5wb3N0KCcvYXV0aC92MS9zaWdudXAnKVxuLy8gICAgICAgICAuZmllbGQoJ3RpdGxlJywgJ21yJylcbi8vICAgICAgICAgLmZpZWxkKCdmaXJzdG5hbWUnLCAnSnVzdGluJylcbi8vICAgICAgICAgLmZpZWxkKCdsYXN0bmFtZScsICdJa3d1b21hJylcbi8vICAgICAgICAgLmZpZWxkKCd1c2VybmFtZScsICdqdXN0bWFuJylcbi8vICAgICAgICAgLmZpZWxkKCdwYXNzd29yZCcsICdhYmMnKVxuLy8gICAgICAgICAuZmllbGQoJ2VtYWlsJywgJ2p1c3RpbkBnbWFpbC5jb20nKVxuLy8gICAgICAgICAuZmllbGQoJ2dlbmRlcicsICdtYWxlJylcbi8vICAgICAgICAgLmZpZWxkKCdjb3VudHJ5JywgJ05pZ2VyaWEnKVxuLy8gICAgICAgICAuZmllbGQoJ3Bob25lJywgJzY2OTc5NjQ5Jylcbi8vICAgICAgICAgLmF0dGFjaCgndXNlckltYWdlJywgJycpXG4vLyAgICAgICAgIC5lbmQoKGVycjEsIHJlczEpID0+IHtcbi8vICAgICAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgICAgICAucG9zdCgnL3YxL3F1ZXN0aW9ucycpXG4vLyAgICAgICAgICAgICAuc2V0KCd4LWFjY2Vzcy10b2tlbicsIHJlczEuYm9keS50b2tlbilcbi8vICAgICAgICAgICAgIC5maWVsZCgndGl0bGUnLCAnSG93IGZhciBuYScpXG4vLyAgICAgICAgICAgICAuZmllbGQoJ3F1ZXN0aW9uJywgJ0kganVzdCB3YW4gbm8gaG93IHUgZGV5Jylcbi8vICAgICAgICAgICAgIC5maWVsZCgndGFncycsICdqYXZhLGphdmFzY3JpcHQnKVxuLy8gICAgICAgICAgICAgLmF0dGFjaCgncXVlc3Rpb25JbWFnZScsICcnKVxuLy8gICAgICAgICAgICAgLmVuZCgoZXJyMiwgcmVzMikgPT4ge1xuLy8gICAgICAgICAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgICAgICAgICAgLnBvc3QoYC92MS9xdWVzdGlvbnMvJHtyZXMyLmJvZHkuaWR9L2Fuc3dlcnNgKVxuLy8gICAgICAgICAgICAgICAgIC5zZXQoJ3gtYWNjZXNzLXRva2VuJywgcmVzMS5ib2R5LnRva2VuKVxuLy8gICAgICAgICAgICAgICAgIC5maWVsZCgncmVzcG9uc2UnLCAndmVyeSBmaW5lJylcbi8vICAgICAgICAgICAgICAgICAuYXR0YWNoKCdhbnN3ZXJJbWFnZScsICcuL3Rlc3RGaWxlLnBuZycpXG4vLyAgICAgICAgICAgICAgICAgLmVuZCgoZXJyLCByZXMpID0+IHtcbi8vICAgICAgICAgICAgICAgICAgIHJlcXVlc3Rcbi8vICAgICAgICAgICAgICAgICAgICAgLnB1dChgL3YxL3F1ZXN0aW9ucy8ke3JlczIuYm9keS5pZH0vYW5zd2Vycy8ke3Jlcy5ib2R5LmlkfWApXG4vLyAgICAgICAgICAgICAgICAgICAgIC5zZXQoJ3gtYWNjZXNzLXRva2VuJywgcmVzMS5ib2R5LnRva2VuKVxuLy8gICAgICAgICAgICAgICAgICAgICAuZmllbGQoJ3Jlc3BvbnNlJywgJycpXG4vLyAgICAgICAgICAgICAgICAgICAgIC5hdHRhY2goJ2Fuc3dlckltYWdlJywgJy4vdGVzdEZpbGUucG5nJylcbi8vICAgICAgICAgICAgICAgICAgICAgLmVuZCgoZXJyLCByZXMpID0+IHtcbi8vICAgICAgICAgICAgICAgICAgICAgICByZXMuc2hvdWxkLmhhdmUuc3RhdHVzKDIwMCk7XG4vLyAgICAgICAgICAgICAgICAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmJlLmEoJ29iamVjdCcpO1xuLy8gICAgICAgICAgICAgICAgICAgICAgIHJlcy5ib2R5LnNob3VsZC5oYXZlLnByb3BlcnR5KCdyZXNwb25zZScpLmVxbCgndmVyeSBmaW5lJyk7XG4vLyAgICAgICAgICAgICAgICAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmhhdmUucHJvcGVydHkoJ3VzZXJpZCcpLmVxbChyZXMxLmJvZHkudXNlci5pZCk7XG4vLyAgICAgICAgICAgICAgICAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmhhdmUucHJvcGVydHkoJ2FjY2VwdGVkJykuZXFsKGZhbHNlKTtcbi8vICAgICAgICAgICAgICAgICAgICAgICByZXMuYm9keS5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgndm90ZScpLmVxbCgwKTtcbi8vICAgICAgICAgICAgICAgICAgICAgICByZXMuYm9keS5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgnYW5zd2VyaW1hZ2UnKS5lcWwocmVzLmJvZHkuYW5zd2VyaW1hZ2UpO1xuLy9cbi8vICAgICAgICAgICAgICAgICAgICAgICAvLyBkZWxldGUgdGVzdCBpbWFnZSBmaWxlXG4vLyAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBhdGgucmVzb2x2ZSgnLi90ZXN0RmlsZS5wbmcnKSkge1xuLy8gICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlRmlsZShgLi8ke3Jlcy5ib2R5LmFuc3dlcmltYWdlfWApO1xuLy8gICAgICAgICAgICAgICAgICAgICAgIH1cbi8vICAgICAgICAgICAgICAgICAgICAgICBkb25lKCk7XG4vLyAgICAgICAgICAgICAgICAgICAgIH0pO1xuLy8gICAgICAgICAgICAgICAgIH0pO1xuLy8gICAgICAgICAgICAgfSk7XG4vLyAgICAgICAgIH0pO1xuLy8gICAgIH0pO1xuLy8gICAgIGl0KCdpdCBzaG91bGQgbm90IFVQREFURSBhbiBhbnN3ZXIgd2hlbiBpbWFnZSBmaWxlIHR5cGUgbm90IGpwZy9wbmcnLCAoZG9uZSkgPT4ge1xuLy8gICAgICAgcmVxdWVzdFxuLy8gICAgICAgICAucG9zdCgnL2F1dGgvdjEvc2lnbnVwJylcbi8vICAgICAgICAgLmZpZWxkKCd0aXRsZScsICdtcicpXG4vLyAgICAgICAgIC5maWVsZCgnZmlyc3RuYW1lJywgJ0p1c3RpbicpXG4vLyAgICAgICAgIC5maWVsZCgnbGFzdG5hbWUnLCAnSWt3dW9tYScpXG4vLyAgICAgICAgIC5maWVsZCgndXNlcm5hbWUnLCAnanVzdG1hbicpXG4vLyAgICAgICAgIC5maWVsZCgncGFzc3dvcmQnLCAnYWJjJylcbi8vICAgICAgICAgLmZpZWxkKCdlbWFpbCcsICdqdXN0aW5AZ21haWwuY29tJylcbi8vICAgICAgICAgLmZpZWxkKCdnZW5kZXInLCAnbWFsZScpXG4vLyAgICAgICAgIC5maWVsZCgnY291bnRyeScsICdOaWdlcmlhJylcbi8vICAgICAgICAgLmZpZWxkKCdwaG9uZScsICc2Njk3OTY0OScpXG4vLyAgICAgICAgIC5hdHRhY2goJ3VzZXJJbWFnZScsICcnKVxuLy8gICAgICAgICAuZW5kKChlcnIxLCByZXMxKSA9PiB7XG4vLyAgICAgICAgICAgcmVxdWVzdFxuLy8gICAgICAgICAgICAgLnBvc3QoJy92MS9xdWVzdGlvbnMnKVxuLy8gICAgICAgICAgICAgLnNldCgneC1hY2Nlc3MtdG9rZW4nLCByZXMxLmJvZHkudG9rZW4pXG4vLyAgICAgICAgICAgICAuZmllbGQoJ3RpdGxlJywgJ0hvdyBmYXIgbmEnKVxuLy8gICAgICAgICAgICAgLmZpZWxkKCdxdWVzdGlvbicsICdJIGp1c3Qgd2FuIG5vIGhvdyB1IGRleScpXG4vLyAgICAgICAgICAgICAuZmllbGQoJ3RhZ3MnLCAnamF2YSxqYXZhc2NyaXB0Jylcbi8vICAgICAgICAgICAgIC5hdHRhY2goJ3F1ZXN0aW9uSW1hZ2UnLCAnJylcbi8vICAgICAgICAgICAgIC5lbmQoKGVycjIsIHJlczIpID0+IHtcbi8vICAgICAgICAgICAgICAgcmVxdWVzdFxuLy8gICAgICAgICAgICAgICAgIC5wb3N0KGAvdjEvcXVlc3Rpb25zLyR7cmVzMi5ib2R5LmlkfS9hbnN3ZXJzYClcbi8vICAgICAgICAgICAgICAgICAuc2V0KCd4LWFjY2Vzcy10b2tlbicsIHJlczEuYm9keS50b2tlbilcbi8vICAgICAgICAgICAgICAgICAuZmllbGQoJ3Jlc3BvbnNlJywgJ3ZlcnkgZmluZScpXG4vLyAgICAgICAgICAgICAgICAgLmF0dGFjaCgnYW5zd2VySW1hZ2UnLCAnJylcbi8vICAgICAgICAgICAgICAgICAuZW5kKChlcnIsIHJlcykgPT4ge1xuLy8gICAgICAgICAgICAgICAgICAgcmVxdWVzdFxuLy8gICAgICAgICAgICAgICAgICAgICAucHV0KGAvdjEvcXVlc3Rpb25zLyR7cmVzMi5ib2R5LmlkfS9hbnN3ZXJzLyR7cmVzLmJvZHkuaWR9YClcbi8vICAgICAgICAgICAgICAgICAgICAgLnNldCgneC1hY2Nlc3MtdG9rZW4nLCByZXMxLmJvZHkudG9rZW4pXG4vLyAgICAgICAgICAgICAgICAgICAgIC5maWVsZCgncmVzcG9uc2UnLCAnJylcbi8vICAgICAgICAgICAgICAgICAgICAgLmF0dGFjaCgnYW5zd2VySW1hZ2UnLCAnLi90ZXN0RmlsZVR5cGUudHh0Jylcbi8vICAgICAgICAgICAgICAgICAgICAgLmVuZCgoZXJyLCByZXMpID0+IHtcbi8vICAgICAgICAgICAgICAgICAgICAgICByZXMuc2hvdWxkLmhhdmUuc3RhdHVzKDQwMyk7XG4vLyAgICAgICAgICAgICAgICAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmJlLmEoJ29iamVjdCcpO1xuLy8gICAgICAgICAgICAgICAgICAgICAgIHJlcy5ib2R5LnNob3VsZC5oYXZlLnByb3BlcnR5KCdtZXNzYWdlJykuZXFsKCdPbmx5IC5wbmcgYW5kIC5qcGcgZmlsZXMgYXJlIGFsbG93ZWQhJyk7XG4vLyAgICAgICAgICAgICAgICAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmhhdmUucHJvcGVydHkoJ2Vycm9yJykuZXFsKHRydWUpO1xuLy9cbi8vICAgICAgICAgICAgICAgICAgICAgICBkb25lKCk7XG4vLyAgICAgICAgICAgICAgICAgICAgIH0pO1xuLy8gICAgICAgICAgICAgICAgIH0pO1xuLy8gICAgICAgICAgICAgfSk7XG4vLyAgICAgICAgIH0pO1xuLy8gICAgIH0pO1xuLy8gICAgIGl0KGBpdCBzaG91bGQgbm90IFVQREFURSBhIGFuc3dlclxuLy8gICAgIHdoZW4gaW1hZ2UgZmlsZSBzaXplIGlzIGxhcmdlciB0aGFuIDJtYmAsIChkb25lKSA9PiB7XG4vLyAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgIC5wb3N0KCcvYXV0aC92MS9zaWdudXAnKVxuLy8gICAgICAgICAuZmllbGQoJ3RpdGxlJywgJ21yJylcbi8vICAgICAgICAgLmZpZWxkKCdmaXJzdG5hbWUnLCAnSnVzdGluJylcbi8vICAgICAgICAgLmZpZWxkKCdsYXN0bmFtZScsICdJa3d1b21hJylcbi8vICAgICAgICAgLmZpZWxkKCd1c2VybmFtZScsICdqdXN0bWFuJylcbi8vICAgICAgICAgLmZpZWxkKCdwYXNzd29yZCcsICdhYmMnKVxuLy8gICAgICAgICAuZmllbGQoJ2VtYWlsJywgJ2p1c3RpbkBnbWFpbC5jb20nKVxuLy8gICAgICAgICAuZmllbGQoJ2dlbmRlcicsICdtYWxlJylcbi8vICAgICAgICAgLmZpZWxkKCdjb3VudHJ5JywgJ05pZ2VyaWEnKVxuLy8gICAgICAgICAuZmllbGQoJ3Bob25lJywgJzY2OTc5NjQ5Jylcbi8vICAgICAgICAgLmF0dGFjaCgndXNlckltYWdlJywgJycpXG4vLyAgICAgICAgIC5lbmQoKGVycjEsIHJlczEpID0+IHtcbi8vICAgICAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgICAgICAucG9zdCgnL3YxL3F1ZXN0aW9ucycpXG4vLyAgICAgICAgICAgICAuc2V0KCd4LWFjY2Vzcy10b2tlbicsIHJlczEuYm9keS50b2tlbilcbi8vICAgICAgICAgICAgIC5maWVsZCgndGl0bGUnLCAnSG93IGZhciBuYScpXG4vLyAgICAgICAgICAgICAuZmllbGQoJ3F1ZXN0aW9uJywgJ0kganVzdCB3YW4gbm8gaG93IHUgZGV5Jylcbi8vICAgICAgICAgICAgIC5maWVsZCgndGFncycsICdqYXZhLGphdmFzY3JpcHQnKVxuLy8gICAgICAgICAgICAgLmF0dGFjaCgncXVlc3Rpb25JbWFnZScsICcnKVxuLy8gICAgICAgICAgICAgLmVuZCgoZXJyMiwgcmVzMikgPT4ge1xuLy8gICAgICAgICAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgICAgICAgICAgLnBvc3QoYC92MS9xdWVzdGlvbnMvJHtyZXMyLmJvZHkuaWR9L2Fuc3dlcnNgKVxuLy8gICAgICAgICAgICAgICAgIC5zZXQoJ3gtYWNjZXNzLXRva2VuJywgcmVzMS5ib2R5LnRva2VuKVxuLy8gICAgICAgICAgICAgICAgIC5maWVsZCgncmVzcG9uc2UnLCAndmVyeSBmaW5lJylcbi8vICAgICAgICAgICAgICAgICAuYXR0YWNoKCdhbnN3ZXJJbWFnZScsICcnKVxuLy8gICAgICAgICAgICAgICAgIC5lbmQoKGVyciwgcmVzKSA9PiB7XG4vLyAgICAgICAgICAgICAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgICAgICAgICAgICAgIC5wdXQoYC92MS9xdWVzdGlvbnMvJHtyZXMyLmJvZHkuaWR9L2Fuc3dlcnMvJHtyZXMuYm9keS5pZH1gKVxuLy8gICAgICAgICAgICAgICAgICAgICAuc2V0KCd4LWFjY2Vzcy10b2tlbicsIHJlczEuYm9keS50b2tlbilcbi8vICAgICAgICAgICAgICAgICAgICAgLmZpZWxkKCdyZXNwb25zZScsICcnKVxuLy8gICAgICAgICAgICAgICAgICAgICAuYXR0YWNoKCdhbnN3ZXJJbWFnZScsICcuL3Rlc3RGaWxlU2l6ZS5qcGcnKVxuLy8gICAgICAgICAgICAgICAgICAgICAuZW5kKChlcnIsIHJlcykgPT4ge1xuLy8gICAgICAgICAgICAgICAgICAgICAgIHJlcy5zaG91bGQuaGF2ZS5zdGF0dXMoNDAzKTtcbi8vICAgICAgICAgICAgICAgICAgICAgICByZXMuYm9keS5zaG91bGQuYmUuYSgnb2JqZWN0Jyk7XG4vLyAgICAgICAgICAgICAgICAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmhhdmUucHJvcGVydHkoJ21lc3NhZ2UnKS5lcWwoJ2ZpbGUgc2hvdWxkIG5vdCBiZSBtb3JlIHRoYW4gMm1iIScpO1xuLy8gICAgICAgICAgICAgICAgICAgICAgIHJlcy5ib2R5LnNob3VsZC5oYXZlLnByb3BlcnR5KCdlcnJvcicpLmVxbCh0cnVlKTtcbi8vXG4vLyAgICAgICAgICAgICAgICAgICAgICAgZG9uZSgpO1xuLy8gICAgICAgICAgICAgICAgICAgICB9KTtcbi8vICAgICAgICAgICAgICAgICB9KTtcbi8vICAgICAgICAgICAgIH0pO1xuLy8gICAgICAgICB9KTtcbi8vICAgICB9KTtcbi8vICAgICBpdCgnaXQgc2hvdWxkIG5vdCBVUERBVEUgYW4gYW5zd2VyIHdoZW4gYSB0b2tlbiBpcyBub3QgcHJvdmlkZWQnLCAoZG9uZSkgPT4ge1xuLy8gICAgICAgcmVxdWVzdFxuLy8gICAgICAgICAucG9zdCgnL2F1dGgvdjEvc2lnbnVwJylcbi8vICAgICAgICAgLmZpZWxkKCd0aXRsZScsICdtcicpXG4vLyAgICAgICAgIC5maWVsZCgnZmlyc3RuYW1lJywgJ0p1c3RpbicpXG4vLyAgICAgICAgIC5maWVsZCgnbGFzdG5hbWUnLCAnSWt3dW9tYScpXG4vLyAgICAgICAgIC5maWVsZCgndXNlcm5hbWUnLCAnanVzdG1hbicpXG4vLyAgICAgICAgIC5maWVsZCgncGFzc3dvcmQnLCAnYWJjJylcbi8vICAgICAgICAgLmZpZWxkKCdlbWFpbCcsICdqdXN0aW5AZ21haWwuY29tJylcbi8vICAgICAgICAgLmZpZWxkKCdnZW5kZXInLCAnbWFsZScpXG4vLyAgICAgICAgIC5maWVsZCgnY291bnRyeScsICdOaWdlcmlhJylcbi8vICAgICAgICAgLmZpZWxkKCdwaG9uZScsICc2Njk3OTY0OScpXG4vLyAgICAgICAgIC5hdHRhY2goJ3VzZXJJbWFnZScsICcnKVxuLy8gICAgICAgICAuZW5kKChlcnIxLCByZXMxKSA9PiB7XG4vLyAgICAgICAgICAgcmVxdWVzdFxuLy8gICAgICAgICAgICAgLnBvc3QoJy92MS9xdWVzdGlvbnMnKVxuLy8gICAgICAgICAgICAgLnNldCgneC1hY2Nlc3MtdG9rZW4nLCByZXMxLmJvZHkudG9rZW4pXG4vLyAgICAgICAgICAgICAuZmllbGQoJ3RpdGxlJywgJ0hvdyBmYXIgbmEnKVxuLy8gICAgICAgICAgICAgLmZpZWxkKCdxdWVzdGlvbicsICdJIGp1c3Qgd2FuIG5vIGhvdyB1IGRleScpXG4vLyAgICAgICAgICAgICAuZmllbGQoJ3RhZ3MnLCAnamF2YSxqYXZhc2NyaXB0Jylcbi8vICAgICAgICAgICAgIC5hdHRhY2goJ3F1ZXN0aW9uSW1hZ2UnLCAnJylcbi8vICAgICAgICAgICAgIC5lbmQoKGVycjIsIHJlczIpID0+IHtcbi8vICAgICAgICAgICAgICAgcmVxdWVzdFxuLy8gICAgICAgICAgICAgICAgIC5wb3N0KGAvdjEvcXVlc3Rpb25zLyR7cmVzMi5ib2R5LmlkfS9hbnN3ZXJzYClcbi8vICAgICAgICAgICAgICAgICAuc2V0KCd4LWFjY2Vzcy10b2tlbicsIHJlczEuYm9keS50b2tlbilcbi8vICAgICAgICAgICAgICAgICAuZmllbGQoJ3Jlc3BvbnNlJywgJ3ZlcnkgZmluZScpXG4vLyAgICAgICAgICAgICAgICAgLmF0dGFjaCgnYW5zd2VySW1hZ2UnLCAnJylcbi8vICAgICAgICAgICAgICAgICAuZW5kKChlcnIsIHJlcykgPT4ge1xuLy8gICAgICAgICAgICAgICAgICAgcmVxdWVzdFxuLy8gICAgICAgICAgICAgICAgICAgICAucHV0KGAvdjEvcXVlc3Rpb25zLyR7cmVzMi5ib2R5LmlkfS9hbnN3ZXJzLyR7cmVzLmJvZHkuaWR9YClcbi8vICAgICAgICAgICAgICAgICAgICAgLmZpZWxkKCdyZXNwb25zZScsICcnKVxuLy8gICAgICAgICAgICAgICAgICAgICAuYXR0YWNoKCdhbnN3ZXJJbWFnZScsICcnKVxuLy8gICAgICAgICAgICAgICAgICAgICAuZW5kKChlcnIsIHJlcykgPT4ge1xuLy8gICAgICAgICAgICAgICAgICAgICAgIHJlcy5zaG91bGQuaGF2ZS5zdGF0dXMoNDAxKTtcbi8vICAgICAgICAgICAgICAgICAgICAgICByZXMuYm9keS5zaG91bGQuYmUuYSgnb2JqZWN0Jyk7XG4vLyAgICAgICAgICAgICAgICAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmhhdmUucHJvcGVydHkoJ2F1dGgnKS5lcWwoZmFsc2UpO1xuLy8gICAgICAgICAgICAgICAgICAgICAgIHJlcy5ib2R5LnNob3VsZC5oYXZlLnByb3BlcnR5KCdtZXNzYWdlJykuZXFsKCdObyB0b2tlbiBwcm92aWRlZC4nKTtcbi8vXG4vLyAgICAgICAgICAgICAgICAgICAgICAgZG9uZSgpO1xuLy8gICAgICAgICAgICAgICAgICAgICB9KTtcbi8vICAgICAgICAgICAgICAgICB9KTtcbi8vICAgICAgICAgICAgIH0pO1xuLy8gICAgICAgICB9KTtcbi8vICAgICB9KTtcbi8vICAgICBpdCgnaXQgc2hvdWxkIG5vdCBVUERBVEUgYSBhbnN3ZXIgd2hlbiBpdCBmYWlscyB0byBhdXRoZW50aWNhdGUgdG9rZW4uJywgKGRvbmUpID0+IHtcbi8vICAgICAgIHJlcXVlc3Rcbi8vICAgICAgICAgLnBvc3QoJy9hdXRoL3YxL3NpZ251cCcpXG4vLyAgICAgICAgIC5maWVsZCgndGl0bGUnLCAnbXInKVxuLy8gICAgICAgICAuZmllbGQoJ2ZpcnN0bmFtZScsICdKdXN0aW4nKVxuLy8gICAgICAgICAuZmllbGQoJ2xhc3RuYW1lJywgJ0lrd3VvbWEnKVxuLy8gICAgICAgICAuZmllbGQoJ3VzZXJuYW1lJywgJ2p1c3RtYW4nKVxuLy8gICAgICAgICAuZmllbGQoJ3Bhc3N3b3JkJywgJ2FiYycpXG4vLyAgICAgICAgIC5maWVsZCgnZW1haWwnLCAnanVzdGluQGdtYWlsLmNvbScpXG4vLyAgICAgICAgIC5maWVsZCgnZ2VuZGVyJywgJ21hbGUnKVxuLy8gICAgICAgICAuZmllbGQoJ2NvdW50cnknLCAnTmlnZXJpYScpXG4vLyAgICAgICAgIC5maWVsZCgncGhvbmUnLCAnNjY5Nzk2NDknKVxuLy8gICAgICAgICAuYXR0YWNoKCd1c2VySW1hZ2UnLCAnJylcbi8vICAgICAgICAgLmVuZCgoZXJyMSwgcmVzMSkgPT4ge1xuLy8gICAgICAgICAgIHJlcXVlc3Rcbi8vICAgICAgICAgICAgIC5wb3N0KCcvdjEvcXVlc3Rpb25zJylcbi8vICAgICAgICAgICAgIC5zZXQoJ3gtYWNjZXNzLXRva2VuJywgcmVzMS5ib2R5LnRva2VuKVxuLy8gICAgICAgICAgICAgLmZpZWxkKCd0aXRsZScsICdIb3cgZmFyIG5hJylcbi8vICAgICAgICAgICAgIC5maWVsZCgncXVlc3Rpb24nLCAnSSBqdXN0IHdhbiBubyBob3cgdSBkZXknKVxuLy8gICAgICAgICAgICAgLmZpZWxkKCd0YWdzJywgJ2phdmEsamF2YXNjcmlwdCcpXG4vLyAgICAgICAgICAgICAuYXR0YWNoKCdxdWVzdGlvbkltYWdlJywgJycpXG4vLyAgICAgICAgICAgICAuZW5kKChlcnIyLCByZXMyKSA9PiB7XG4vLyAgICAgICAgICAgICAgIHJlcXVlc3Rcbi8vICAgICAgICAgICAgICAgICAucG9zdChgL3YxL3F1ZXN0aW9ucy8ke3JlczIuYm9keS5pZH0vYW5zd2Vyc2ApXG4vLyAgICAgICAgICAgICAgICAgLnNldCgneC1hY2Nlc3MtdG9rZW4nLCByZXMxLmJvZHkudG9rZW4pXG4vLyAgICAgICAgICAgICAgICAgLmZpZWxkKCdyZXNwb25zZScsICd2ZXJ5IGZpbmUnKVxuLy8gICAgICAgICAgICAgICAgIC5hdHRhY2goJ2Fuc3dlckltYWdlJywgJycpXG4vLyAgICAgICAgICAgICAgICAgLmVuZCgoZXJyLCByZXMpID0+IHtcbi8vICAgICAgICAgICAgICAgICAgIHJlcXVlc3Rcbi8vICAgICAgICAgICAgICAgICAgICAgLnB1dChgL3YxL3F1ZXN0aW9ucy8ke3JlczIuYm9keS5pZH0vYW5zd2Vycy8ke3Jlcy5ib2R5LmlkfWApXG4vLyAgICAgICAgICAgICAgICAgICAgIC5zZXQoJ3gtYWNjZXNzLXRva2VuJywgJ25tZGhuamYubmpmamZqLmZrZmtmaycpXG4vLyAgICAgICAgICAgICAgICAgICAgIC5maWVsZCgncmVzcG9uc2UnLCAnJylcbi8vICAgICAgICAgICAgICAgICAgICAgLmF0dGFjaCgnYW5zd2VySW1hZ2UnLCAnJylcbi8vICAgICAgICAgICAgICAgICAgICAgLmVuZCgoZXJyLCByZXMpID0+IHtcbi8vICAgICAgICAgICAgICAgICAgICAgICByZXMuc2hvdWxkLmhhdmUuc3RhdHVzKDUwMCk7XG4vLyAgICAgICAgICAgICAgICAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmJlLmEoJ29iamVjdCcpO1xuLy8gICAgICAgICAgICAgICAgICAgICAgIHJlcy5ib2R5LnNob3VsZC5oYXZlLnByb3BlcnR5KCdhdXRoJykuZXFsKGZhbHNlKTtcbi8vICAgICAgICAgICAgICAgICAgICAgICByZXMuYm9keS5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgnbWVzc2FnZScpLmVxbCgnRmFpbGVkIHRvIGF1dGhlbnRpY2F0ZSB0b2tlbi4nKTtcbi8vXG4vLyAgICAgICAgICAgICAgICAgICAgICAgZG9uZSgpO1xuLy8gICAgICAgICAgICAgICAgICAgICB9KTtcbi8vICAgICAgICAgICAgICAgICB9KTtcbi8vICAgICAgICAgICAgIH0pO1xuLy8gICAgICAgICB9KTtcbi8vICAgICB9KTtcbi8vICAgICBpdCgnaXQgc2hvdWxkIG5vdCBVUERBVEUgYSBhbnN3ZXIgd2hlbiB1c2VyIGlzIHVuYXV0aG9yaXplLicsIChkb25lKSA9PiB7XG4vLyAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgIC5wb3N0KCcvYXV0aC92MS9zaWdudXAnKVxuLy8gICAgICAgICAuZmllbGQoJ3RpdGxlJywgJ21yJylcbi8vICAgICAgICAgLmZpZWxkKCdmaXJzdG5hbWUnLCAnSnVzdGluJylcbi8vICAgICAgICAgLmZpZWxkKCdsYXN0bmFtZScsICdJa3d1b21hJylcbi8vICAgICAgICAgLmZpZWxkKCd1c2VybmFtZScsICdqdXN0bWFuJylcbi8vICAgICAgICAgLmZpZWxkKCdwYXNzd29yZCcsICdhYmMnKVxuLy8gICAgICAgICAuZmllbGQoJ2VtYWlsJywgJ2p1c3RpbkBnbWFpbC5jb20nKVxuLy8gICAgICAgICAuZmllbGQoJ2dlbmRlcicsICdtYWxlJylcbi8vICAgICAgICAgLmZpZWxkKCdjb3VudHJ5JywgJ05pZ2VyaWEnKVxuLy8gICAgICAgICAuZmllbGQoJ3Bob25lJywgJzY2OTc5NjQ5Jylcbi8vICAgICAgICAgLmF0dGFjaCgndXNlckltYWdlJywgJycpXG4vLyAgICAgICAgIC5lbmQoKGVycjEsIHJlczEpID0+IHtcbi8vICAgICAgICAgICByZXF1ZXN0XG4vLyAgICAgICAgICAgICAucG9zdCgnL3YxL3F1ZXN0aW9ucycpXG4vLyAgICAgICAgICAgICAuc2V0KCd4LWFjY2Vzcy10b2tlbicsIHJlczEuYm9keS50b2tlbilcbi8vICAgICAgICAgICAgIC5maWVsZCgndGl0bGUnLCAnSG93IGZhciBuYScpXG4vLyAgICAgICAgICAgICAuZmllbGQoJ3F1ZXN0aW9uJywgJ0kganVzdCB3YW4gbm8gaG93IHUgZGV5Jylcbi8vICAgICAgICAgICAgIC5maWVsZCgndGFncycsICdqYXZhLGphdmFzY3JpcHQnKVxuLy8gICAgICAgICAgICAgLmF0dGFjaCgncXVlc3Rpb25JbWFnZScsICcnKVxuLy8gICAgICAgICAgICAgLmVuZCgoZXJyMiwgcmVzMikgPT4ge1xuLy8gICAgICAgICAgICAgICBBbnN3ZXIuY3JlYXRlKHsgcmVzcG9uc2U6ICd2ZXJ5IGZpbmUnLCBhbnN3ZXJJbWFnZTogJycgfSkudGhlbigoYW5zd2VyKSA9PiB7XG4vLyAgICAgICAgICAgICAgICAgcmVxdWVzdFxuLy8gICAgICAgICAgICAgICAgICAgLnB1dChgL3YxL3F1ZXN0aW9ucy8ke3JlczIuYm9keS5pZH0vYW5zd2Vycy8ke2Fuc3dlci5yb3dzWzBdLmlkfWApXG4vLyAgICAgICAgICAgICAgICAgICAuc2V0KCd4LWFjY2Vzcy10b2tlbicsIHJlczEuYm9keS50b2tlbilcbi8vICAgICAgICAgICAgICAgICAgIC5maWVsZCgncmVzcG9uc2UnLCAnJylcbi8vICAgICAgICAgICAgICAgICAgIC5hdHRhY2goJ2Fuc3dlckltYWdlJywgJycpXG4vLyAgICAgICAgICAgICAgICAgICAuZW5kKChlcnIsIHJlcykgPT4ge1xuLy8gICAgICAgICAgICAgICAgICAgICByZXMuc2hvdWxkLmhhdmUuc3RhdHVzKDQwMyk7XG4vLyAgICAgICAgICAgICAgICAgICAgIHJlcy5ib2R5LnNob3VsZC5iZS5hKCdvYmplY3QnKTtcbi8vICAgICAgICAgICAgICAgICAgICAgcmVzLmJvZHkuc2hvdWxkLmhhdmUucHJvcGVydHkoJ2F1dGgnKS5lcWwoZmFsc2UpO1xuLy8gICAgICAgICAgICAgICAgICAgICByZXMuYm9keS5zaG91bGQuaGF2ZS5wcm9wZXJ0eSgnbWVzc2FnZScpLmVxbCgnVXNlciBub3QgYWxsb3dlZCcpO1xuLy9cbi8vICAgICAgICAgICAgICAgICAgICAgZG9uZSgpO1xuLy8gICAgICAgICAgICAgICAgICAgfSk7XG4vLyAgICAgICAgICAgICAgIH0pO1xuLy8gICAgICAgICAgICAgfSk7XG4vLyAgICAgICAgIH0pO1xuLy8gICAgIH0pO1xuLy8gICB9KTtcbi8vIH0pO1xuIl19
var cov_rknj7jo7b=function(){var path="/home/somto/1Projects/mentorship project/StackOverflow-lite/server/test/answers-spec.js",hash="2196a7ebed59c9dfe86b4b3f8a8a9a53c2f155f7",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/somto/1Projects/mentorship project/StackOverflow-lite/server/test/answers-spec.js",statementMap:{},fnMap:{},branchMap:{},s:{},f:{},b:{},_coverageSchema:"d34fc3e6b8297bcde183f5492bcb8fcb36775295"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();