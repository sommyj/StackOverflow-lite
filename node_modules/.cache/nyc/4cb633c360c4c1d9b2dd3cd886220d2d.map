{"version":3,"sources":["questions-spec.js"],"names":["process","env","NODE_ENV","chai","should","use","chaiHttp","request","app","model","User","Question","deleteFile","targetPath","fs","unlink","err","describe","beforeEach","done","destroy","where","force","then","it","post","field","attach","end","res","set","body","token","have","status","be","a","property","eql","id","questionimage","path","resolve"],"mappings":"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","file":"questions-spec.js","sourceRoot":"/home/somto/1Projects/mentorship project/StackOverflow-lite/server/test","sourcesContent":["import chai from 'chai';\nimport supertest from 'supertest';\nimport fs from 'file-system';\nimport path from 'path';\nimport chaiHttp from 'chai-http';\n\nimport app from '../app';\nimport model from '../server/models';\n\nprocess.env.NODE_ENV = 'test';\n\nchai.should();\nchai.use(chaiHttp);\nconst request = supertest(app);\nconst [User] = [model.User];\nconst [Question] = [model.Question];\n\n/**\n * delete a file\n * @param {String} targetPath The part to delete from\n * @returns {void} nothing.\n */\nconst deleteFile = (targetPath) => {\n  fs.unlink(targetPath, (err) => {\n    if (err) throw err;\n  });\n};\n\ndescribe('Questions', () => {\n  beforeEach((done) => { // Before each test we empty the database\n    User.destroy({where: {}, force:true});\n    Question.destroy({ where: {}, force: true }).then(() => done());\n  });\n\n  describe('/POST question', () => {\n    it(`it should not CREATE a question without title, question, tags`, (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman1')\n        .field('password', 'abc')\n        .field('email', 'justin1@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('phone', '669796498')\n        .attach('userImage', '')\n        .end((err, res) => {\n          request\n            .post('/v1/questions')\n            .set('x-access-token', res.body.token)\n            .field('title', '')\n            .field('question', '')\n            .field('tags', '')\n            .attach('questionImage', './testFile.png')\n            .end((err, res) => {\n              res.should.have.status(206);\n              res.body.should.be.a('object');\n              res.body.should.have.property('message').eql('Incomplete field');\n              done();\n            });\n        });\n      });\n      it(`it should CREATE a question`, (done) => {\n        request\n          .post('/auth/v1/signup')\n          .field('title', 'mr')\n          .field('firstname', 'Justin')\n          .field('lastname', 'Ikwuoma')\n          .field('username', 'justman')\n          .field('password', 'abc')\n          .field('email', 'justin@gmail.com')\n          .field('gender', 'male')\n          .field('country', 'Nigeria')\n          .field('phone', '66979649')\n          .attach('userImage', '')\n          .end((err, res) => {\n            request\n              .post('/v1/questions')\n              .set('x-access-token', res.body.token)\n              .field('title', 'How far na')\n              .field('question', 'I just wan no how u dey')\n              .field('tags', 'java,javascript')\n              .attach('questionImage', './testFile.png')\n              .end((err, res) => {\n                res.should.have.status(201);\n                res.body.should.be.a('object');\n                res.body.should.have.property('id').eql(res.body.id);\n                res.body.should.have.property('title').eql('How far na');\n                res.body.should.have.property('question').eql('I just wan no how u dey');\n                res.body.should.have.property('tags').eql('java,javascript');\n                res.body.should.have.property('questionimage').eql(res.body.questionimage);\n\n                // delete test image file\n                if (path.resolve('./testFile.png')) {\n                  deleteFile(`./${res.body.questionimage}`);\n                }\n                done();\n              });\n          });\n        });\n      it(`it should CREATE a question without image`, (done) => {\n        request\n          .post('/auth/v1/signup')\n          .field('title', 'mr')\n          .field('firstname', 'Justin')\n          .field('lastname', 'Ikwuoma')\n          .field('username', 'justman')\n          .field('password', 'abc')\n          .field('email', 'justin@gmail.com')\n          .field('gender', 'male')\n          .field('country', 'Nigeria')\n          .field('phone', '66979649')\n          .attach('userImage', '')\n          .end((err, res) => {\n            request\n              .post('/v1/questions')\n              .set('x-access-token', res.body.token)\n              .field('title', 'How far na')\n              .field('question', 'I just wan no how u dey')\n              .field('tags', 'java,javascript')\n              .attach('questionImage', '')\n              .end((err, res) => {\n                res.should.have.status(201);\n                res.body.should.be.a('object');\n                res.body.should.have.property('id').eql(res.body.id);\n                res.body.should.have.property('title').eql('How far na');\n                res.body.should.have.property('question').eql('I just wan no how u dey');\n                res.body.should.have.property('tags').eql('java,javascript');\n                res.body.should.have.property('questionimage').eql('');\n\n                done();\n              });\n          });\n        });\n        it(`it should not CREATE a question when image file type not jpg/png`, (done) => {\n          request\n            .post('/auth/v1/signup')\n            .field('title', 'mr')\n            .field('firstname', 'Justin')\n            .field('lastname', 'Ikwuoma')\n            .field('username', 'justman')\n            .field('password', 'abc')\n            .field('email', 'justin@gmail.com')\n            .field('gender', 'male')\n            .field('country', 'Nigeria')\n            .field('phone', '66979649')\n            .attach('userImage', '')\n            .end((err, res) => {\n              request\n                .post('/v1/questions')\n                .set('x-access-token', res.body.token)\n                .field('title', 'How far na')\n                .field('question', 'I just wan no how u dey')\n                .field('tags', 'java,javascript')\n                .attach('questionImage', './testFileType.txt')\n                .end((err, res) => {\n                  res.should.have.status(403);\n                  res.body.should.be.a('object');\n                  res.body.should.have.property('message').eql('Only .png and .jpg files are allowed!');\n                  res.body.should.have.property('error').eql(true);\n                  done();\n                });\n            });\n          });\n          it(`it should not CREATE a question when image file size is larger than 2mb`, (done) => {\n            request\n              .post('/auth/v1/signup')\n              .field('title', 'mr')\n              .field('firstname', 'Justin')\n              .field('lastname', 'Ikwuoma')\n              .field('username', 'justman')\n              .field('password', 'abc')\n              .field('email', 'justin@gmail.com')\n              .field('gender', 'male')\n              .field('country', 'Nigeria')\n              .field('phone', '66979649')\n              .attach('userImage', '')\n              .end((err, res) => {\n                request\n                  .post('/v1/questions')\n                  .set('x-access-token', res.body.token)\n                  .field('title', 'How far na')\n                  .field('question', 'I just wan no how u dey')\n                  .field('tags', 'java,javascript')\n                  .attach('questionImage', './testFileSize.jpg')\n                  .end((err, res) => {\n                    res.should.have.status(403);\n                    res.body.should.be.a('object');\n                    res.body.should.have.property('message')\n                      .eql('file should not be more than 2mb!');\n                    res.body.should.have.property('error').eql(true);\n                    done();\n                  });\n              });\n            });\n            it(`it should not CREATE a question when a token is not provided`, (done) => {\n              request\n                .post('/auth/v1/signup')\n                .field('title', 'mr')\n                .field('firstname', 'Justin')\n                .field('lastname', 'Ikwuoma')\n                .field('username', 'justman')\n                .field('password', 'abc')\n                .field('email', 'justin@gmail.com')\n                .field('gender', 'male')\n                .field('country', 'Nigeria')\n                .field('phone', '66979649')\n                .attach('userImage', '')\n                .end((err, res) => {\n                  request\n                    .post('/v1/questions')\n                    .field('title', 'How far na')\n                    .field('question', 'I just wan no how u dey')\n                    .field('tags', 'java,javascript')\n                    .attach('questionImage', './testFileSize.jpg')\n                    .end((err, res) => {\n                      res.should.have.status(401);\n                      res.body.should.be.a('object');\n                      res.body.should.have.property('auth').eql(false);\n                      res.body.should.have.property('message').eql('No token provided.');\n                      done();\n                    });\n                });\n              });\n              it(`it should not CREATE a question when it fails to authenticate token.`, (done) => {\n                request\n                  .post('/auth/v1/signup')\n                  .field('title', 'mr')\n                  .field('firstname', 'Justin')\n                  .field('lastname', 'Ikwuoma')\n                  .field('username', 'justman')\n                  .field('password', 'abc')\n                  .field('email', 'justin@gmail.com')\n                  .field('gender', 'male')\n                  .field('country', 'Nigeria')\n                  .field('phone', '66979649')\n                  .attach('userImage', '')\n                  .end((err, res) => {\n                    request\n                      .post('/v1/questions')\n                      .set('x-access-token', 'jdkjdfskjs43354mxxnzsdz.drfsff.srfsf35324')\n                      .field('title', 'How far na')\n                      .field('question', 'I just wan no how u dey')\n                      .field('tags', 'java,javascript')\n                      .attach('questionImage', './testFileSize.jpg')\n                      .end((err, res) => {\n                        res.should.have.status(500);\n                        res.body.should.be.a('object');\n                        res.body.should.have.property('auth').eql(false);\n                        res.body.should.have.property('message').eql('Failed to authenticate token.');\n                        done();\n                      });\n                  });\n                });\n                it(`it should not CREATE a question when user is delete but token exist`, (done) => {\n                  request\n                    .post('/auth/v1/signup')\n                    .field('title', 'mr')\n                    .field('firstname', 'Justin')\n                    .field('lastname', 'Ikwuoma')\n                    .field('username', 'justman')\n                    .field('password', 'abc')\n                    .field('email', 'justin@gmail.com')\n                    .field('gender', 'male')\n                    .field('country', 'Nigeria')\n                    .field('phone', '66979649')\n                    .attach('userImage', '')\n                    .end((err, res) => {\n                        User.destroy({where: {id: res.body.id}}).then(() => {\n                        request\n                          .post('/v1/questions')\n                          .set('x-access-token', res.body.token)\n                          .field('title', 'How far na')\n                          .field('question', 'I just wan no how u dey')\n                          .field('tags', 'java,javascript')\n                          .attach('questionImage', './testFile.png')\n                          .end((err, res) => {\n                            res.should.have.status(400);\n                            res.body.should.be.a('object');\n                            res.body.should.have.property('message')\n                              .eql('user has been removed from the database');\n                            done();\n                          });\n                      });\n                    });\n                  });\n  });\n\n});\n"]}