{"version":3,"sources":["authHandler.js"],"names":["deleteFile","fsHelper","authMethod","req","authMethodArray","noTokenProviderError","failedAuth","decodedID","token","body","query","headers","file","path","jwt","verify","app","get","err","decoded","id"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AACA,IAAMA,aAAaC,qBAASD,UAA5B,C,CAAuC;;AAEvC;AACA,IAAME,aAAa,SAAbA,UAAa,CAACC,GAAD,EAAS;AAC1B,MAAMC,kBAAkB,EAAxB;AACA,MAAIC,uBAAuB,KAA3B;AACA,MAAIC,aAAa,KAAjB;AACA,MAAIC,kBAAJ;;AAEA;AACA,MAAMC,QAAQL,IAAIM,IAAJ,CAASD,KAAT,IAAkBL,IAAIO,KAAJ,CAAUF,KAA5B,IAAqCL,IAAIQ,OAAJ,CAAY,gBAAZ,CAAnD;AACA,MAAI,CAACH,KAAL,EAAY;AACV,QAAIL,IAAIS,IAAR,EAAcZ,kBAAgBG,IAAIS,IAAJ,CAASC,IAAzB;AACdR,2BAAuB,IAAvB;AACD;;AAED;AACAS,MAAIC,MAAJ,CAAWP,KAAX,EAAkBQ,cAAIC,GAAJ,CAAQ,aAAR,CAAlB,EAA0C,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAC1D,QAAID,GAAJ,EAAS;AACP,UAAI,CAACb,oBAAL,EAA2B;AACzB,YAAIF,IAAIS,IAAR,EAAcZ,kBAAgBG,IAAIS,IAAJ,CAASC,IAAzB;AACdP,qBAAa,IAAb;AACD;AACF,KALD,MAKOC,YAAYY,QAAQC,EAApB;AACR,GAPD;;AASAhB,kBAAgB,CAAhB,IAAqBC,oBAArB;AACAD,kBAAgB,CAAhB,IAAqBE,UAArB;AACAF,kBAAgB,CAAhB,IAAqBG,SAArB;;AAEA,SAAOH,eAAP;AACD,CA5BD;;kBA8BeF,U","file":"authHandler.js","sourceRoot":"/home/somto/1Projects/mentorship project/StackOverflow-lite/server/server/controllers/utilities","sourcesContent":["import app from '../../../app';\nimport fsHelper from '../../../utilities/fileSystem';\nconst deleteFile = fsHelper.deleteFile;//Delete file helper method\n\n/* Authentication handle method */\nconst authMethod = (req) => {\n  const authMethodArray = [];\n  let noTokenProviderError = false;\n  let failedAuth = false;\n  let decodedID;\n\n  // check header or url parameters or post parameters for token\n  const token = req.body.token || req.query.token || req.headers['x-access-token'];\n  if (!token) {\n    if (req.file) deleteFile(`./${req.file.path}`);\n    noTokenProviderError = true;\n  }\n\n  // verifies secret and checks exp\n  jwt.verify(token, app.get('superSecret'), (err, decoded) => {\n    if (err) {\n      if (!noTokenProviderError) {\n        if (req.file) deleteFile(`./${req.file.path}`);\n        failedAuth = true;\n      }\n    } else decodedID = decoded.id;\n  });\n\n  authMethodArray[0] = noTokenProviderError;\n  authMethodArray[1] = failedAuth;\n  authMethodArray[2] = decodedID;\n\n  return authMethodArray;\n};\n\nexport default authMethod;\n"]}