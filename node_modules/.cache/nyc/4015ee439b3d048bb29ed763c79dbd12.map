{"version":3,"sources":["answers-spec.js"],"names":[],"mappingsfile":"answers-spec.js","sourceRoot":"/home/somto/1Projects/mentorship project/StackOverflow-lite/server/test","sourcesContent":["// import chai from 'chai';\n// import supertest from 'supertest';\n// import path from 'path';\n// import chaiHttp from 'chai-http';\n//\n// import app from '../app';\n// import model from '../server/models';\n// import fsHelper from '../utilities/fileSystem';\n//\n// process.env.NODE_ENV = 'test';\n//\n// chai.should();\n// chai.use(chaiHttp);\n// const request = supertest(app);\n// const [User] = [model.User];\n// const [Question] = [model.Question];\n// const [Answer] = [model.Answer];\n//\n// // Delete file helper method\n// const [deleteFile] = [fsHelper.deleteFile];\n//\n// describe('Answers', () => {\n//   beforeEach((done) => { // Before each test we empty the database\n//     User.destroy({ where: {}, force: true });\n//     Question.destroy({ where: {}, force: true });\n//     Answer.destroy({ where: {}, force: true }).then(() => done());\n//   });\n//\n//   describe('/POST answer', () => {\n//     it('it should not CREATE an answer without response', (done) => {\n//       request\n//         .post('/auth/v1/signup')\n//         .field('title', 'mr')\n//         .field('firstname', 'Justin')\n//         .field('lastname', 'Ikwuoma')\n//         .field('username', 'justman')\n//         .field('password', 'abc')\n//         .field('email', 'justin@gmail.com')\n//         .field('gender', 'male')\n//         .field('country', 'Nigeria')\n//         .field('phone', '66979649')\n//         .attach('userImage', '')\n//         .end((err1, res1) => {\n//           request\n//             .post('/v1/questions')\n//             .set('x-access-token', res1.body.token)\n//             .field('title', 'How far na')\n//             .field('question', 'I just wan no how u dey')\n//             .field('tags', 'java,javascript')\n//             .attach('questionImage', '')\n//             .end((err2, res2) => {\n//               request\n//                 .post(`/v1/questions/${res2.body.id}/answers`)\n//                 .set('x-access-token', res1.body.token)\n//                 .field('response', '')\n//                 .attach('answerImage', '')\n//                 .end((err, res) => {\n//                   res.should.have.status(206);\n//                   res.body.should.be.a('object');\n//                   res.body.should.have.property('message').eql('Incomplete field');\n//\n//                   done();\n//                 });\n//             });\n//         });\n//     });\n//     it('it should CREATE an answer', (done) => {\n//       request\n//         .post('/auth/v1/signup')\n//         .field('title', 'mr')\n//         .field('firstname', 'Justin')\n//         .field('lastname', 'Ikwuoma')\n//         .field('username', 'justman')\n//         .field('password', 'abc')\n//         .field('email', 'justin@gmail.com')\n//         .field('gender', 'male')\n//         .field('country', 'Nigeria')\n//         .field('phone', '66979649')\n//         .attach('userImage', '')\n//         .end((err1, res1) => {\n//           request\n//             .post('/v1/questions')\n//             .set('x-access-token', res1.body.token)\n//             .field('title', 'How far na')\n//             .field('question', 'I just wan no how u dey')\n//             .field('tags', 'java,javascript')\n//             .attach('questionImage', '')\n//             .end((err2, res2) => {\n//               request\n//                 .post(`/v1/questions/${res2.body.id}/answers`)\n//                 .set('x-access-token', res1.body.token)\n//                 .field('response', 'very fine')\n//                 .attach('answerImage', './testFile.png')\n//                 .end((err, res) => {\n//                   res.should.have.status(201);\n//                   res.body.should.be.a('object');\n//                   res.body.should.have.property('response').eql('very fine');\n//                   res.body.should.have.property('userid').eql(res1.body.user.id);\n//                   res.body.should.have.property('accepted').eql(false);\n//                   res.body.should.have.property('vote').eql(0);\n//                   res.body.should.have.property('answerimage').eql(res.body.answerimage);\n//\n//                   // delete test image file\n//                   if (path.resolve('./testFile.png')) {\n//                     deleteFile(`./${res.body.answerimage}`);\n//                   }\n//                   done();\n//                 });\n//             });\n//         });\n//     });\n//     it('it should CREATE an answer without image', (done) => {\n//       request\n//         .post('/auth/v1/signup')\n//         .field('title', 'mr')\n//         .field('firstname', 'Justin')\n//         .field('lastname', 'Ikwuoma')\n//         .field('username', 'justman')\n//         .field('password', 'abc')\n//         .field('email', 'justin@gmail.com')\n//         .field('gender', 'male')\n//         .field('country', 'Nigeria')\n//         .field('phone', '66979649')\n//         .attach('userImage', '')\n//         .end((err1, res1) => {\n//           request\n//             .post('/v1/questions')\n//             .set('x-access-token', res1.body.token)\n//             .field('title', 'How far na')\n//             .field('question', 'I just wan no how u dey')\n//             .field('tags', 'java,javascript')\n//             .attach('questionImage', '')\n//             .end((err2, res2) => {\n//               request\n//                 .post(`/v1/questions/${res2.body.id}/answers`)\n//                 .set('x-access-token', res1.body.token)\n//                 .field('response', 'very fine')\n//                 .attach('answerImage', '')\n//                 .end((err, res) => {\n//                   res.should.have.status(201);\n//                   res.body.should.be.a('object');\n//                   res.body.should.have.property('response').eql('very fine');\n//                   res.body.should.have.property('userid').eql(res1.body.user.id);\n//                   res.body.should.have.property('accepted').eql(false);\n//                   res.body.should.have.property('vote').eql(0);\n//                   res.body.should.have.property('answerimage').eql('');\n//\n//                   done();\n//                 });\n//             });\n//         });\n//     });\n//     it('it should not CREATE an answer when image file type not jpg/png', (done) => {\n//       request\n//         .post('/auth/v1/signup')\n//         .field('title', 'mr')\n//         .field('firstname', 'Justin')\n//         .field('lastname', 'Ikwuoma')\n//         .field('username', 'justman')\n//         .field('password', 'abc')\n//         .field('email', 'justin@gmail.com')\n//         .field('gender', 'male')\n//         .field('country', 'Nigeria')\n//         .field('phone', '66979649')\n//         .attach('userImage', '')\n//         .end((err1, res1) => {\n//           request\n//             .post('/v1/questions')\n//             .set('x-access-token', res1.body.token)\n//             .field('title', 'How far na')\n//             .field('question', 'I just wan no how u dey')\n//             .field('tags', 'java,javascript')\n//             .attach('questionImage', '')\n//             .end((err2, res2) => {\n//               request\n//                 .post(`/v1/questions/${res2.body.id}/answers`)\n//                 .set('x-access-token', res1.body.token)\n//                 .field('response', 'very fine')\n//                 .attach('answerImage', './testFileType.txt')\n//                 .end((err, res) => {\n//                   res.should.have.status(403);\n//                   res.body.should.be.a('object');\n//                   res.body.should.have.property('message').eql('Only .png and .jpg files are allowed!');\n//                   res.body.should.have.property('error').eql(true);\n//\n//                   done();\n//                 });\n//             });\n//         });\n//     });\n//     it('it should not CREATE an answer when image file size is larger than 2mb', (done) => {\n//       request\n//         .post('/auth/v1/signup')\n//         .field('title', 'mr')\n//         .field('firstname', 'Justin')\n//         .field('lastname', 'Ikwuoma')\n//         .field('username', 'justman')\n//         .field('password', 'abc')\n//         .field('email', 'justin@gmail.com')\n//         .field('gender', 'male')\n//         .field('country', 'Nigeria')\n//         .field('phone', '66979649')\n//         .attach('userImage', '')\n//         .end((err1, res1) => {\n//           request\n//             .post('/v1/questions')\n//             .set('x-access-token', res1.body.token)\n//             .field('title', 'How far na')\n//             .field('question', 'I just wan no how u dey')\n//             .field('tags', 'java,javascript')\n//             .attach('questionImage', '')\n//             .end((err2, res2) => {\n//               request\n//                 .post(`/v1/questions/${res2.body.id}/answers`)\n//                 .set('x-access-token', res1.body.token)\n//                 .field('response', 'very fine')\n//                 .attach('answerImage', './testFileSize.jpg')\n//                 .end((err, res) => {\n//                   res.should.have.status(403);\n//                   res.body.should.be.a('object');\n//                   res.body.should.have.property('message')\n//                     .eql('file should not be more than 2mb!');\n//                   res.body.should.have.property('error').eql(true);\n//\n//                   done();\n//                 });\n//             });\n//         });\n//     });\n//     it('it should not CREATE an answer when a token is not provided', (done) => {\n//       request\n//         .post('/auth/v1/signup')\n//         .field('title', 'mr')\n//         .field('firstname', 'Justin')\n//         .field('lastname', 'Ikwuoma')\n//         .field('username', 'justman')\n//         .field('password', 'abc')\n//         .field('email', 'justin@gmail.com')\n//         .field('gender', 'male')\n//         .field('country', 'Nigeria')\n//         .field('phone', '66979649')\n//         .attach('userImage', '')\n//         .end((err1, res1) => {\n//           request\n//             .post('/v1/questions')\n//             .set('x-access-token', res1.body.token)\n//             .field('title', 'How far na')\n//             .field('question', 'I just wan no how u dey')\n//             .field('tags', 'java,javascript')\n//             .attach('questionImage', '')\n//             .end((err2, res2) => {\n//               request\n//                 .post(`/v1/questions/${res2.body.id}/answers`)\n//                 .field('response', 'very fine')\n//                 .attach('answerImage', './testFile.png')\n//                 .end((err, res) => {\n//                   res.should.have.status(401);\n//                   res.body.should.be.a('object');\n//                   res.body.should.have.property('auth').eql(false);\n//                   res.body.should.have.property('message').eql('No token provided.');\n//\n//                   done();\n//                 });\n//             });\n//         });\n//     });\n//     it('it should not CREATE an answer when it fails to authenticate token', (done) => {\n//       request\n//         .post('/auth/v1/signup')\n//         .field('title', 'mr')\n//         .field('firstname', 'Justin')\n//         .field('lastname', 'Ikwuoma')\n//         .field('username', 'justman')\n//         .field('password', 'abc')\n//         .field('email', 'justin@gmail.com')\n//         .field('gender', 'male')\n//         .field('country', 'Nigeria')\n//         .field('phone', '66979649')\n//         .attach('userImage', '')\n//         .end((err1, res1) => {\n//           request\n//             .post('/v1/questions')\n//             .set('x-access-token', res1.body.token)\n//             .field('title', 'How far na')\n//             .field('question', 'I just wan no how u dey')\n//             .field('tags', 'java,javascript')\n//             .attach('questionImage', '')\n//             .end((err2, res2) => {\n//               request\n//                 .post(`/v1/questions/${res2.body.id}/answers`)\n//                 .set('x-access-token', 'jdkjdfskjs43354mxxnzsdz.drfsff.srfsf35324')\n//                 .field('response', 'very fine')\n//                 .attach('answerImage', './testFile.png')\n//                 .end((err, res) => {\n//                   res.should.have.status(500);\n//                   res.body.should.be.a('object');\n//                   res.body.should.have.property('auth').eql(false);\n//                   res.body.should.have.property('message').eql('Failed to authenticate token.');\n//\n//                   done();\n//                 });\n//             });\n//         });\n//     });\n//     it('it should not CREATE an answer when user is delete but token exist', (done) => {\n//       request\n//         .post('/auth/v1/signup')\n//         .field('title', 'mr')\n//         .field('firstname', 'Justin')\n//         .field('lastname', 'Ikwuoma')\n//         .field('username', 'justman')\n//         .field('password', 'abc')\n//         .field('email', 'justin@gmail.com')\n//         .field('gender', 'male')\n//         .field('country', 'Nigeria')\n//         .field('phone', '66979649')\n//         .attach('userImage', '')\n//         .end((err1, res1) => {\n//           request\n//             .post('/v1/questions')\n//             .set('x-access-token', res1.body.token)\n//             .field('title', 'How far na')\n//             .field('question', 'I just wan no how u dey')\n//             .field('tags', 'java,javascript')\n//             .attach('questionImage', '')\n//             .end((err2, res2) => {\n//               User.destroy({ where: { id: res1.body.user.id } }).then(() => {\n//                 request\n//                   .post(`/v1/questions/${res2.body.id}/answers`)\n//                   .set('x-access-token', res1.body.token)\n//                   .field('response', 'very fine')\n//                   .attach('answerImage', './testFile.png')\n//                   .end((err, res) => {\n//                     res.should.have.status(400);\n//                     res.body.should.be.a('object');\n//                     res.body.should.have.property('message')\n//                       .eql('user has been removed from the database');\n//                     done();\n//                   });\n//               });\n//             });\n//         });\n//     });\n//   });\n//\n//   /*\n//    * Test the /PUT/:id route\n//    */\n//   describe('/PUT/:id answer', () => {\n//     it('it should UPDATE an answer given the answer id by the question author', (done) => {\n//       request\n//         .post('/auth/v1/signup')\n//         .field('title', 'mr')\n//         .field('firstname', 'Justin')\n//         .field('lastname', 'Ikwuoma')\n//         .field('username', 'justman')\n//         .field('password', 'abc')\n//         .field('email', 'justin@gmail.com')\n//         .field('gender', 'male')\n//         .field('country', 'Nigeria')\n//         .field('phone', '66979649')\n//         .attach('userImage', '')\n//         .end((err1, res1) => {\n//           request\n//             .post('/v1/questions')\n//             .set('x-access-token', res1.body.token)\n//             .field('title', 'How far na')\n//             .field('question', 'I just wan no how u dey')\n//             .field('tags', 'java,javascript')\n//             .attach('questionImage', '')\n//             .end((err2, res2) => {\n//               request\n//                 .post(`/v1/questions/${res2.body.id}/answers`)\n//                 .set('x-access-token', res1.body.token)\n//                 .field('response', 'very fine')\n//                 .attach('answerImage', '')\n//                 .end((err, res) => {\n//                   request\n//                     .put(`/v1/questions/${res2.body.id}/answers/${res.body.id}`)\n//                     .set('x-access-token', res1.body.token)\n//                     .field('accepted', true)\n//                     .end((err, res) => {\n//                       res.should.have.status(200);\n//                       res.body.should.be.a('object');\n//                       res.body.should.have.property('response').eql('very fine');\n//                       res.body.should.have.property('userid').eql(res1.body.user.id);\n//                       res.body.should.have.property('accepted').eql(true);\n//                       res.body.should.have.property('vote').eql(0);\n//                       res.body.should.have.property('answerimage').eql('');\n//                       done();\n//                     });\n//                 });\n//             });\n//         });\n//     });\n//\n//     it('it should UPDATE an answer given the answer id by the answer author', (done) => {\n//       request\n//         .post('/auth/v1/signup')\n//         .field('title', 'mr')\n//         .field('firstname', 'Justin')\n//         .field('lastname', 'Ikwuoma')\n//         .field('username', 'justman')\n//         .field('password', 'abc')\n//         .field('email', 'justin@gmail.com')\n//         .field('gender', 'male')\n//         .field('country', 'Nigeria')\n//         .field('phone', '66979649')\n//         .attach('userImage', '')\n//         .end((err1, res1) => {\n//           request\n//             .post('/v1/questions')\n//             .set('x-access-token', res1.body.token)\n//             .field('title', 'How far na')\n//             .field('question', 'I just wan no how u dey')\n//             .field('tags', 'java,javascript')\n//             .attach('questionImage', '')\n//             .end((err2, res2) => {\n//               request\n//                 .post(`/v1/questions/${res2.body.id}/answers`)\n//                 .set('x-access-token', res1.body.token)\n//                 .field('response', 'very fine')\n//                 .attach('answerImage', '')\n//                 .end((err, res) => {\n//                   request\n//                     .put(`/v1/questions/${res2.body.id}/answers/${res.body.id}`)\n//                     .set('x-access-token', res1.body.token)\n//                     .field('response', 'i am ok')\n//                     .attach('answerImage', './testFile.png')\n//                     .end((err, res) => {\n//                       res.should.have.status(200);\n//                       res.body.should.be.a('object');\n//                       res.body.should.have.property('response').eql('i am ok');\n//                       res.body.should.have.property('userid').eql(res1.body.user.id);\n//                       res.body.should.have.property('accepted').eql(false);\n//                       res.body.should.have.property('vote').eql(0);\n//                       res.body.should.have.property('answerimage').eql(res.body.answerimage);\n//\n//                       // delete test image file\n//                       if (path.resolve('./testFile.png')) {\n//                         deleteFile(`./${res.body.answerimage}`);\n//                       }\n//                       done();\n//                     });\n//                 });\n//             });\n//         });\n//     });\n//     it('it should not UPDATE an answer given the wrong answer id', (done) => {\n//       request\n//         .post('/auth/v1/signup')\n//         .field('title', 'mr')\n//         .field('firstname', 'Justin')\n//         .field('lastname', 'Ikwuoma')\n//         .field('username', 'justman')\n//         .field('password', 'abc')\n//         .field('email', 'justin@gmail.com')\n//         .field('gender', 'male')\n//         .field('country', 'Nigeria')\n//         .field('phone', '66979649')\n//         .attach('userImage', '')\n//         .end((err1, res1) => {\n//           request\n//             .post('/v1/questions')\n//             .set('x-access-token', res1.body.token)\n//             .field('title', 'How far na')\n//             .field('question', 'I just wan no how u dey')\n//             .field('tags', 'java,javascript')\n//             .attach('questionImage', '')\n//             .end((err2, res2) => {\n//               request\n//                 .post(`/v1/questions/${res2.body.id}/answers`)\n//                 .set('x-access-token', res1.body.token)\n//                 .field('response', 'very fine')\n//                 .attach('answerImage', '')\n//                 .end(() => {\n//                   request\n//                     .put(`/v1/questions/${res2.body.id}/answers/-1`)\n//                     .set('x-access-token', res1.body.token)\n//                     .field('response', 'i am ok')\n//                     .attach('answerImage', './testFile.png')\n//                     .end((err, res) => {\n//                       res.should.have.status(404);\n//                       res.body.should.be.a('object');\n//                       res.body.should.have.property('message').eql('answer not found');\n//\n//                       done();\n//                     });\n//                 });\n//             });\n//         });\n//     });\n//     it('it should not UPDATE an answer given the wrong question id', (done) => {\n//       request\n//         .post('/auth/v1/signup')\n//         .field('title', 'mr')\n//         .field('firstname', 'Justin')\n//         .field('lastname', 'Ikwuoma')\n//         .field('username', 'justman')\n//         .field('password', 'abc')\n//         .field('email', 'justin@gmail.com')\n//         .field('gender', 'male')\n//         .field('country', 'Nigeria')\n//         .field('phone', '66979649')\n//         .attach('userImage', '')\n//         .end((err1, res1) => {\n//           request\n//             .post('/v1/questions')\n//             .set('x-access-token', res1.body.token)\n//             .field('title', 'How far na')\n//             .field('question', 'I just wan no how u dey')\n//             .field('tags', 'java,javascript')\n//             .attach('questionImage', '')\n//             .end((err2, res2) => {\n//               request\n//                 .post(`/v1/questions/${res2.body.id}/answers`)\n//                 .set('x-access-token', res1.body.token)\n//                 .field('response', 'very fine')\n//                 .attach('answerImage', '')\n//                 .end((err, res) => {\n//                   request\n//                     .put(`/v1/questions/-1/answers/${res.body.id}`)\n//                     .set('x-access-token', res1.body.token)\n//                     .field('response', 'i am ok')\n//                     .attach('answerImage', './testFile.png')\n//                     .end((err, res) => {\n//                       res.should.have.status(404);\n//                       res.body.should.be.a('object');\n//                       res.body.should.have.property('message').eql('question not found');\n//\n//                       done();\n//                     });\n//                 });\n//             });\n//         });\n//     });\n//     it(`it should UPDATE an answer given the id and\n//     maintain already existing fields and file if none is entered`, (done) => {\n//       request\n//         .post('/auth/v1/signup')\n//         .field('title', 'mr')\n//         .field('firstname', 'Justin')\n//         .field('lastname', 'Ikwuoma')\n//         .field('username', 'justman')\n//         .field('password', 'abc')\n//         .field('email', 'justin@gmail.com')\n//         .field('gender', 'male')\n//         .field('country', 'Nigeria')\n//         .field('phone', '66979649')\n//         .attach('userImage', '')\n//         .end((err1, res1) => {\n//           request\n//             .post('/v1/questions')\n//             .set('x-access-token', res1.body.token)\n//             .field('title', 'How far na')\n//             .field('question', 'I just wan no how u dey')\n//             .field('tags', 'java,javascript')\n//             .attach('questionImage', '')\n//             .end((err2, res2) => {\n//               request\n//                 .post(`/v1/questions/${res2.body.id}/answers`)\n//                 .set('x-access-token', res1.body.token)\n//                 .field('response', 'very fine')\n//                 .attach('answerImage', './testFile.png')\n//                 .end((err, res) => {\n//                   request\n//                     .put(`/v1/questions/${res2.body.id}/answers/${res.body.id}`)\n//                     .set('x-access-token', res1.body.token)\n//                     .field('response', '')\n//                     .attach('answerImage', '')\n//                     .end((err, res) => {\n//                       res.should.have.status(200);\n//                       res.body.should.be.a('object');\n//                       res.body.should.have.property('response').eql('very fine');\n//                       res.body.should.have.property('userid').eql(res1.body.user.id);\n//                       res.body.should.have.property('accepted').eql(false);\n//                       res.body.should.have.property('vote').eql(0);\n//                       res.body.should.have.property('answerimage').eql(res.body.answerimage);\n//\n//                       // delete test image file\n//                       if (path.resolve('./testFile.png')) {\n//                         deleteFile(`./${res.body.answerimage}`);\n//                       }\n//                       done();\n//                     });\n//                 });\n//             });\n//         });\n//     });\n//     it('it should UPDATE a answer given the id and replace already existing file', (done) => {\n//       request\n//         .post('/auth/v1/signup')\n//         .field('title', 'mr')\n//         .field('firstname', 'Justin')\n//         .field('lastname', 'Ikwuoma')\n//         .field('username', 'justman')\n//         .field('password', 'abc')\n//         .field('email', 'justin@gmail.com')\n//         .field('gender', 'male')\n//         .field('country', 'Nigeria')\n//         .field('phone', '66979649')\n//         .attach('userImage', '')\n//         .end((err1, res1) => {\n//           request\n//             .post('/v1/questions')\n//             .set('x-access-token', res1.body.token)\n//             .field('title', 'How far na')\n//             .field('question', 'I just wan no how u dey')\n//             .field('tags', 'java,javascript')\n//             .attach('questionImage', '')\n//             .end((err2, res2) => {\n//               request\n//                 .post(`/v1/questions/${res2.body.id}/answers`)\n//                 .set('x-access-token', res1.body.token)\n//                 .field('response', 'very fine')\n//                 .attach('answerImage', './testFile.png')\n//                 .end((err, res) => {\n//                   request\n//                     .put(`/v1/questions/${res2.body.id}/answers/${res.body.id}`)\n//                     .set('x-access-token', res1.body.token)\n//                     .field('response', '')\n//                     .attach('answerImage', './testFile.png')\n//                     .end((err, res) => {\n//                       res.should.have.status(200);\n//                       res.body.should.be.a('object');\n//                       res.body.should.have.property('response').eql('very fine');\n//                       res.body.should.have.property('userid').eql(res1.body.user.id);\n//                       res.body.should.have.property('accepted').eql(false);\n//                       res.body.should.have.property('vote').eql(0);\n//                       res.body.should.have.property('answerimage').eql(res.body.answerimage);\n//\n//                       // delete test image file\n//                       if (path.resolve('./testFile.png')) {\n//                         deleteFile(`./${res.body.answerimage}`);\n//                       }\n//                       done();\n//                     });\n//                 });\n//             });\n//         });\n//     });\n//     it('it should not UPDATE an answer when image file type not jpg/png', (done) => {\n//       request\n//         .post('/auth/v1/signup')\n//         .field('title', 'mr')\n//         .field('firstname', 'Justin')\n//         .field('lastname', 'Ikwuoma')\n//         .field('username', 'justman')\n//         .field('password', 'abc')\n//         .field('email', 'justin@gmail.com')\n//         .field('gender', 'male')\n//         .field('country', 'Nigeria')\n//         .field('phone', '66979649')\n//         .attach('userImage', '')\n//         .end((err1, res1) => {\n//           request\n//             .post('/v1/questions')\n//             .set('x-access-token', res1.body.token)\n//             .field('title', 'How far na')\n//             .field('question', 'I just wan no how u dey')\n//             .field('tags', 'java,javascript')\n//             .attach('questionImage', '')\n//             .end((err2, res2) => {\n//               request\n//                 .post(`/v1/questions/${res2.body.id}/answers`)\n//                 .set('x-access-token', res1.body.token)\n//                 .field('response', 'very fine')\n//                 .attach('answerImage', '')\n//                 .end((err, res) => {\n//                   request\n//                     .put(`/v1/questions/${res2.body.id}/answers/${res.body.id}`)\n//                     .set('x-access-token', res1.body.token)\n//                     .field('response', '')\n//                     .attach('answerImage', './testFileType.txt')\n//                     .end((err, res) => {\n//                       res.should.have.status(403);\n//                       res.body.should.be.a('object');\n//                       res.body.should.have.property('message').eql('Only .png and .jpg files are allowed!');\n//                       res.body.should.have.property('error').eql(true);\n//\n//                       done();\n//                     });\n//                 });\n//             });\n//         });\n//     });\n//     it(`it should not UPDATE a answer\n//     when image file size is larger than 2mb`, (done) => {\n//       request\n//         .post('/auth/v1/signup')\n//         .field('title', 'mr')\n//         .field('firstname', 'Justin')\n//         .field('lastname', 'Ikwuoma')\n//         .field('username', 'justman')\n//         .field('password', 'abc')\n//         .field('email', 'justin@gmail.com')\n//         .field('gender', 'male')\n//         .field('country', 'Nigeria')\n//         .field('phone', '66979649')\n//         .attach('userImage', '')\n//         .end((err1, res1) => {\n//           request\n//             .post('/v1/questions')\n//             .set('x-access-token', res1.body.token)\n//             .field('title', 'How far na')\n//             .field('question', 'I just wan no how u dey')\n//             .field('tags', 'java,javascript')\n//             .attach('questionImage', '')\n//             .end((err2, res2) => {\n//               request\n//                 .post(`/v1/questions/${res2.body.id}/answers`)\n//                 .set('x-access-token', res1.body.token)\n//                 .field('response', 'very fine')\n//                 .attach('answerImage', '')\n//                 .end((err, res) => {\n//                   request\n//                     .put(`/v1/questions/${res2.body.id}/answers/${res.body.id}`)\n//                     .set('x-access-token', res1.body.token)\n//                     .field('response', '')\n//                     .attach('answerImage', './testFileSize.jpg')\n//                     .end((err, res) => {\n//                       res.should.have.status(403);\n//                       res.body.should.be.a('object');\n//                       res.body.should.have.property('message').eql('file should not be more than 2mb!');\n//                       res.body.should.have.property('error').eql(true);\n//\n//                       done();\n//                     });\n//                 });\n//             });\n//         });\n//     });\n//     it('it should not UPDATE an answer when a token is not provided', (done) => {\n//       request\n//         .post('/auth/v1/signup')\n//         .field('title', 'mr')\n//         .field('firstname', 'Justin')\n//         .field('lastname', 'Ikwuoma')\n//         .field('username', 'justman')\n//         .field('password', 'abc')\n//         .field('email', 'justin@gmail.com')\n//         .field('gender', 'male')\n//         .field('country', 'Nigeria')\n//         .field('phone', '66979649')\n//         .attach('userImage', '')\n//         .end((err1, res1) => {\n//           request\n//             .post('/v1/questions')\n//             .set('x-access-token', res1.body.token)\n//             .field('title', 'How far na')\n//             .field('question', 'I just wan no how u dey')\n//             .field('tags', 'java,javascript')\n//             .attach('questionImage', '')\n//             .end((err2, res2) => {\n//               request\n//                 .post(`/v1/questions/${res2.body.id}/answers`)\n//                 .set('x-access-token', res1.body.token)\n//                 .field('response', 'very fine')\n//                 .attach('answerImage', '')\n//                 .end((err, res) => {\n//                   request\n//                     .put(`/v1/questions/${res2.body.id}/answers/${res.body.id}`)\n//                     .field('response', '')\n//                     .attach('answerImage', '')\n//                     .end((err, res) => {\n//                       res.should.have.status(401);\n//                       res.body.should.be.a('object');\n//                       res.body.should.have.property('auth').eql(false);\n//                       res.body.should.have.property('message').eql('No token provided.');\n//\n//                       done();\n//                     });\n//                 });\n//             });\n//         });\n//     });\n//     it('it should not UPDATE a answer when it fails to authenticate token.', (done) => {\n//       request\n//         .post('/auth/v1/signup')\n//         .field('title', 'mr')\n//         .field('firstname', 'Justin')\n//         .field('lastname', 'Ikwuoma')\n//         .field('username', 'justman')\n//         .field('password', 'abc')\n//         .field('email', 'justin@gmail.com')\n//         .field('gender', 'male')\n//         .field('country', 'Nigeria')\n//         .field('phone', '66979649')\n//         .attach('userImage', '')\n//         .end((err1, res1) => {\n//           request\n//             .post('/v1/questions')\n//             .set('x-access-token', res1.body.token)\n//             .field('title', 'How far na')\n//             .field('question', 'I just wan no how u dey')\n//             .field('tags', 'java,javascript')\n//             .attach('questionImage', '')\n//             .end((err2, res2) => {\n//               request\n//                 .post(`/v1/questions/${res2.body.id}/answers`)\n//                 .set('x-access-token', res1.body.token)\n//                 .field('response', 'very fine')\n//                 .attach('answerImage', '')\n//                 .end((err, res) => {\n//                   request\n//                     .put(`/v1/questions/${res2.body.id}/answers/${res.body.id}`)\n//                     .set('x-access-token', 'nmdhnjf.njfjfj.fkfkfk')\n//                     .field('response', '')\n//                     .attach('answerImage', '')\n//                     .end((err, res) => {\n//                       res.should.have.status(500);\n//                       res.body.should.be.a('object');\n//                       res.body.should.have.property('auth').eql(false);\n//                       res.body.should.have.property('message').eql('Failed to authenticate token.');\n//\n//                       done();\n//                     });\n//                 });\n//             });\n//         });\n//     });\n//     it('it should not UPDATE a answer when user is unauthorize.', (done) => {\n//       request\n//         .post('/auth/v1/signup')\n//         .field('title', 'mr')\n//         .field('firstname', 'Justin')\n//         .field('lastname', 'Ikwuoma')\n//         .field('username', 'justman')\n//         .field('password', 'abc')\n//         .field('email', 'justin@gmail.com')\n//         .field('gender', 'male')\n//         .field('country', 'Nigeria')\n//         .field('phone', '66979649')\n//         .attach('userImage', '')\n//         .end((err1, res1) => {\n//           request\n//             .post('/v1/questions')\n//             .set('x-access-token', res1.body.token)\n//             .field('title', 'How far na')\n//             .field('question', 'I just wan no how u dey')\n//             .field('tags', 'java,javascript')\n//             .attach('questionImage', '')\n//             .end((err2, res2) => {\n//               Answer.create({ response: 'very fine', answerImage: '' }).then((answer) => {\n//                 request\n//                   .put(`/v1/questions/${res2.body.id}/answers/${answer.rows[0].id}`)\n//                   .set('x-access-token', res1.body.token)\n//                   .field('response', '')\n//                   .attach('answerImage', '')\n//                   .end((err, res) => {\n//                     res.should.have.status(403);\n//                     res.body.should.be.a('object');\n//                     res.body.should.have.property('auth').eql(false);\n//                     res.body.should.have.property('message').eql('User not allowed');\n//\n//                     done();\n//                   });\n//               });\n//             });\n//         });\n//     });\n//   });\n// });\n"]}