{"version":3,"sources":["errorHandler.js"],"names":["fsHelper","deleteFile","imageStorage","deleteImageFromStorage","isNumber","Number","isNaN","parseFloat","n","isFloat","errorHandler","createHandlerError","error","res","fileName","status","send","notFoundHandlerError","fieldName","filePath","message","incompleteFieldHandlerError","fileHandleError","json","usernameHandlerError","emailHandlerError","phoneHandlerError","questionHandlerError","userNotPrestentHandlerError","noTokenHandlerError","auth","failedAuthHandlerError","parametersHandlerError","req","params","questionId","isInteger","parseInt"],"mappings":"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","file":"errorHandler.js","sourceRoot":"/home/somto/1Projects/mentorship project/StackOverflow-lite/server/server/controllers/utilities","sourcesContent":["import fsHelper from '../../../utilities/fileSystem';\nimport imageStorage from './filebaseStorage';\n\nconst [deleteFile] = [fsHelper.deleteFile];// Delete file helper method\nconst [deleteImageFromStorage] = [imageStorage.deleteImageFromStorage];\n\n// number validation\nconst isNumber = n => !Number.isNaN(parseFloat(n));\n\nconst isFloat = n => Number(n) === n && n % 1 !== 0;\n\nconst errorHandler = {\n  createHandlerError(error, res, fileName) {\n    // if (filePath) deleteFile(`./${filePath}`);\n    if(fileName) deleteImageFromStorage(fileName); // if file uploads delete it\n    return res.status(400).send(error);\n  },\n  notFoundHandlerError(fieldName, res, filePath) {\n    // if (filePath) deleteFile(`./${filePath}`); // if file uploads delete it\n    return res.status(404).send({ message: `${fieldName} not found` });\n  },\n  incompleteFieldHandlerError(res) {\n    return res.status(206).send({ message: 'Incomplete field' });\n  },\n  fileHandleError(res, message) { // file type handleError\n    return res.status(403).json({ message: message, error: true });\n  },\n  usernameHandlerError(res) {\n    return res.status(400).send({ message: 'username already exists' });\n  },\n  emailHandlerError(res) {\n    return res.status(400).send({ message: 'email already exists' });\n  },\n  phoneHandlerError(res) {\n    return res.status(400).send({ message: 'phone already exists' });\n  },\n  questionHandlerError(res) {\n    return res.status(400).send({ message: 'question already exists' });\n  },\n  userNotPrestentHandlerError(res, fileName) {\n    if(fileName) deleteImageFromStorage(fileName); // if file uploads delete it\n    return res.status(400).send({ message: 'user has been removed from the database' });\n  },\n  noTokenHandlerError(res) {\n    return res.status(401).send({ auth: false, message: 'No token provided.' });\n  },\n  failedAuthHandlerError(res) {\n    return res.status(500).send({ auth: false, message: 'Failed to authenticate token.' });\n  },\n  parametersHandlerError(req) {\n    if (!isNumber(req.params.questionId) || !Number.isInteger(parseInt(req.params.questionId, 10))\n        || req.params.questionId > 1000000000 || isFloat(parseFloat(req.params.questionId))) {\n      return true;\n    } return false;\n  }\n};\n\nexport default errorHandler;\n"]}