{"version":3,"sources":["users-spec.js"],"names":["chai","should","use","chaiHttp","request","app","model","User","copyFile","src","dest","readStream","fs","createReadStream","pipe","createWriteStream","deleteFile","targetPath","unlink","err","describe","beforeEach","done","destroy","where","force","then","it","post","field","attach","end","res","have","status","body","be","a","property","eql","user","id","password","userimage","token","path","resolve","create","title","firstname","lastname","username","email","gender","country","phone","userImage","send","message","dob"],"mappings":"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","file":"users-spec.js","sourceRoot":"/home/somto/1Projects/mentorship project/StackOverflow-lite/server/test","sourcesContent":["import chai from 'chai';\nimport supertest from 'supertest';\nimport fs from 'file-system';\nimport path from 'path';\nimport chaiHttp from 'chai-http';\n\nimport app from '../app';\nimport model from '../server/models';\n\nchai.should();\nchai.use(chaiHttp);\nconst request = supertest(app);\nconst [User] = [model.User];\n\n/**\n * copy file from a directory to another\n * @param {String} src The source you are copying from.\n * @param {String} dest The destination you are copying to.\n * @returns {void} nothing.\n */\nconst copyFile = (src, dest) => {\n  const readStream = fs.createReadStream(src);\n\n  readStream.pipe(fs.createWriteStream(dest));\n};\n\n/**\n * delete a file\n * @param {String} targetPath The part to delete from\n * @returns {void} nothing.\n */\nconst deleteFile = (targetPath) => {\n  fs.unlink(targetPath, (err) => {\n    if (err) throw err;\n  });\n};\n\ndescribe('Users', () => {\n  beforeEach((done) => { // Before each test we empty the database\n    User.destroy({ where: {}, force: true }).then(() => done());\n  });\n\n  describe('/POST user', () => {\n    it(`it should not CREATE a user without firstname, lastname, username, password,\n     email, gender, country, phone`, (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', '')\n        .field('lastname', '')\n        .field('username', '')\n        .field('password', '')\n        .field('email', '')\n        .field('gender', '')\n        .field('country', '')\n        .field('phone', '')\n        .attach('userImage', './testFile.png')\n        .end((err, res) => {\n          res.should.have.status(206);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql('Incomplete field');\n          done();\n        });\n    });\n\n    it('it should CREATE a user', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman')\n        .field('password', 'abc')\n        .field('email', 'justin@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('phone', '66976498')\n        .attach('userImage', './testFile.png')\n\n        .end((err, res) => {\n          // res.should.have.status(201);\n          res.body.should.be.a('object');\n          res.body.user.should.have.property('id').eql(res.body.user.id);\n          res.body.user.should.have.property('firstname').eql('Justin');\n          res.body.user.should.have.property('lastname').eql('Ikwuoma');\n          res.body.user.should.have.property('username').eql('justman');\n          res.body.user.should.have.property('email').eql('justin@gmail.com');\n          res.body.user.should.have.property('password').eql(res.body.user.password);\n          res.body.user.should.have.property('gender').eql('male');\n          res.body.user.should.have.property('country').eql('Nigeria');\n          res.body.user.should.have.property('userimage').eql(res.body.user.userimage);\n          res.body.should.have.property('auth').eql(true);\n          res.body.should.have.property('token').eql(res.body.token);\n\n          // delete test image file\n          if (path.resolve('./testFile.png')) {\n            deleteFile(`./${res.body.user.userimage}`);\n          }\n          done();\n        });\n    });\n\n    it('it should CREATE a user without image', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman1')\n        .field('password', 'abc')\n        .field('email', 'justin1@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('phone', '669796498')\n        .attach('userImage', '')\n        .end((err, res) => {\n          res.should.have.status(201);\n          res.body.should.be.a('object');\n          res.body.user.should.have.property('id').eql(res.body.user.id);\n          res.body.user.should.have.property('firstname').eql('Justin');\n          res.body.user.should.have.property('lastname').eql('Ikwuoma');\n          res.body.user.should.have.property('username').eql('justman1');\n          res.body.user.should.have.property('email').eql('justin1@gmail.com');\n          res.body.user.should.have.property('password').eql(res.body.user.password);\n          res.body.user.should.have.property('gender').eql('male');\n          res.body.user.should.have.property('country').eql('Nigeria');\n          res.body.user.should.have.property('userimage').eql('');\n          res.body.should.have.property('auth').eql(true);\n          res.body.should.have.property('token').eql(res.body.token);\n\n          done();\n        });\n    });\n\n\n    it('it should not CREATE a user when image file type not jpg/png', (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman2')\n        .field('password', 'abc')\n        .field('email', 'justin2@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('dob', '2015-11-04')\n        .attach('userImage', './testFileType.txt')\n        .end((err, res) => {\n          res.should.have.status(403);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql('Only .png and .jpg files are allowed!');\n          res.body.should.have.property('error').eql(true);\n          done();\n        });\n    });\n\n    it(`it should not CREATE a user\n      when image file size is larger than 2mb`, (done) => {\n      request\n        .post('/auth/v1/signup')\n        .field('title', 'mr')\n        .field('firstname', 'Justin')\n        .field('lastname', 'Ikwuoma')\n        .field('username', 'justman3')\n        .field('password', 'abc')\n        .field('email', 'justin3@gmail.com')\n        .field('gender', 'male')\n        .field('country', 'Nigeria')\n        .field('phone', '366976498')\n        .attach('userImage', './testFileSize.jpg')\n        .end((err, res) => {\n          res.should.have.status(403);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message')\n            .eql('file should not be more than 2mb!');\n          res.body.should.have.property('error').eql(true);\n          done();\n        });\n    });\n\n    it('it should not CREATE a user if username already exist', (done) => {\n      User.create({\n        title: 'mr',\n        firstname: 'Justin',\n        lastname: 'Ikwuoma',\n        username: 'justman4',\n        password: 'abc',\n        email: 'justin4@gmail.com',\n        gender: 'male',\n        country: 'Nigeria',\n        phone: '4466976498',\n        userImage: ''\n      }).then(() => {\n        request\n          .post('/auth/v1/signup')\n          .field('title', 'mr')\n          .field('firstname', 'Justin')\n          .field('lastname', 'Ikwuoma')\n          .field('username', 'justman4')\n          .field('password', 'abc')\n          .field('email', 'justin1@gmail.com')\n          .field('gender', 'male')\n          .field('country', 'Nigeria')\n          .field('phone', '669796498')\n          .attach('userImage', '')\n          .end((err, res) => {\n            res.should.have.status(400);\n            res.body.should.be.a('object');\n            res.body.should.have.property('message').eql('username already exists');\n            done();\n          });\n      });\n    });\n\n    it('it should not CREATE a user if email already exist', (done) => {\n      User.create({\n        title: 'mr',\n        firstname: 'Justin',\n        lastname: 'Ikwuoma',\n        username: 'justman4',\n        password: 'abc',\n        email: 'justin4@gmail.com',\n        gender: 'male',\n        country: 'Nigeria',\n        phone: '4466976498',\n        userImage: ''\n      }).then(() => {\n        request\n          .post('/auth/v1/signup')\n          .field('title', 'mr')\n          .field('firstname', 'Justin1')\n          .field('lastname', 'Ikwuoma')\n          .field('username', 'justman4')\n          .field('password', 'abc')\n          .field('email', 'justin4@gmail.com')\n          .field('gender', 'male')\n          .field('country', 'Nigeria')\n          .field('phone', '669796498')\n          .attach('userImage', '')\n          .end((err, res) => {\n            res.should.have.status(400);\n            res.body.should.be.a('object');\n            res.body.should.have.property('message').eql('username already exists');\n            done();\n          });\n      });\n    });\n\n    it('it should not CREATE a user if phone already exist', (done) => {\n      User.create({\n        title: 'mr',\n        firstname: 'Justin',\n        lastname: 'Ikwuoma',\n        username: 'justman4',\n        password: 'abc',\n        email: 'justin4@gmail.com',\n        gender: 'male',\n        country: 'Nigeria',\n        phone: '669796498',\n        userImage: ''\n      }).then(() => {\n        request\n          .post('/auth/v1/signup')\n          .field('title', 'mr')\n          .field('firstname', 'Justin1')\n          .field('lastname', 'Ikwuoma')\n          .field('username', 'justman4')\n          .field('password', 'abc')\n          .field('email', 'justin@gmail.com')\n          .field('gender', 'male')\n          .field('country', 'Nigeria')\n          .field('phone', '669796498')\n          .attach('userImage', '')\n          .end((err, res) => {\n            res.should.have.status(400);\n            res.body.should.be.a('object');\n            res.body.should.have.property('message').eql('username already exists');\n            done();\n          });\n      });\n    });\n\n    it('it should not get a particular user if POST a wrong username && password', (done) => {\n      User.create({\n        title: 'mr',\n        firstname: 'justin',\n        lastname: 'Ikwuoma',\n        username: 'justman5',\n        password: 'abc',\n        email: 'justin5@gmail.com',\n        gender: 'male',\n        country: 'Nigeria',\n        phone: '566976498',\n        userImage: ''\n      }).then(() => {\n        request\n          .post('/auth/v1/login')\n          .send({ username: 'just', password: 'abc' })\n          .end((err, res) => {\n            res.should.have.status(404);\n            res.body.should.be.a('object');\n            res.body.message.should.be.eql('User not found');\n            done();\n          });\n      });\n    });\n\n    it('it should POST username && password and get the particular user', (done) => {\n      User.create({\n        title: 'mr',\n        firstname: 'Justin',\n        lastname: 'Ikwuoma',\n        username: 'justman5',\n        password: 'abc',\n        email: 'justin5@gmail.com',\n        gender: 'male',\n        country: 'Nigeria',\n        dob: '2015-11-04',\n        phone: '566976498',\n        userImage: ''\n      }).then(() => {\n        request\n          .post('/auth/v1/login')\n          .send({ username: 'justman5', password: 'abc' })\n          .end((err, res) => {\n            res.should.have.status(200);\n            res.body.should.be.a('object');\n            res.body.user.should.have.property('id');\n            res.body.user.should.have.property('firstname').eql('Justin');\n            res.body.user.should.have.property('lastname').eql('Ikwuoma');\n            res.body.user.should.have.property('username').eql('justman5');\n            res.body.user.should.have.property('email').eql('justin5@gmail.com');\n            res.body.user.should.have.property('password').eql(res.body.user.password);\n            res.body.user.should.have.property('userimage').eql('');\n            res.body.should.have.property('auth').eql(true);\n            res.body.should.have.property('token').eql(res.body.token);\n            done();\n          });\n      });\n    });\n  });\n});\n"]}