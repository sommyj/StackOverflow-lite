{"version":3,"sources":["user.js"],"names":["User","create","data","queryStatement","text","values","title","firstname","lastname","username","password","email","gender","country","phone","userImage","findOne","name","where","destroy","id","force"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,OAAO;AACXC,QADW,kBACJC,IADI,EACE;AACT;AACA,QAAMC,iBAAe;AACnBC,8LADmB;AAGnBC,cAAQ,CAACH,KAAKI,KAAN,EAAaJ,KAAKK,SAAlB,EAA6BL,KAAKM,QAAlC,EAA4CN,KAAKO,QAAjD,EAA2DP,KAAKQ,QAAhE,EAA0ER,KAAKS,KAA/E,EAAsFT,KAAKU,MAA3F,EACRV,KAAKW,OADG,EACMX,KAAKY,KADX,EACkBZ,KAAKa,SADvB;;AAIV;AAPqB,KAArB,CAQA,OAAO,qBAAMZ,cAAN,CAAP;AAEH,GAbU;AAcXa,SAdW,mBAcHd,IAdG,EAcG;AACZ,QAAMC,iBAAiB;AACrB;AACAc,YAAM,YAFe;AAGrBb,YAAM,2DAHe;AAIrBC,cAAQ,CAACH,KAAKgB,KAAL,CAAWT,QAAZ,EAAsBP,KAAKgB,KAAL,CAAWR,QAAjC;;AAGV;AAPuB,KAAvB,CAQA,OAAO,qBAAMP,cAAN,CAAP;AAED,GAzBU;AA0BXgB,SA1BW,mBA0BHjB,IA1BG,EA0BG;AACZ,QAAIC,uBAAJ;AACA,QAAG,CAACD,KAAKgB,KAAL,CAAWE,EAAZ,IAAkBlB,KAAKmB,KAA1B,EAAgC;AAC9BlB,uBAAiB;AACjBC;AADiB,OAAjB;AAGD,KAJD,MAKK;AACHD,uBAAiB;AACfC,+CADe;AAEfC,gBAAQ,CAACH,KAAKgB,KAAL,CAAWE,EAAZ;AAFO,OAAjB;AAID;;AAED;AACA,WAAO,qBAAMjB,cAAN,CAAP;AACD;AA1CU,CAAb;;kBA6CeH,I","file":"user.js","sourceRoot":"/home/somto/1Projects/mentorship project/StackOverflow-lite/server/server/models","sourcesContent":["import query from './database/query.js'\n\nconst User = {\n  create(data) {\n      // SQL Query > Insert Data\n      const queryStatement={\n        text: `INSERT INTO users(title, firstname, lastname, username, password, email, gender,\n        country, phone, userImage) values($1, $2, $3, $4, $5, $6, $7, $8, $9, $10) RETURNING *`,\n        values: [data.title, data.firstname, data.lastname, data.username, data.password, data.email, data.gender,\n        data.country, data.phone, data.userImage],\n      }\n\n      //require our query executor into our model\n      return query(queryStatement);\n\n  },\n  findOne(data) {\n    const queryStatement = {\n      // give the query a unique username and password\n      name: 'fetch-user',\n      text: 'SELECT * FROM users WHERE username = $1 AND password = $2',\n      values: [data.where.username, data.where.password]\n    }\n\n    //require our query executor into our model\n    return query(queryStatement);\n\n  },\n  destroy(data) {\n    let queryStatement;\n    if(!data.where.id && data.force){\n      queryStatement = {\n      text: `DELETE FROM users`,\n      }\n    }\n    else {\n      queryStatement = {\n        text: `DELETE FROM users WHERE id=($1)`,\n        values: [data.where.id],\n      }\n    }\n\n    //require our query executor into our model\n    return query(queryStatement);\n  }\n}\n\nexport default User;\n"]}